#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrreprt
\begin_preamble
\usepackage[dvipsnames]{xcolor}
\usepackage{listings}
\end_preamble
\options abstracton
\use_default_options true
\begin_modules
customHeadersFooters
enumitem
fixltx2e
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref true
\pdf_title "MARS Manual"
\pdf_author "Thomas Schöbel-Theuer"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3.7cm
\topmargin 2.7cm
\rightmargin 2.8cm
\bottommargin 2.3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle headings
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\family typewriter
MARS Manual
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\begin_layout Subtitle
Multiversion Asynchronous Replicated Storage
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename images/earth-mars-transfer.fig
	width 70col%

\end_inset


\end_layout

\begin_layout Author
Thomas Schöbel-Theuer (
\family typewriter
tst@1und1.de
\family default
)
\end_layout

\begin_layout Date
Version 0.15
\end_layout

\begin_layout Lowertitleback
\noindent
Copyright (C) 2013 Thomas Schöbel-Theuer / 1&1 Internet AG
\begin_inset Newline newline
\end_inset

(see 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.1und1.de
\end_layout

\end_inset

 shortly called 1&1 in the following).
\begin_inset Newline newline
\end_inset


\size footnotesize
Permission is granted to copy, distribute and/or modify this document under
 the terms of the GNU Free Documentation License, Version 1.3 or any later
 version published by the Free Software Foundation; with no Invariant Sections,
 no Front-Cover Texts, and no Back-Cover Texts.
 A copy of the license is included in the section entitled 
\begin_inset Quotes eld
\end_inset


\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:GNU-FDL"

\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Abstract

\family typewriter
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
sloppy
\end_layout

\end_inset

 MARS
\family default
 Light is a block-level storage replication system for long distances /
 flaky networks under GPL.
 It runs as a Linux kernel module.
 The sysadmin interface is similar to DRBD
\begin_inset Foot
status open

\begin_layout Plain Layout
Registered trademarks are the property of their respective owner.
\end_layout

\end_inset

, but its internal engine is completely different from DRBD: it works with
 
\series bold
transaction logging
\series default
, similar to some database systems.
\end_layout

\begin_layout Abstract
Therefore, MARS Light can provide stronger 
\series bold
consistency guarantees
\series default
.
 Even in case of network bottlenecks / problems / failures, the secondaries
 may become outdated (reflect an elder state), but never become inconsistent.
 In contrast to DRBD, MARS Light preserves the 
\series bold
order of write operations
\series default
 even when the network is flaky (
\series bold
Anytime Consistency
\series default
).
\end_layout

\begin_layout Abstract
The current version of MARS Light works 
\series bold
asynchronously
\series default
.
 Therefore, application performance is completely decoupled from any network
 problems.
 Future versions are planned to also support synchronous or near-synchronous
 modes.
\end_layout

\begin_layout Abstract
\paragraph_spacing double
\noindent
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 1
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/earth-mars-transfer.fig
	width 70col%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Use Cases for MARS vs DRBD
\begin_inset CommandInset label
LatexCommand label
name "chap:Use-Cases-for"

\end_inset


\end_layout

\begin_layout Standard
DRBD has a long history of successfully providing HA features to many users
 of Linux.
 With the advent of MARS, many people are wondering what the difference
 is.
 They ask for recommendations.
 In which use cases should DRBD be recommended, and in which other cases
 is MARS the better choice?
\end_layout

\begin_layout Standard
There exist 
\emph on
some
\emph default
 cases where DRBD is better than MARS.
 1&1 has a long history of experiences with DRBD where it works very fine,
 in particular coupling Linux devices rack-to-rack via crossover cables.
 DRBD is just 
\emph on
constructed
\emph default
 for that use case (RAID-1 over network).
\end_layout

\begin_layout Standard
On the other hand, there exist other cases where DRBD did not work as expected,
 leading to incidents and other operational problems.
 We analyzed them for those use cases, and found that they could only be
 resolved by fundamental changes in the overall architecture of DRBD.
 Therefore, we started the development of MARS.
\end_layout

\begin_layout Standard
MARS and DRBD simply have 
\series bold
different application areas
\series default
.
\end_layout

\begin_layout Standard
In the following, we will discuss the pros and cons of each system in particular
 situations and contexts, and we shed some light at their conceptual and
 operational differences.
\end_layout

\begin_layout Section
Network Bottlenecks
\begin_inset CommandInset label
LatexCommand label
name "sec:Network-Bottlenecks"

\end_inset


\end_layout

\begin_layout Subsection
Behaviour of DRBD
\begin_inset CommandInset label
LatexCommand label
name "sub:Behaviour-of-DRBD"

\end_inset


\end_layout

\begin_layout Standard
In order to describe the most important problem we found when DRBD was used
 to couple whole datacenters (each encompassing thousands of servers) over
 metro distances, we strip down that complicated real-life scenario to a
 simplified laboratory scenario in order to demonstrate the effect with
 minimal means.
 The following picture illustrates an effect which is not only observable
 in practice, but is also reproducible by the MARS test suite
\begin_inset Foot
status open

\begin_layout Plain Layout
The effect has been demonstrated with DRBD version 8.3.13.
 By construction, is is independent from any of the DRBD series 8.3.x, 8.4.x,
 or 9.0.x.
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename images/network-bottleneck-drbd.fig
	width 80col%

\end_inset


\end_layout

\begin_layout Standard
\noindent
The simplified scenario is the following:
\end_layout

\begin_layout Enumerate
DRBD is loaded with a low to medium, but constant rate of write operations
 for the sake of simplicity of the scenario.
\end_layout

\begin_layout Enumerate
The network has some throughput bottleneck, depicted as a red line.
 For the sake of simplicity, we just linearly decrease it over time, starting
 from full throughput, down to zero.
 The decrease is very slowly over time (some minutes, or even hours).
\end_layout

\begin_layout Standard
What will happen in this scenario?
\end_layout

\begin_layout Standard
As long as the actual DRBD write throughput is lower than the network bandwidth
 (left part of the horizontal blue line), DRBD works as expected.
\end_layout

\begin_layout Standard
Once the maximum network throughput (red line) starts to fall short of the
 required application throughput (first blue dotted line), we get into trouble.
 By its very nature, DRBD works 
\series bold
synchronously
\series default
.
 Therefore, it 
\emph on
must
\emph default
 transfer all your application writes through the bottleneck, but now it
 is impossible
\begin_inset Foot
status open

\begin_layout Plain Layout
This is independent from the DRBD protocols A through C, because it just
 depends on an information-theoretic argument independently from any protocol.
 We have a fundamental conflict between network capabilities and application
 demands here, which cannot be circumvented due to the 
\series bold
synchronous
\series default
 nature of DRBD.
\end_layout

\end_inset

 due to the bottleneck.
 As a consequence, the application running on top of DRBD will see increasingly
 higher IO latencies and/or stalls / hangs.
 We found practical cases (at least with former versions of DRBD) where
 IO latencies exceeded practical monitoring limits such as 
\begin_inset Formula $5$
\end_inset

 s by far, up to the range of 
\emph on
minutes
\emph default
.
 As an experienced sysadmin, you know what happens next: your application
 will run into an incident, and your customers will be dissatisfied.
\end_layout

\begin_layout Standard
In order to deal with such situations, DRBD has lots of tuning parameters.
 In particular, the 
\family typewriter
timeout
\family default
 parameter and/or the 
\family typewriter
ping-timeout
\family default
 parameter will determine when DRBD will give up in such a situation and
 simply drop the network connection as an emergency measure.
 Dropping the network connection is roughly equivalent to an automatic 
\family typewriter
disconnect
\family default
, followed by an automatic re-connect attempt after 
\family typewriter
connect-int
\family default
 seconds.
 During the dropped connection, the incident will appear as being resolved,
 but at some hidden cost
\begin_inset Foot
status open

\begin_layout Plain Layout
By appropriately tuning various DRBD parameters, such as 
\family typewriter
timeout
\family default
 and/or 
\family typewriter
ping-timeout
\family default
, you can keep the impact of the incident below some viable limit.
 However, the automatic disconnect will then happen earlier and more often
 in practice.
 Flaky or overloaded networks may easily lead to an enormous number of automatic
 disconnects.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
What happens next in our scenario? During the 
\family typewriter
disconnect
\family default
, DRBD will record all positions of writes in its bitmap and/or in its activity
 log.
 As soon as the automatic re-connect succeeds after 
\family typewriter
connect-int
\family default
 seconds, DRBD has to do a partial re-sync of those blocks which were marked
 dirty in the meantime.
 This leads to an 
\emph on
additional
\emph default
 bandwidth demand
\begin_inset Foot
status open

\begin_layout Plain Layout
DRBD parameters 
\family typewriter
sync-rate
\family default
 resp 
\family typewriter
resync-rate
\family default
 may be used to tune the height of the additional demand.
 In addition, the newer parameters 
\family typewriter
c-plan-ahead
\family default
, 
\family typewriter
c-fill-target
\family default
, 
\family typewriter
c-delay-target
\family default
, 
\family typewriter
c-min-rate
\family default
, 
\family typewriter
c-max-rate
\family default
 and friends may be used to dynamically adapt to 
\emph on
some
\emph default
 situations where the application throughput 
\emph on
could
\emph default
 fit through the bottleneck.
 These newer parameters were developed in a cooperation between 1&1 and
 Linbit, the maker of DRBD.
\end_layout

\begin_layout Plain Layout
Please note that lowering / dynamically adapting the resync rates may help
 in lowering the 
\emph on
probability
\emph default
 of occurrences of the above problems in practical scenarios where the bottlenec
k would recover to viable limits after some time.
 However, lowering the rates will also increase the 
\emph on
duration
\emph default
 of re-sync operations accordingly.
 The 
\emph on
total amount of re-sync data
\emph default
 simply does not decrease when lowering 
\family typewriter
resync-rate
\family default
; it even tends to increase over time when new requests arrive.
 Therefore, the 
\emph on
expectancy value
\emph default
 of problems caused by 
\emph on
strong
\emph default
 network bottlenecks (i.e.
 when not even the ordinary application rate is fitting through) is 
\emph on
not
\emph default
 improved by lowering or adapting 
\family typewriter
resync-rate
\family default
, but rather the expectancy value mostly depends on the 
\emph on
relation
\emph default
 between the amount of holdback data versus the amount of application write
 data, both measured for the duration of some given strong bottleneck.
\end_layout

\end_inset

 as indicated by the upper dotted blue box.
\end_layout

\begin_layout Standard
Of course, there is 
\emph on
absolutely no chance
\emph default
 to get the increased amount of data through our bottleneck, since not even
 the ordinary application load (lower dotted lines) could be transferred.
\end_layout

\begin_layout Standard
Therefore, you run at a 
\series bold
very high risk
\series default
 that the re-sync cannot finish before the next 
\family typewriter
timeout
\family default
 / 
\family typewriter
ping-timeout
\family default
 cycle will drop the network connection again.
\end_layout

\begin_layout Standard
What will be the final result when that risk becomes true? Simply, your
 secondary site will be in state 
\family typewriter
inconsistent
\family default
.
 This means, you have lost your redundancy.
 In our scenario, there is no chance at all to become consistent again,
 because the network bottleneck declines more and more, slowly.
 It is simply 
\emph on
hopeless
\emph default
, by construction.
\end_layout

\begin_layout Standard
In case you lose your primary site now, you are lost at all.
\end_layout

\begin_layout Standard
Some people may argue that the probability for a similar scenario were low.
 We don't agree on such an argumentation.
 Not only because it really happens in pratice, and it may even last some
 days until problems are fixed.
 In case of 
\series bold
rolling disasters
\series default
, the network is very likely to become flaky and/or overloaded shortly before
 the final damage.
 Even in other cases, you can easily end up with inconsistent secondaries.
 It occurs not only in the lab, but also in practice if you operate some
 hundreds or even thousands of DRBD instances.
\end_layout

\begin_layout Standard
The point is that you can produce an ill behaviour 
\emph on
systematically
\emph default
 just by overloading the network a bit for some sufficient duration.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 When coupling whole datacenters via some thousands of DRBD connections,
 any (short) network loss will almost certainly increase the re-sync network
 load each time the outage appears to be over.
 As a consequence, overload may be 
\emph on
provoked
\emph default
 by the re-sync repair attempts.
 This may easily lead to self-amplifying 
\series bold
throughput storms
\series default
 in some resonance frequency (similar to self-destruction of a bridge when
 an army is marching over it in lockstep).
\end_layout

\begin_layout Standard
The only way for reliable prevention of loss of secondaries is to start
 any re-connect 
\emph on
only
\emph default
 in such situations where you can 
\emph on
predict in advance
\emph default
 that the re-sync is 
\emph on
guaranteed
\emph default
 to finish before any network bottleneck / loss will cause an automatic
 disconnect again.
 We don't know of any method which can reliably predict the future behaviour
 of a complex network.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset

 Conclusion: in the presence of network bottlenecks, you run a considerable
 risk that your DRBD mirrors get destroyed just in that moment when you
 desperately need them.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

Notice that crossover cables usually never show a behaviour like depicted
 by the red line.
 Crossover cables are 
\emph on
passive components
\emph default
 which normally
\begin_inset Foot
status open

\begin_layout Plain Layout
Exceptions might be mechanical jiggling of plugs, or electro-magnetical
 interferences.
 We never noticed any of them.
\end_layout

\end_inset

 either work, or not.
 The binary connect / disconnect behaviour of DRBD has no problems to cope
 with that.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

or 
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 Linbit recommends a 
\series bold
workaround
\series default
 for the inconsistencies during re-sync: LVM snapshots.
 We tried it, but found a 
\emph on
performance penalty
\emph default
 which made it prohibitive for our concrete application.
 A problem seems to be the cost of destroying snapshots.
 LVM uses by default a BOW strategy (Backup On Write, which is the counterpart
 of COW = Copy On Write).
 BOW increases IO latencies during ordinary operation.
 Retaining snapshots is cheap, but reverting them may be very costly, depending
 on workload.
 We didn't fully investigate that effect, and our experience is a few years
 old.
 You might come to a different conclusion for a different workload, for
 newer versions of system software, or for a different strategy if you carefully
 investigate the field.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 DRBD problems usually arise 
\emph on
only
\emph default
 when the network throughput shows some 
\begin_inset Quotes eld
\end_inset

awkward
\begin_inset Quotes erd
\end_inset

 analog behaviour, such as overload, or as occasionally produced by various
 switches / routers / transmitters, or other potential sources of packet
 loss.
\end_layout

\begin_layout Subsection
Behaviour of MARS
\begin_inset CommandInset label
LatexCommand label
name "sub:Behaviour-of-MARS"

\end_inset


\end_layout

\begin_layout Standard
The behaviour of MARS in the above scenario:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename images/network-bottleneck-mars.fig
	width 80col%

\end_inset


\end_layout

\begin_layout Standard
\noindent
When the network is restrained, an asynchronous system like MARS will continue
 to serve the user IO requests (dotted green line) without any impact /
 incident while the actual network throughput (solid green line) follows
 the red line.
 In the meantime, all changes to the block device are recorded at the transactio
n logfiles.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 Here is one point in favour of DRBD: MARS stores its transaction logs on
 the filesystem 
\family typewriter
/mars/
\family default
.
 When the network bottleneck is lasting very long (some days or even some
 weeks), the filesystem will eventually run out of space some day.
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Defending-Overflow"

\end_inset

 discusses countermeasures against that in detail.
 In contrast to MARS, DRBD allocates its bitmap 
\emph on
statically
\emph default
 at resource creation time.
 It uses up less space, and you don't have to monitor it for (potential)
 overflows.
 The space for transaction logs is the price you have to pay if you want
 or need anytime consistency, or asynchronous replication in general.
\end_layout

\begin_layout Standard
In order to really grasp the 
\emph on
heart
\emph default
 of the difference between synchronous and asynchronous replication, we
 look at the following modified scenario:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename images/network-flaky-mars.fig
	width 80col%

\end_inset


\end_layout

\begin_layout Standard
\noindent
This time, the network throughput (red line) is varying
\begin_inset Foot
status open

\begin_layout Plain Layout
In real life, many long-distance lines or even some heavily used metro lines
 usually show fluctuations of their network bandwidth by an order of magnitude,
 or even higher.
 We have measured them.
 The overall behaviour can be characterized as 
\begin_inset Quotes eld
\end_inset


\series bold
chaotic
\series default

\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_inset

 in some unpredictable way.
 As before, the application throughput served by MARS is assumed to be constant
 (dotted green line, often superseded by the solid green line).
 The actual replication network throughput is depicted by the solid green
 line.
\end_layout

\begin_layout Standard
As you can see, a network dropdown undershooting the application demand
 has no impact on the application throughput, but only on the replication
 network throughput.
 Whenever the network throughput is held back due to the flaky network,
 it simply catches up as soon as possible by overshooting the application
 throughput.
 The amount of lag-behind is visualized as shaded area: downward shading
 (below the application throughput) means an increase of the lag-behind,
 while the upwards shaded areas (beyond the application throughput) indicate
 a decrease of the lag-behind (catch-up).
 Once the lag-behind has been fully caught up, the network throughput suddenly
 jumps back to the application throughput (here visible in two cases).
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 Note that the existence of lag-behind areas is roughly corresponding to
 DRBD disconnect states, and in turn to DRBD inconsistent states of the
 secondary as long as the lag-behind has not been fully cought up.
 The very rough
\begin_inset Foot
status open

\begin_layout Plain Layout
Of course, this visualization is not exact.
 On one hand, the DRBD inconsistency phase may start later as depicted here,
 because it only starts 
\emph on
after
\emph default
 the first automatic disconnect, upon the first automatic re-connect.
 In addition, the amount of resync data may be smaller than the amount of
 corresponding MARS transaction logfile data, because the DRBD bitmap will
 coalesce multiple writes to the same block into one single transfer.
 On the other hand, DRBD will transfer no data at all during its disconnected
 state, while MARS continues its best.
 This leads to a prolongation of the DRBD inconsistent phase.
 Depending on properties of the workload and of the network, the real duration
 of the inconsistency phase may be both shorter or longer.
\end_layout

\end_inset

 duration of the corresponding DRBD inconsistency phase is visualized as
 magenta line at the time scale.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

MARS utilizes the existing network bandwidth as best as possible in order
 to pipe through as much data as possible, provided that there exists some
 data requiring expedition.
 Conceptually, there exists no better way due to information theoretic limits
 (besides data compression).
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

In case of lag-behind, the version of the data replicated to the secondary
 site corresponds to some time in the past.
 Since the data is always transferred in the same order as originally submitted
 at the primary site, the secondary never gets inconsistent.
 Your mirror always remains usable.
 Your only potential problem could be the outdated state, corresponding
 to some state in the past.
 However, the 
\begin_inset Quotes eld
\end_inset

as-best-as-possible
\begin_inset Quotes erd
\end_inset

 approach to the network transfer ensures that your version is always 
\emph on
as up-to-date as possible
\emph default
 even under ill-behaving network bottlenecks.
 
\series bold
There is simply no better way to do it.

\series default
 In presence of network bottlenecks, there exists no better method than
 prescribed by the information theoretic limit (red line, neglecting data
 compression).
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

MARS' property of never sacrificing local data consistency (at the possible
 cost of actuality) is called 
\series bold
Anytime Consistency
\series default
.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

Conclusion: you can even use 
\series bold
traffic shaping
\series default
 on MARS' TCP connections in order to globally balance your network throughput
 (of course at the cost of actuality, but without sacrificing local data
 consistency).
 If you would try to do the same with DRBD, you could easily provoke a disaster.
 MARS simply tolerates any network problems, provided that there is enough
 disk space for transaction logfiles.
 Even in case of completely filling up your disk with transaction logfiles
 after some days or weeks, you will not lose local consistency anywhere
 (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Defending-Overflow"

\end_inset

).
\end_layout

\begin_layout Standard
Finally, here is yet another scenario where MARS can cope with the situation:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename images/network-constant-mars.fig
	width 80col%

\end_inset


\end_layout

\begin_layout Standard
\noindent
This time, the network throughput limit (solid red line) is assumed to be
 constant.
 However, the application workload (dotted green line) shows some heavy
 peaks.
 We know from our 1&1 datacenters that such an application behaviour is
 very common.
\end_layout

\begin_layout Standard
When the peaks are exceeding the network capabilities for some time, the
 replication network throughput (solid green line) will be limited for a
 short time, stay a little bit longer at the limit, and finally drop down
 again to the normal workload.
 In other words, you get a flexible buffering behaviour, coping with the
 peaks.
\end_layout

\begin_layout Standard
Similar scenarios (where both the application workload has peaks and the
 network is flaky to some degree) are rather common.
 If you would use DRBD there, you were likely to run into regular application
 performance problems and/or frequent automatic disconnect cycles, depending
 on the height and on the duration of the peaks, and on network resources.
\end_layout

\begin_layout Section
Long Distances / High Latencies
\end_layout

\begin_layout Standard
In general and in some theories, latencies are conceptually independent
 from throughput, at least to some degree.
 There exist all 4 possible combinations:
\end_layout

\begin_layout Enumerate
There exist lines with high latencies but also high throughput.
 Examples are raw fibre cables at the ground of the Atlantic.
\end_layout

\begin_layout Enumerate
High latencies on low-throughput lines is very easy to achieve.
 If you never saw it, you never ran interactive 
\family typewriter
vi
\family default
 over 
\family typewriter
ssh
\family default
 in parallel to downloads on your old-fashioned modem line.
\end_layout

\begin_layout Enumerate
Low latencies need not be incompatible with high throughput.
 See Myrinet, InfiniBand or high-speed point-to-point interconnects, such
 as modern memory busses.
\end_layout

\begin_layout Enumerate
Low latency combined with low throughput is also possible: in an ATM system
 (or another pre-reservation system for bandwidth), just increase the multiplex
 factor on low-capacity but short lines, which is only possible at the cost
 of assigned bandwidth.
\end_layout

\begin_layout Standard
In the 
\emph on
internet
\emph default
 practice, however, it is very likely that high latencies will also lead
 to worse throughput, because of the 
\emph on
congestion control algorithms
\emph default
 running all over the world.
\end_layout

\begin_layout Standard
We have experimented with extremely large TCP send/receive buffers plus
 various window sizes and congestion control algorithms over long-distance
 lines between the USA and Europe.
 Yes, it is possible to improve the behaviour to some degree.
 But magic does not happen.
 Natural laws will always hold.
 You simply cannot travel faster than the speed of light.
\end_layout

\begin_layout Standard
Our experience leads to the following rule of thumb, not formally proven
 by anything, but just observed in practice:
\end_layout

\begin_layout Quotation
In general, synchronous data replication (not limited to applications of
 DRBD) works reliably only over distances 
\begin_inset Formula $<50$
\end_inset

 km.
\end_layout

\begin_layout Standard
There may be some exceptions, at least when dealing with low-end workstation
 loads.
 But when you are responsible for a whole datacenter and/or some centralized
 storage units, don't waste your time by trying (almost) impossible things.
 We recommend to use MARS in such use cases.
\end_layout

\begin_layout Section
Higher Consistency Guarantees vs Actuality
\end_layout

\begin_layout Standard
We already saw in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Network-Bottlenecks"

\end_inset

 that certain types of network bottlenecks can easily (and reproducibly)
 destroy the consistency of your DRBD secondary, while MARS will preserve
 local consistency at the cost of actuality (
\series bold
anytime consistency
\series default
).
\end_layout

\begin_layout Standard
Some people, often located at database operations, are obtrusively arguing
 that actuality is such a high good that it must not be sacrificed under
 any circumstances.
\end_layout

\begin_layout Standard
Anyone arguing this way has at least the following choices (list may be
 incomplete):
\end_layout

\begin_layout Enumerate
None of the above use cases for MARS apply.
 For instance, short distance replication over crossover cables is sufficient
 (which occurs very often), or the network is reliable enough such that
 bottlenecks can never occur (e.g.
 because the total load is extremely low, or conversely the network is extremely
 overengineered / expensive), or the occurrence of bottlenecks can 
\emph on
provably
\emph default
 be taken into account.
 In such cases, DRBD is clearly the better solution than MARS, because it
 provides better actuality than the current version of MARS, and it uses
 up less disk resources.
\end_layout

\begin_layout Enumerate
In the presence of network bottlenecks, people didn't notice and/or didn't
 understand and/or did under-estimate the risk of accidental invalidation
 of their DRBD secondaries.
 They should carefully check that risk.
 They should convince themselves that the risk is 
\emph on
really
\emph default
 bearable.
 Once they are hit by a systematic chain of events which 
\emph on
reproducibly
\emph default
 provoke the bad effect, it is too late
\begin_inset Foot
status open

\begin_layout Plain Layout
Some people seem to need a bad experience before they get the difference
 between risk caused by reproducible effects and inverted luck.
\end_layout

\end_inset

.
\end_layout

\begin_layout Enumerate
In the presence of network bottlenecks, people found a solution such that
 DRBD does not automatically re-connect after the connection has been dropped
 due to network problems (c.f.
 
\family typewriter
ko-count
\family default
 parameter).
 So the risk of inconsistency 
\emph on
appears
\emph default
 to have vanished.
 In some cases, people did not notice that the risk has 
\emph on
not completely
\begin_inset Foot
status open

\begin_layout Plain Layout
Hint: what's the 
\emph on
conceptual
\emph default
 difference beween an automatic and a manual re-connect? Yes, you can try
 to 
\emph on
lower
\emph default
 the risk in some cases by transferring risks to human analysis and human
 decisions, but did you take into account the possibility of human errors?
\end_layout

\end_inset


\emph default
 vanished, and/or they did not notice that now the actuality produced by
 DRBD is even drastically worse than that of MARS (in the same situation).
 It is true that DRBD provides better actuality in 
\family typewriter
connected
\family default
 state, but for a full picture the actuality in 
\family typewriter
disconnected
\family default
 state should not be neglected
\begin_inset Foot
status open

\begin_layout Plain Layout
Hint: a potential hurdle may be the fact that the current format of 
\family typewriter
/proc/drbd
\family default
 does neither display the timestamp of the first 
\emph on
relevant
\emph default
 network drop nor the total amount of lag-behind user data (which is 
\emph on
not
\emph default
 the same as the number of dirty bits in the bitmap), while 
\family typewriter
marsadm view
\family default
 can display it.
 So it is difficult to judge the risks.
 Possibly a chance is inspection of DRBD messages in the syslog, but quantificat
ion could remain hard.
\end_layout

\end_inset

.
 So they didn't notice that their argumentation on the importance of actuality
 may be fundamentally wrong.
 A possible way to overcome that may be re-reading section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Behaviour-of-MARS"

\end_inset

 and comparing its outcome with the corresponding outcome of DRBD in the
 same situation.
\end_layout

\begin_layout Enumerate
People are stuck in contradictive requirements because the current version
 of MARS Light does not yet support synchronous or pseudo-synchronous operation
 modes.
 This should be resolved some day.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

A common misunderstanding is about the actuality guarantees provided by
 filesystems.
 The buffer cache / page cache uses by default a 
\series bold
writeback strategy
\series default
 for performance reasons.
 Even modern journalling filesystems will (by default) provide only consistency
 guarantees, but no strong actuality guarantee.
 In case of power loss, some transactions may be even 
\emph on
rolled back
\emph default
 in order to restore consistency.
 According to POSIX
\begin_inset Foot
status open

\begin_layout Plain Layout
The above argumentation also applies to Windows filesystems in analogous
 way.
\end_layout

\end_inset

 and other standards, the only 
\emph on
reliable
\emph default
 way to achieve actuality is usage of system calls like 
\family typewriter
sync()
\family default
, 
\family typewriter
fsync()
\family default
, 
\family typewriter
fdatasync()
\family default
, flags like 
\family typewriter
O_DIRECT
\family default
, or similar.
 For performance reasons, the 
\emph on
vast majority of applications
\emph default
 don't use them at all, or use them only sparingly!
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 It makes no sense to require strong actuality guarantees from any block
 layer replication (whether DRBD or future versions of MARS) while higher
 layers such as filesystems or even applications are already sacrificing
 them!
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

In summary, the 
\series bold
anytime consistency
\series default
 provided by MARS is an argument you should consider, even if you need an
 extra hard disk for transaction logfiles.
\end_layout

\begin_layout Chapter
Quick Start Guide
\end_layout

\begin_layout Standard
This chapter is for impatient but experienced sysadmins who already know
 DRBD.
 For more complete information, refer to chapter 
\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:The-Sysadmin-Interface"

\end_inset

.
\end_layout

\begin_layout Section
Preparation: What you Need
\begin_inset CommandInset label
LatexCommand label
name "sec:Preparation:-What-you"

\end_inset


\end_layout

\begin_layout Standard
Typically, you will use MARS Light at servers in a datacenter for replication
 of big masses of data.
\end_layout

\begin_layout Standard
Typically, you will use MARS Light for replication 
\emph on
between
\emph default
 multiple datacenters, when the distances are greater than 
\begin_inset Formula $\approx50$
\end_inset

 km.
 Many other solutions, even from commercial storage vendors, will not work
 reliably over large distances when your network is not 
\emph on
extremely
\emph default
 reliable, or when you try to push huge masses of data from high-performance
 applications through a network bottleneck.
 If you ever encountered suchalike problems (or try to avoid them in advance),
 MARS is for you.
\end_layout

\begin_layout Standard
You can use MARS Light both at dedicated storage servers (e.g.
 for serving Windows clients), or at standalone Linux servers where CPU
 and storage are not separated.
\end_layout

\begin_layout Standard
In order to protect your data from low-level disk failures, you should use
 a hardware RAID controller with BBU.
 Software RAID is explicitly 
\emph on
not
\emph default
 recommended, because it generally provides worse performance due to the
 lack of a hardware BBU (for some benchmark comparisons with/out BBU, see
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://github.com/schoebel/blkreplay/raw/master/doc/blkreplay.pdf
\end_layout

\end_inset

).
\end_layout

\begin_layout Standard
Typically, you will need more than one RAID set
\begin_inset Foot
status open

\begin_layout Plain Layout
For low-cost storage, RAID-5 is no longer regarded safe for today's typical
 storage sizes, because the error rate is regarded too high.
 Therefore, use RAID-6.
 If you need more than 15 disks in total, create multiple RAID sets (each
 having at most 15 disks, better about 12 disks) and stripe them via LVM
 (or via your hardware RAID controller if it supports RAID-60).
\end_layout

\end_inset

 for big masses of data.
 Therefore, use of LVM is also recommended
\begin_inset Foot
status open

\begin_layout Plain Layout
You may also combine MARS with commercial storage boxes connected via Fibrechann
el or iSCSI, but we have not yet operational experiences at 1&1 with such
 setups.
\end_layout

\end_inset

 for your data.
\end_layout

\begin_layout Standard
MARS' tolerance of networking problems comes with some cost.
 You will need some extra space for the transaction logfiles of MARS, residing
 at the 
\family typewriter
/mars/
\family default
 filesystem.
\end_layout

\begin_layout Standard
The exact space requirements for 
\family typewriter
/mars/
\family default
 depend on the 
\emph on
average write rate
\emph default
 of your application, not on the size of your data.
 We found that only few applications are writing more than 1 TB per day.
 Most are writing even less than 100 GB per day.
 Usually, you want to dimension 
\family typewriter
/mars/
\family default
 such that you can survive a network loss lasting 3 days / about one weekend.
 This can be achieved with current technology rather easily: as a simple
 rule of thumb, just use one 
\series bold
dedicated disk
\series default
 having a capacity of 4 TB or more.
 Typically, that will provide you with plenty of headroom even for bigger
 networking incidents.
\end_layout

\begin_layout Standard
Dedicated disks for 
\family typewriter
/mars/
\family default
 have another advantage: their mechanical head movement is completely independen
t from your data head movements.
 For best performance, attach that dedicated disk to your hardware RAID
 controller with BBU, building a separate RAID set (even if it consists
 only of a single disk -- notice that the 
\series bold
hardware BBU
\series default
 is the crucial point).
\end_layout

\begin_layout Standard
If you are concerned about reliability, use two disks switched together
 as a relatively small RAID-1 set.
 For extremely high performance demands, you may consider (and check) RAID-10.
\end_layout

\begin_layout Standard
Since the transaction logfiles are highly sequential in their access pattern,
 a cheap but high-capacity SATA disk (or nearline-SAS disk) is usually sufficien
t.
 At the time of this writing, standard SATA SSDs have shown to be 
\emph on
not
\emph default
 (yet) preferable.
 Although they offer high random IOPS rate, their sequential throughput
 is worse, and their long-term stability is questioned by many people at
 the time of this writing.
 However, as technology evolves and becomes more mature, this could change
 in future.
\end_layout

\begin_layout Standard
Use 
\family typewriter
ext4
\family default
 for 
\family typewriter
/mars/
\family default
.
 Avoid 
\family typewriter
ext3
\family default
, and don't use 
\family typewriter
xfs
\family default

\begin_inset Foot
status open

\begin_layout Plain Layout
It seems that the late internal resource allocation strategy of 
\family typewriter
xfs
\family default
 (or another currently unknown reason) could be the reason for some resource
 deadlocks which appear only with 
\family typewriter
xfs
\family default
 and only under 
\emph on
extremely
\emph default
 high IO load in combination with high memory pressure.
\end_layout

\end_inset

 at all.
\end_layout

\begin_layout Section
Setup Primary and Secondary Cluster Nodes
\end_layout

\begin_layout Standard
If you already use DRBD, you may migrate to MARS (or even back from MARS
 to DRBD) if you use 
\emph on
external
\begin_inset Foot
status open

\begin_layout Plain Layout

\emph on
Internal
\emph default
 DRBD metadata should also work as long as the filesystem inside your block
 device / disk already exists and is not re-created.
 The latter would destroy the DRBD metadata, but even that will not hurt
 you really: you can always switch back to DRBD using 
\emph on
external
\emph default
 metadata, as long as you have some small spare space somewhere.
\end_layout

\end_inset


\emph default
 DRBD metadata (which is not touched by MARS).
 
\end_layout

\begin_layout Subsection
Kernel and MARS Module
\end_layout

\begin_layout Standard
At the time of this writing, a small pre-patch for the Linux kernel is needed.
 It it trivial and consists mostly of 
\family typewriter
EXPORT_SYMBOL()
\family default
 statements.
 The pre-patch must be applied to the kernel source tree before building
 your (custom) kernel.
 Hopefully, the patch will be integrated upstream some day.
\end_layout

\begin_layout Standard
The MARS kernel module can be built in two different ways:
\end_layout

\begin_layout Enumerate
inplace in the kernel source tree: 
\family typewriter
cd block/ && git clone git://github.com/schoebel/mars
\end_layout

\begin_layout Enumerate
as a separate kernel module, only for experienced
\begin_inset Foot
status open

\begin_layout Plain Layout
You should be familiar with the problems arising from orthogonal combination
 of different kernel versions with different MARS module versions and with
 different 
\family typewriter
marsadm
\family default
 userspace tool versions at the package management level.
 Hint: 
\family typewriter
modinfo
\family default
 is your friend.
\end_layout

\end_inset

 sysadmins: see file 
\family typewriter
Makefile.dist
\family default
 (tested with Debian; may need some extra work with other distros).
\end_layout

\begin_layout Standard
Further / more accurate / latest instructions can be found in 
\family typewriter
README
\family default
 and in 
\family typewriter
INSTALL
\family default
.
 You must not only install the kernel and the 
\family typewriter
mars.ko
\family default
 kernel module to all of your cluster nodes, but also the 
\family typewriter
marsadm
\family default
 userspace tool.
\end_layout

\begin_layout Subsection
Setup your Cluster Nodes
\end_layout

\begin_layout Standard
For your cluster, you need at least two nodes.
 In the following, they will be called A and B.
 In the beginning, A will have the 
\family typewriter
primary
\family default
 role, while B will be your initial 
\family typewriter
secondary
\family default
.
 The roles may change later.
\end_layout

\begin_layout Enumerate
You must be 
\family typewriter
root
\family default
.
\end_layout

\begin_layout Enumerate
On each of A and B, create the 
\family typewriter
/mars/
\family default
 mountpoint.
\end_layout

\begin_layout Enumerate
On each node, create an 
\family typewriter
ext4
\family default
 filesystem on your separate disk / RAID set (see description in section
 
\begin_inset CommandInset ref
LatexCommand nameref
reference "sec:Preparation:-What-you"

\end_inset

).
\end_layout

\begin_layout Enumerate
On each node, mount that filesystem to 
\family typewriter
/mars/
\family default
.
 It is advisable to add an entry to 
\family typewriter
/etc/fstab
\family default
.
\end_layout

\begin_layout Enumerate
On node A, say 
\family typewriter
marsadm create-cluster
\family default
.
\begin_inset Newline newline
\end_inset

This must be done 
\emph on
exactly once
\emph default
, on exactly one node of your cluster.
 Never do this twice or on different nodes, because that would create two
 different clusters which would have nothing to do with each other.
 The 
\family typewriter
marsadm
\family default
 tool protects you against accidentally joining / merging two different
 clusters.
 If you accidentally created two different clusters, just umount that 
\family typewriter
/mars/
\family default
 partition and start over with step 3 at that node.
\end_layout

\begin_layout Enumerate
On node B, you must have a working 
\family typewriter
ssh
\family default
 connection to node A.
 Test it by saying 
\family typewriter
ssh A w
\family default
 on node B.
 It should work without entering a password (otherwise, use 
\family typewriter
ssh-agent
\family default
 to achieve that).
 In addition, 
\family typewriter
rsync
\family default
 must be installed.
\end_layout

\begin_layout Enumerate
On node B, say 
\family typewriter
marsadm join-cluster A
\end_layout

\begin_layout Enumerate
Only 
\emph on
after
\begin_inset Foot
status open

\begin_layout Plain Layout
In fact, you may already 
\family typewriter
modprobe mars
\family default
 at node A after the 
\family typewriter
marsadm create-cluster
\family default
.
 Just don't do any of the 
\family typewriter
*-cluster
\family default
 operations when the kernel module is loaded.
 All other operations should have no such restriction.
\end_layout

\end_inset


\emph default
 that, do 
\family typewriter
modprobe mars
\family default
 on each node.
\end_layout

\begin_layout Section
Creating and Maintaining Resources
\begin_inset CommandInset label
LatexCommand label
name "sec:Creating-and-Maintaining"

\end_inset


\end_layout

\begin_layout Standard
In the following example session, a block device 
\family typewriter
/dev/lv-x/mydata
\family default
 (shortly called 
\emph on
disk
\emph default
) must already exist on both nodes A and B, respectively, having the same
\begin_inset Foot
status open

\begin_layout Plain Layout
Actually, the disk at the initially secondary side may be larger than that
 at the initially primary side.
 This will waste space and is therefore not recommended.
\end_layout

\end_inset

 size.
 For the sake of simplicity, the disk (underlying block device) as well
 as its later logical resource name as well as its later virtual device
 name will all be named uniformly by the same suffix 
\family typewriter
mydata
\family default
.
 In general, you might name each of them differently, but that is not recommende
d since it may easily lead to confusion in larger installations.
\end_layout

\begin_layout Standard
You may have already some data inside your disk 
\family typewriter
/dev/lv-x/mydata
\family default
 at the initially primary side A.
 Before using it for MARS, it must be unused for any other purpose (such
 as being mounted, or used by DRBD, etc).
 MARS will require 
\series bold
exclusive access
\series default
 to it.
\end_layout

\begin_layout Enumerate
On node A, say 
\family typewriter
marsadm create-resource mydata /dev/lv-x/mydata
\family default
.
\begin_inset Newline newline
\end_inset

As a result, a directory 
\family typewriter
/mars/resource-mydata/
\family default
 will be created on node A, containing some symlinks.
 Node A will automatically start in the primary role for this resource.
 Therefore, a new pseudo-device 
\family typewriter
/dev/mars/mydata
\family default
 will also appear after a few seconds.
\begin_inset Newline newline
\end_inset

Note that the initial contents of 
\family typewriter
/dev/mars/mydata
\family default
 will be exactly the same as in your pre-existing disk 
\family typewriter
/dev/lv-x/mydata
\family default
.
\begin_inset Newline newline
\end_inset

If you like, you may already use 
\family typewriter
/dev/mars/mydata
\family default
 for mounting your already pre-existing data, or for creating a fresh filesystem
, or for exporting via iSCSI, and so on.
 You may even do so before any other cluster node has joined the resource
 (so-called 
\begin_inset Quotes eld
\end_inset

standalone mode
\begin_inset Quotes erd
\end_inset

).
 But you can also do so later after setup of (one ore many) secondaries.
\end_layout

\begin_layout Enumerate
Wait a few seconds until the directory 
\family typewriter
/mars/resource-mydata/
\family default
 and its symlink contents also appears on cluster node B.
\end_layout

\begin_layout Enumerate
On node B, say 
\family typewriter
marsadm join-resource mydata /dev/lv-x/mydata
\family default
.
\begin_inset Newline newline
\end_inset

As a result, the initial full-sync from node A to node B should start automatica
lly.
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 Of course, your old contents of your disk 
\family typewriter
/dev/lv-x/mydata
\family default
 at side B (and 
\emph on
only
\emph default
 there!) is overwritten by the version from side A.
 Since you are an experienced sysadmin, you knew that, and it was just the
 effect you deliberately wanted to achieve.
 If you didn't check that your old contents didn't contain any valuable
 data (or if you accidentally provided a wrong disk device argument), it
 is too late now.
 The 
\family typewriter
marsadm
\family default
 command checks that the disk device argument is really a block device,
 and that exclusive access to it is possible (as well as some further safety
 checks, e.g.
 matching sizes).
 However, MARS cannot know the 
\emph on
purpose
\emph default
 of your generic block device.
 MARS (as well as DRBD) is completely ignorant of the 
\emph on
contents
\emph default
 of a generic block device; it does not interpret it in any way.
 Therefore, you may use MARS (as well as DRBD) for mirroring Windows filesystems
, or raw devices from databases, or whatever.
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

Hint: by default, MARS uses the so-called 
\begin_inset Quotes eld
\end_inset

fast fullsync
\begin_inset Quotes erd
\end_inset

 algorithm.
 It works similar to 
\family typewriter
rsync
\family default
, first reading the data on both sides and computing an md5 checksum for
 each block.
 Heavy-weight data is only transferred over the long-distance network upon
 checksum mismatch.
 This is extremely fast if your data is already (almost) identical on both
 sides.
 Conversely, if you know in advance that your initial data is completely
 different on both sides, you may choose to switch off the fast fullsync
 algorithm via 
\family typewriter
echo 0 > /proc/sys/mars/do_fast_fullsync
\family default
 in order to save the additional IO overhead and network latencies introduced
 by the separate checksum comparison steps.
\end_layout

\begin_layout Enumerate
Optionally: if you create a 
\emph on
new
\emph default
 filesystem on 
\family typewriter
/dev/mars/mydata
\family default
 
\emph on
after(!)
\emph default
 having created the MARS resource, you may skip the fast fullsync phase
 at all, because the old content of 
\family typewriter
/dev/mars/mydata
\family default
 is just garbage not used by the freshly created filesystem.
 Just say 
\family typewriter
marsadm fake-sync mydata
\family default
 in order to abort the sync operation.
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset

 Never do a 
\family typewriter
fake-sync
\family default
 unless you are 
\series bold
absolutely sure
\series default
 that you really don't need the data! Otherwise, you are almost 
\emph on
guaranteed
\emph default
 to have produced harmful inconsistencies.
 If you accidentally issued 
\family typewriter
fake-sync
\family default
, you may startover the full sync at your secondary side at any time by
 saying 
\family typewriter
marsadm invalidate mydata
\family default
 (analogously to the corresponding DRBD command).
\end_layout

\begin_layout Section
Keeping Resources Operational
\end_layout

\begin_layout Subsection
Logfile Rotation / Deletion
\begin_inset CommandInset label
LatexCommand label
name "sub:Logfile-Rotation"

\end_inset


\end_layout

\begin_layout Standard
As explained in section 
\begin_inset CommandInset ref
LatexCommand nameref
reference "sec:The-Transaction-Logger"

\end_inset

, all changes to your resource data are recorded in transaction logfiles
 residing on the 
\family typewriter
/mars/
\family default
 filesystem.
 These files are always growing over time.
 In order to avoid filesystem overflow, the following must be done in regular
 time intervals:
\end_layout

\begin_layout Enumerate

\family typewriter
marsadm log-rotate all
\family default

\begin_inset Newline newline
\end_inset

This starts appending to a new logfile on all of your resources.
 The logfiles are automatically numbered by an increasing 9-digit logfile
 number.
 This will suffice for many centuries even if you would logrotate once a
 minute.
 Practical frequencies for logfile rotation are more like once an hour
\begin_inset Foot
status open

\begin_layout Plain Layout
Under 
\emph on
extremely
\emph default
 high load conditions, you might want to log-rotate serveral times an hour,
 in order to keep the size of each logfile under some practical limit.
 At 1&1 datacenters, we have not yet encountered conditions where that was
 really 
\emph on
necessary
\emph default
.
\end_layout

\end_inset

, or once a day (depending on your load).
\end_layout

\begin_layout Enumerate

\family typewriter
marsadm log-delete-all all
\family default

\begin_inset Newline newline
\end_inset

This determines all logfiles from all resources which are no longer needed
 (i.e.
 which are 
\emph on
fully
\emph default
 replayed, on 
\emph on
all
\emph default
 relevant secondaries).
 All superfluous logfiles are then deleted, including all copies on all
 secondaries.
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 The current version of MARS deletes either 
\emph on
all
\emph default
 replicas of a logfile everywhere, or 
\emph on
none
\emph default
 of the replicas.
 This is a simple rule, but has the drawback that one node may hinder other
 nodes from freeing space in 
\family typewriter
/mars/
\family default
.
 In particular, the command 
\family typewriter
marsadm pause-replay $res
\family default
 (as well as 
\family typewriter
marsadm disconnect $res
\family default
) will freeze the space reclamation in the whole cluster when the pause
 is lasting very long.
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

Best practice is to do both 
\family typewriter
log-rotate
\family default
 and 
\family typewriter
log-delete-all
\family default
 in a 
\family typewriter
cron
\family default
 job.
 In addition, you should establish some regular monitoring of the free space
 present in the 
\family typewriter
/mars/
\family default
 filesystem.
\end_layout

\begin_layout Standard
More detailed information about about avoidance of 
\family typewriter
/mars/
\family default
 overflow is in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Defending-Overflow"

\end_inset

.
\end_layout

\begin_layout Subsection
Switch Primary / Secondary Roles
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename images/switching.fig
	width 90col%

\end_inset


\end_layout

\begin_layout Standard
\noindent
In contrast to DRBD, MARS Light distinguishes between 
\emph on
intended
\emph default
 and 
\emph on
forced
\emph default
 switching.
 This distinction is necessary due to differences in the communication architect
ure (asynchronous communication vs synchronous communication, see sections
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-Lamport-Clock"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-Symlink-Tree"

\end_inset

).
\end_layout

\begin_layout Standard
Asynchronous communication means that (in worst case) a message may take
 (almost) arbitrary time in a distorted network to propagate to another
 node.
 As a consequence, the risk for accidentally creating an (unintended) split
 brain is increased (compared to a synchronous system like DRBD).
\end_layout

\begin_layout Standard
In order to minimize this risk, MARS has invested a lot of effort into an
 internal handover protocol when you start an 
\emph on
intended
\emph default
 primary switch.
\end_layout

\begin_layout Subsubsection
Intended Switching / Planned Handover
\begin_inset CommandInset label
LatexCommand label
name "sub:Intended-Switching"

\end_inset


\end_layout

\begin_layout Standard
Switching the roles is very similar to DRBD: just issue the command
\end_layout

\begin_layout Itemize

\family typewriter
marsadm primary mydata
\end_layout

\begin_layout Standard
on your formerly secondary node.
 Precondition is that you are in connected state, and that the old primary
 does not use its 
\family typewriter
/dev/mars/mydata
\family default
 device any longer.
 If on of the preconditions is violated, 
\family typewriter
marsadm primary
\family default
 refuses to start.
\end_layout

\begin_layout Standard
The preconditions try to protect you from doing silly things, such as accidental
ly provoking a split brain error state.
 We try to avoid split brain as best as we can.
 Therefore, we distinguish between 
\emph on
intended
\emph default
 and 
\emph on
emergeny
\emph default
 switching.
 Intended switching will try to avoid split brain 
\emph on
as best as it can
\emph default
.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 Don't 
\emph on
rely
\emph default
 on split brain avoidance, in particular when scripting any higher-level
 applications such as cluster managers.
 
\family typewriter
marsadm
\family default
 does its best, but at least in case of (unnoticed) network outages / partitions
 (or even 
\emph on
very
\emph default
 slow / overloaded networks), an attempt to become up-to-date is likely
 to fail.
 If you want to 
\emph on
ensure
\emph default
 that no split brain can result from intended primary switching, please
 give the 
\family typewriter
primary
\family default
 command only after your secondary is 
\emph on
known
\emph default
 to be up-to-date.
\end_layout

\begin_layout Standard
Notice that the usage check for 
\family typewriter
/dev/mars/mydata
\family default
 is based on the 
\emph on
open count
\emph default
 transferred from another cluster node.
 Since MARS is operating asynchronously (in contrast to DRBD), it may take
 some time until our node knows that the device is no longer used at another
 node.
 This can lead to a race condition if you automate an intended takeover
 with a script like 
\family typewriter
ssh A 
\begin_inset Quotes eld
\end_inset

umount /dev/mars/mydata
\begin_inset Quotes erd
\end_inset

; ssh B 
\begin_inset Quotes eld
\end_inset

marsadm primary mydata
\begin_inset Quotes erd
\end_inset


\family default
 because your second ssh command may be faster than the internal MARS symlink
 tree propagation (cf section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-Symlink-Tree"

\end_inset

).
 In order to prevent such races, you should use the command
\end_layout

\begin_layout Itemize

\family typewriter
marsadm wait-umount mydata
\end_layout

\begin_layout Standard
on node B before trying to become primary.
 The script should look like 
\family typewriter
ssh A 
\begin_inset Quotes eld
\end_inset

umount /dev/mars/mydata
\begin_inset Quotes erd
\end_inset

; ssh B 
\begin_inset Quotes eld
\end_inset

marsadm wait-umount mydata && marsadm primary mydata
\begin_inset Quotes erd
\end_inset


\family default
.
\end_layout

\begin_layout Subsubsection
Forced Switching
\begin_inset CommandInset label
LatexCommand label
name "sub:Forced-Switching"

\end_inset


\end_layout

\begin_layout Standard
In case the connection to the old primary is lost for whatever reason, we
 just don't know anything about its 
\emph on
current
\emph default
 state (which may deviate from its 
\emph on
last known
\emph default
 state).
 The following command sequence will skip many checks and tell your node
 to become primary forcefully:
\end_layout

\begin_layout Itemize

\family typewriter
marsadm disconnect mydata
\end_layout

\begin_layout Itemize

\family typewriter
marsadm primary mydata --force
\end_layout

\begin_layout Itemize

\family typewriter
marsadm connect mydata
\end_layout

\begin_layout Standard
When using 
\family typewriter
--force
\family default
, not only many precondition checks and other internal checks are skipped,
 but also the internal handover protocol for split brain avoidance.
\end_layout

\begin_layout Standard
Therefore, use of 
\family typewriter
--force
\family default
 is 
\emph on
very likely
\emph default
 to 
\series bold
provoke a split brain
\series default
.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset

 
\series bold
Split brain
\series default
 is always an 
\series bold
erroneous state
\series default
 which should be never entered deliberately! Once you have entered it accidental
ly, you 
\series bold
must
\series default
 resolve it ASAP (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Split-Brain-Resolution"

\end_inset

), otherwise you cannot operate your resource any longer.
\end_layout

\begin_layout Standard
In order to impede you from giving an accidental 
\family typewriter
--force
\family default
, the precondition is different: 
\family typewriter
--force
\family default
 works only in 
\emph on
disconnected
\emph default
 state.
 This is analogously to DRBD.
\end_layout

\begin_layout Standard
Remember: 
\family typewriter
marsadm primary
\family default
 without 
\family typewriter
--force
\family default
 tries to prevent split brain as best as it can.
 Use of the 
\family typewriter
--force
\family default
 option will almost 
\emph on
certainly
\emph default
 provoke a split brain, at least if the old primary continues to operate
 on its local 
\family typewriter
/dev/mars/mydata
\family default
 device.
 Therefore, you are 
\series bold
strongly advised
\series default
 to do this 
\series bold
only
\series default
 after
\end_layout

\begin_layout Enumerate

\family typewriter
marsadm primary
\family default
 without 
\family typewriter
--force
\family default
 has failed 
\emph on
for no good reason
\emph default

\begin_inset Foot
status open

\begin_layout Plain Layout
Most reasons will be displayed by 
\family typewriter
marsadm
\family default
 when it is rejecting to execute the switchover.
\end_layout

\end_inset

, and
\end_layout

\begin_layout Enumerate
You are sure you 
\emph on
really
\emph default
 want to switch, even when that eventually leads to a split brain.
 You also declare that you are willing to do 
\emph on
manual
\emph default
 split-brain resolution as described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Split-Brain-Resolution"

\end_inset

, or even destruction / reconstruction of a damaged node as described in
 section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Final-Destroy-of"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 Notice: in case of 
\emph on
connection loss
\emph default
 (e.g.
 networking problems / network partitions) you might not be able to reliably
 detect whether a split brain will actually result, or not.
\end_layout

\begin_layout Paragraph
Caveats
\end_layout

\begin_layout Standard
In contrast to DRBD, split brain situations are handled differently by MARS
 Light.
 When two primaries are accidentally active at the same time, each of them
 writes into different logfiles 
\family typewriter
/mars/resource-mydata/log-000000001-A
\family default
 and 
\family typewriter
/mars/resource-mydata/log-000000001-B
\family default
 where the 
\emph on
origin
\emph default
 host is always recorded in the filename.
 Therefore, both nodes 
\emph on
can theoretically
\emph default
 run in primary mode independently from each other, at least for some time.
 They 
\emph on
might
\emph default
 even 
\family typewriter
log-rotate
\family default
 independently from each other.
 However, the replication will certainly get stuck, and your 
\family typewriter
/mars/
\family default
 filesystem will eventually run out of space.
 Any other secondary node will certainly get into serious problems: it simply
 does not not know which split-brain version it should follow.
 Therefore, you will certainly loose your redundancy.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 When one of your multiple split brain nodes has left its actual primary
 role, e.g.
 via 
\family typewriter
marsadm secondary
\family default
 and umounting its 
\family typewriter
/dev/mars/mydata
\family default
 device while the network is up (again), we cannot guarantee that it is
 always possible to re-enter primary mode again, even when 
\family typewriter
primary --force
\family default
 is given.
 First cleanup the split brain via 
\family typewriter
leave-resource
\family default
 and friends, or use the method described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Cleanup-in-case"

\end_inset

.
 Remember that split brain is an 
\series bold
\emph on
erroneous
\series default
\emph default
 state.
 Therefore it is 
\series bold
generally no good idea to (re-)enter it deliberately!
\end_layout

\begin_layout Standard
Split brain situations are detected 
\emph on
passively
\emph default
 by secondaries.
 Whenever a secondary detects that somewhere a split brain has happend,
 it just refuses to fetch and to replay any logfiles behind the split point.
 This means that its local disk state will remain consistent, but outdated
 which respect to any of the split brain versions.
\end_layout

\begin_layout Subsection
Split Brain Resolution
\begin_inset CommandInset label
LatexCommand label
name "sub:Split-Brain-Resolution"

\end_inset


\end_layout

\begin_layout Standard
Split brain can naturally occur during a long-lasting network outage (aka
 network partition) when you (forcefully) switch primaries inbetween, or
 due to final loss of your old primary node (fatal node crash) when not
 all logfile data had been transferred immediately before the final crash.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset

 Remember that split brain is an 
\series bold
erroneous state
\series default
 which must be resolved as soon as possible!
\end_layout

\begin_layout Standard
Whenever split brain occurs for whatever reason, you have two choices for
 resolution: either destroy one of your versions, or retain it under a different
 resource name.
\end_layout

\begin_layout Standard
In any of both cases, do the following steps ASAP:
\end_layout

\begin_layout Enumerate

\series bold
Manually
\series default
 check which (surviving) version is the 
\begin_inset Quotes eld
\end_inset

right
\begin_inset Quotes erd
\end_inset

 one.
 Any error is up to you: destroying the wrong version is 
\emph on
your
\emph default
 fault, not the fault of MARS.
\end_layout

\begin_layout Enumerate
If you did not already switch your primary to the final destination determined
 in the previous step, do it now (see description in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Forced-Switching"

\end_inset

).
 Don't use an intermediate 
\family typewriter
marsadm secondary
\family default
 command (as known from DRBD): 
\emph on
directly
\emph default
 switch to the new designated primary!
\end_layout

\begin_layout Enumerate
On each non-right version (which you don't want to retain) which had been
 primary before, umount your 
\family typewriter
/dev/mars/mydata
\family default
 or otherwise stop using it (e.g.
 stop iSCSI or other users of the device).
 Wait until each of them has actually left primary state and until their
 local logfile(s) have been fully written back to the underlying disk.
\end_layout

\begin_layout Enumerate
Wait until the network works again.
 All your (surviving) cluster nodes 
\emph on
must
\emph default

\begin_inset Foot
status open

\begin_layout Plain Layout
If you are a MARS expert and you really know what you are doing (in particular,
 you can anticipate the effects of the Lamport clock and of the symlink
 update protocol including the 
\begin_inset Quotes eld
\end_inset

eventually consistent
\begin_inset Quotes erd
\end_inset

 behaviour including the not-yet-consistent intermediate states, see sections
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-Lamport-Clock"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-Symlink-Tree"

\end_inset

), you may deviate from this requirement.
\end_layout

\end_inset

 be able to communicate with each other.
 If that is not possible, or if it takes too long, use the method described
 in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Final-Destroy-of"

\end_inset

.
\end_layout

\begin_layout Enumerate
If any of your (surviving) cluster nodes has already the 
\begin_inset Quotes eld
\end_inset

right
\begin_inset Quotes erd
\end_inset

 version and was not in a primary role when the split brain happened, you
 don't need to do the following step for it, of course.
 The following applies only to those nodes which 
\emph on
deviate
\emph default
 from the correct version:
\end_layout

\begin_layout Enumerate
It may happen that the 
\begin_inset Quotes eld
\end_inset

right
\begin_inset Quotes erd
\end_inset

 version you want to retain is 
\emph on
not
\emph default
 the version which is currently designated as primary for the whole cluster.
 Only in such a case, switch the primary role as described in sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Intended-Switching"

\end_inset

 or 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Forced-Switching"

\end_inset

.
 Here is a repetition of the necessary steps:
\end_layout

\begin_deeper
\begin_layout Enumerate
First try 
\family typewriter
marsadm primary mydata
\family default
 on the new designated primary host.
 Don't mix up your shell windows!
\end_layout

\begin_layout Enumerate
Only if that refuses working 
\emph on
for no good reason
\emph default
, do the following steps:
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
marsadm disconnect mydata
\family default
.
\end_layout

\begin_layout Enumerate

\family typewriter
marsadm primary mydata --force
\family default
.
\end_layout

\begin_layout Enumerate

\family typewriter
marsadm connect mydata
\family default
.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
The next steps are different for different use cases:
\end_layout

\begin_layout Paragraph
Keeping a Split Brain Version
\end_layout

\begin_layout Standard
Continue with the following steps, each on those cluster node(s) you don't
 want to retain:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{enumerate}
\backslash
setcounter{enumi}{6}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
item 
\end_layout

\end_inset


\family typewriter
marsadm leave-resource mydata
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
item 
\end_layout

\end_inset

After having done this on 
\emph on
all
\emph default
 non-right cluster nodes, check that the split brain is gone (e.g.
 by saying 
\family typewriter
marsadm status
\family default
).
 In very rare
\begin_inset Foot
status open

\begin_layout Plain Layout
When your network had partitioned in a very awkward way for a long time,
 and when your partitioned primaries did several 
\family typewriter
log-rotate
\family default
 operations indendently from each other, there is a small chance that 
\family typewriter
leave-resource
\family default
 does not clean up 
\emph on
all
\emph default
 remains of such an awkward situation.
 Only in such a case, try 
\family typewriter
log-purge-all
\family default
.
\end_layout

\end_inset

 cases, it might happen that the preceding l
\family typewriter
eave-resource
\family default
 operations were not able to clean up all logfiles produced in parallel
 by the split brain situation.
 Only in such rare cases, read the documentation about 
\family typewriter
log-purge-all
\family default
 (see page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "log-purge-all$res"

\end_inset

) and try it.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
item 
\end_layout

\end_inset

Check that each underlying local disk 
\family typewriter
/dev/lv-x/mydata
\family default
 is really usable afterwards, e.g.
 by test-mounting it (or 
\family typewriter
fsck
\family default
 if you can afford it).
 If all is OK, don't forget to umount it before proceeding with the next
 step.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
item 
\end_layout

\end_inset

Create a completely new MARS resource out of the underlying disk 
\family typewriter
/dev/lv-x/mydata
\family default
 having a different name, such as 
\family typewriter
mynewdata
\family default
 (see description in section 
\begin_inset CommandInset ref
LatexCommand nameref
reference "sec:Creating-and-Maintaining"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{enumerate}
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Destroying a Wrong Split Brain Version
\end_layout

\begin_layout Standard
As before, do the 
\family typewriter
leave-resource
\family default
 step on each wrong split-brain node and check that the split brain has
 gone, but omit the re-creation.
\end_layout

\begin_layout Standard
If you want to restore redundancy, you can follow-up a 
\family typewriter
join-resource
\family default
 to the old resource name.
 This should restore your redundancy by overwriting your bad split brain
 version with the correct one.
\end_layout

\begin_layout Standard
Alternatively, you may try the following short procedure instead, which
 is however not guaranteed to resolve all (desperate) split-brain situations
 (see documentation of 
\family typewriter
log-purge-all
\family default
 on page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "log-purge-all$res"

\end_inset

):
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{enumerate}
\backslash
setcounter{enumi}{6}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
item 
\end_layout

\end_inset

On each node with a non-
\begin_inset Quotes erd
\end_inset

right
\begin_inset Quotes erd
\end_inset

 version, say 
\family typewriter
marsadm invalidate mydata
\family default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{enumerate}
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Keeping a Good Version
\end_layout

\begin_layout Standard
When you had a secondary which did not participate in the split brain, but
 just got confused and therefore stopped replaying logfiles immediately
 after the split-brain point, it may very well happen
\begin_inset Foot
status open

\begin_layout Plain Layout
In general, such a 
\begin_inset Quotes eld
\end_inset

good
\begin_inset Quotes erd
\end_inset

 behaviour cannot be guaranteed for all secondaries.
 Race conditions in complex networks may asynchronously transfer 
\begin_inset Quotes eld
\end_inset

wrong
\begin_inset Quotes erd
\end_inset

 logfile data to a secondary much earlier than conflicting 
\begin_inset Quotes eld
\end_inset

good
\begin_inset Quotes erd
\end_inset

 logfile data which will be marked 
\begin_inset Quotes eld
\end_inset

good
\begin_inset Quotes erd
\end_inset

 only in the 
\emph on
future.

\emph default
 It is impossible to predict this in advance.
\end_layout

\end_inset

 that you don't need to do any action for it.
 When all wrong versions have disappeared from the cluster (either by 
\family typewriter
invalidate
\family default
 or by 
\family typewriter
leave-resource
\family default
), the confusion should be over, and the secondary should automatically
 resume tracking of the new unique version.
\end_layout

\begin_layout Standard
Please check that 
\emph on
all
\emph default
 of your secondaries are no longer stuck.
 You need to execute split brain resolution only for 
\emph on
stuck
\emph default
 nodes.
\end_layout

\begin_layout Subsection
Final Destruction of a Damaged Node
\begin_inset CommandInset label
LatexCommand label
name "sub:Final-Destroy-of"

\end_inset


\end_layout

\begin_layout Standard
When a node has eventually died, do the following steps ASAP:
\end_layout

\begin_layout Enumerate

\emph on
Physically
\emph default
 remove the dead node from your network.
 Unplug all network cables! Failing to do so might provoke a disaster in
 case it somehow resurrects in an uncontrolled manner, such as a partly-damaged
 
\family typewriter
/mars/
\family default
 filesystem, or whatever.
 Don't risk any such unpredictable behaviour!
\end_layout

\begin_layout Enumerate

\series bold
Manually
\series default
 check which of the surviving versions will be the 
\begin_inset Quotes eld
\end_inset

right
\begin_inset Quotes erd
\end_inset

 one.
 Any error is up to you: resurrecting an unnecessarily old / outdated version
 and/or destroying the newest / best version is 
\emph on
your
\emph default
 fault, not the fault of MARS.
\end_layout

\begin_layout Enumerate
If you did not already switch your primary to the final destination determined
 in the previous step, do it now (see description in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Forced-Switching"

\end_inset

).
\end_layout

\begin_layout Enumerate
On the surviving new designated primary, give the following commands:
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
marsadm --host=your-damaged-host disconnect mydata
\end_layout

\begin_layout Enumerate

\family typewriter
marsadm --host=your-damaged-host leave-resource mydata
\end_layout

\end_deeper
\begin_layout Enumerate
In case any of the previous commands should fail (which is rather likely),
 repeat it with an additional 
\family typewriter
--force
\family default
 option.
 Don't use 
\family typewriter
--force
\family default
 in the first place, alway try first without it!
\end_layout

\begin_layout Enumerate
Repeat the same with 
\emph on
all
\emph default
 resources which were formerly present at 
\family typewriter
your-damaged-host
\family default
.
\end_layout

\begin_layout Enumerate
Finally, say 
\family typewriter
marsadm --host=your-damaged-host leave-cluster
\family default
 (optionally augmented with 
\family typewriter
--force
\family default
).
\end_layout

\begin_layout Standard
Now your surviving nodes should 
\emph on
believe
\emph default
 that the old node 
\family typewriter
your-damaged-host
\family default
 does no longer exist, and that it does no longer participate in any resource.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset

 Even if your node comes to life again in some way: always ensure that the
 mars kernel modules does not run any more.
 
\emph on
Never
\emph default
 do a 
\family typewriter
modprobe mars
\family default
 on a node marked as dead this way!
\end_layout

\begin_layout Standard
In case 
\family typewriter
leave-resource --host=
\family default
 does not work, you can try the following alternative:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{enumerate}
\backslash
setcounter{enumi}{3}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
item 
\end_layout

\end_inset

On the surviving new designated primary, give the following commands
\end_layout

\begin_layout Enumerate

\family typewriter
marsadm disconnect-all mydata
\end_layout

\begin_layout Enumerate

\family typewriter
marsadm down mydata
\end_layout

\begin_layout Enumerate
Check by hand whether your local disk is consistent, e.g.
 by test-mounting is, 
\family typewriter
fsck
\family default
, etc.
\end_layout

\begin_layout Enumerate

\family typewriter
marsadm delete-resource mydata
\end_layout

\begin_layout Enumerate
Check whether the other cluster nodes are dead.
 If not, STONITH them by hand.
\end_layout

\begin_layout Enumerate

\family typewriter
marsadm create-resource newmydata ...

\family default
 and further steps to setup your resource from scratch.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{enumerate}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
In any case, 
\series bold
manually check
\series default
 whether a split brain is reported for any resource on any of your 
\emph on
surviving
\emph default
 cluster nodes.
 If you find one there (and only then), please (re-)execute the split brain
 resolution steps on the affected node(s).
\end_layout

\begin_layout Subsection
Cleanup in case of Complicated Cascading Failures
\begin_inset CommandInset label
LatexCommand label
name "sub:Cleanup-in-case"

\end_inset


\end_layout

\begin_layout Standard
MARS Light does its best to recover even from multiple failures (e.g.
 
\series bold
rolling disasters
\series default
).
 Chances are high that the previous instructions will work even in case
 of multiple failures, such as a network failure plus local node failure
 at only 1 node (even if that node is the former primary node).
\end_layout

\begin_layout Standard
However, in general (e.g.
 when more than 1 node is damaged) there is no general guarantee that recovery
 will 
\emph on
always
\emph default
 succeed under 
\emph on
any
\emph default
 (weird) circumstances.
 That said, your chances for recovery are 
\emph on
very
\emph default
 high when some disk remains usable at least at one of your surviving secondarie
s.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

It should be very hard to finally trash a secondary, because the transaction
 logfiles are containing 
\family typewriter
md5
\family default
 checksums for all data records.
 Any attempt to replay currupted logfiles is refused by MARS.
 In addition, the sequence numbers of log-rotated logfiles are checked for
 contiguity.
 Finally, the 
\emph on
sequence path
\emph default
 of logfile applications (consisting of logfile names plus their respective
 length) is additionally secured by a 
\family typewriter
git
\family default
-like incremental checksum over the whole path (so-called 
\begin_inset Quotes eld
\end_inset

version links
\begin_inset Quotes erd
\end_inset

).
 This should detect split brains even if logfiles are appended / modified
 
\emph on
after
\emph default
 a (forceful) switchover has already taken place.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset

 That said, your 
\begin_inset Quotes eld
\end_inset

chances
\begin_inset Quotes erd
\end_inset

 for final loss of data are very high if you remove the BBU from your hardware
 RAID controller before all hot data has been flushed to the physical disks.
 Therefore, never try to 
\begin_inset Quotes eld
\end_inset

repair
\begin_inset Quotes erd
\end_inset

 a seemingly dead node before your replication is up again somewhere else!
 Only unplug the network cables when advised, but never try to repair the
 hardware instantly!
\end_layout

\begin_layout Standard
In case of desperate situations where none of the previous instructions
 have succeeded, your last chance is rebuilding your resource from an intact
 disk as follows:
\end_layout

\begin_layout Enumerate
Do 
\family typewriter
rmmod mars
\family default
 on all your cluster nodes and/or reboot them.
 Note: if you are less desperate, chances are high that the following will
 also work when the kernel module remains active and everywhere a 
\family typewriter
marsadm down
\family default
 is given instead, but for an 
\emph on
ultimate
\emph default
 instruction you should eliminate 
\emph on
potential
\emph default
 kernel problems by 
\family typewriter
rmmod
\family default
 / 
\family typewriter
reboot
\family default
, at least if you can afford the downtime on concurrently operating resources.
\end_layout

\begin_layout Enumerate
For safety, physically remove the storage network cables on 
\emph on
all
\emph default
 your cluster nodes.
 Note: the same disclaimer holds.
 MARS really does its best, even when 
\family typewriter
delete-resource
\family default
 is given while the network is fully active and multiple split-brain primaries
 are actively using their local device in parallel (approved by some testcases
 from the automatic test suite, but note that it is impossible to catch
 all possible failure scenarios).
 Don't challenge your fate if you are desperate! Don't 
\emph on
rely
\emph default
 on this! Nothing is absolutely fail-safe!
\end_layout

\begin_layout Enumerate

\series bold
Manually
\series default
 check which surviving disk is usable, and which is the 
\begin_inset Quotes eld
\end_inset

best
\begin_inset Quotes erd
\end_inset

 one for your purpose.
\end_layout

\begin_layout Enumerate
Do 
\family typewriter
modprobe mars
\family default
 
\emph on
only
\emph default
 on that node.
 If that fails, 
\family typewriter
rmmod
\family default
 and/or reboot again, and start over with a completely fresh 
\family typewriter
/mars/
\family default
 partition (
\family typewriter
mkfs.ext4 /mars/
\family default
 or similar), and continue with step 7.
\end_layout

\begin_layout Enumerate
If your old 
\family typewriter
/mars/
\family default
 works, and you did not already (forcefully) switch your designated primary
 to the final destination, do it now (see description in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Forced-Switching"

\end_inset

).
\end_layout

\begin_layout Enumerate
Say 
\family typewriter
marsadm delete-resource mydata --force
\family default
.
 This will cleanup all internal symlink tree information for the resource,
 but will leave your disk data intact.
\end_layout

\begin_layout Enumerate
Locally build up the new resource as usual, out of the underlying disk.
\end_layout

\begin_layout Enumerate
Check whether the new resource works in standalone mode.
\end_layout

\begin_layout Enumerate
When necessary, repeat these steps with other resources.
\end_layout

\begin_layout Enumerate
Finally, do all the 
\family typewriter
join-resource
\family default
s on the respective cluster nodes, according to your new redundancy scenario
 after the failures (e.g.
 after activating spare nodes, etc).
\end_layout

\begin_layout Standard
Now you can choose how the rebuild your cluster.
 If you rebuilt 
\family typewriter
/mars/
\family default
 anywhere, you should do the same on all other (surviving) cluster nodes
 and start over with a fresh 
\family typewriter
join-cluster
\family default
 on them.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 Never use 
\family typewriter
delete-resource
\family default
 twice on the same resource name, at least after you have already a working
 standalone primary
\begin_inset Foot
status open

\begin_layout Plain Layout
Of course, when you don't have created the 
\emph on
same
\emph default
 resource anew, you may repeat 
\family typewriter
delete-resource
\family default
 on other cluster nodes in order to get rid of local files / symlinks which
 had not been propagated to other nodes before.
\end_layout

\end_inset

.
 You might accidentally destroy your again-working copy!
\end_layout

\begin_layout Standard
Before re-connecting any network cable on any non-primary (new secondaries),
 ensure that all 
\family typewriter
/dev/mars/mydata
\family default
 devices are no longer in use (e.g.
 from an old primary role before the incident happened), and that each local
 disk is detached.
 Only after that, you should be able to safely re-connect the network.
 The 
\family typewriter
delete-resource
\family default
 given at the new primary should propagate now to each of your secondaries,
 and your local disk should be usable for a re-
\family typewriter
join-resource
\family default
.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

When you did not rebuild your cluster from scratch with fresh 
\family typewriter
/mars/
\family default
 filesystems, and one of the old cluster nodes is supposed to be removed
 permanently, use 
\family typewriter
leave-resource
\family default
 (optionally with 
\family typewriter
--host=
\family default
 and/or 
\family typewriter
--force
\family default
) and finally 
\family typewriter
leave-cluster
\family default
.
\end_layout

\begin_layout Subsection
Experts only: Special Trick Switching and Rebuild
\end_layout

\begin_layout Standard
The following is a further alternative for 
\series bold
experts
\series default
 who really know what they are doing.
 The method is very simple and therefore well-suited for coping with mass
 failures, e.g.
 
\series bold
power blackout of whole datacenters
\series default
.
\end_layout

\begin_layout Standard
In case a primary datacenter fails as a whole for whatever reason and you
 have a backup datacenter, do the following steps in the backup datacenter:
\end_layout

\begin_layout Enumerate
Fencing step: by means of firewalling, ensure that the (virtually) damaged
 datacenter nodes 
\series bold
cannot
\series default
 be reached over the network.
 For example, you may place REJECT rules into all of your local iptables
 firewalls at the backup datacenter.
 Alternatively, you may block the routes at the appropriate central router(s)
 in your network.
\end_layout

\begin_layout Enumerate
Run the sequence 
\family typewriter
marsadm disconnect all; marsadm primary --force all
\family default
 on all nodes in the backup datacenter.
\end_layout

\begin_layout Enumerate
Restart your services in the back datacenter (as far as necessary).
 Depending on your network setup, further steps like switching BGP routes
 etc may be necessary.
\end_layout

\begin_layout Enumerate
Check that 
\emph on
all
\emph default
 your services are 
\emph on
really
\emph default
 up and running, before you try to repair anything! Failing to do so may
 result in data loss when you execute the following restore method for 
\emph on
experts
\emph default
.
\end_layout

\begin_layout Standard
Now your backup datacenter should continue servicing your clients.
 The final reconstruction of the originally primary datacenter works as
 follows:
\end_layout

\begin_layout Enumerate
At the damaged primary datacenter, ensure that nowhere the MARS kernel module
 is running.
 In case of a power blackout, you shouldn't have executed an automatic 
\family typewriter
modprobe mars
\family default
 anywhere during reboot, so you should be already done when all your nodes
 are up again.
 In case some nodes had no reboot, execute 
\family typewriter
rmmod mars
\family default
 everywhere.
 If 
\family typewriter
rmmod
\family default
 refuses to run, you may need to umount the 
\family typewriter
/dev/mars/mydata
\family default
 device first.
 When nothing else helps, you may just reboot your hanging nodes.
\end_layout

\begin_layout Enumerate
Do an 
\family typewriter
rm -rf /mars/resource-$mydata/
\family default
 for all resources which had been primary before the blackout.
 In order to avoid unnecessary traffic, please do this only as far as really
 necessary.
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 Caution! before doing this, check that the corresponding directory exists
 at the backup datacenter, and that it is 
\emph on
really
\emph default
 healthy!
\end_layout

\begin_layout Enumerate
Un-Fencing: restore your network firewall / routes and check that they work
 (
\family typewriter
ping
\family default
 etc).
\end_layout

\begin_layout Enumerate
Do 
\family typewriter
modprobe mars
\family default
 everywhere.
 All missing directories and their missing symlinks should be automatically
 fetched from the backup datacenter.
\end_layout

\begin_layout Enumerate
Run 
\family typewriter
marsadm join-resource $res
\family default
 everywhere.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

It is 
\series bold
crucial
\series default
 that the fencing step 
\series bold
must
\series default
 be executed 
\emph on
before
\emph default
 any 
\family typewriter
primary --force
\family default
! This way, no true split brain will occur at the backup datacenter side,
 because there is simply no chance for transferring different versions over
 the network.
 It is also crucial to remove any (potentially diverging) resource directories
 
\emph on
before
\emph default
 the 
\family typewriter
modprobe
\family default
! This way, the backup datacenter never runs into split brain.
 This saves you a lot of detail work for split brain resolution when you
 have to restore bulks of nodes in a short time.
\end_layout

\begin_layout Section
Inspecting the State of MARS
\begin_inset CommandInset label
LatexCommand label
name "sec:Inspecting-the-State"

\end_inset


\end_layout

\begin_layout Standard
The main command for viewing the current state of MARS Light is
\end_layout

\begin_layout Itemize

\family typewriter
marsadm view mydata
\end_layout

\begin_layout Standard
or its more specialized variants
\end_layout

\begin_layout Itemize

\family typewriter
marsadm view-
\emph on
macroname
\emph default
 mydata
\end_layout

\begin_layout Standard
where 
\family typewriter
\emph on
macroname
\family default
\emph default
 is one of the following macros described in the following sections.
 As always, you may replace the resource name 
\family typewriter
mydata
\family default
 with the special keyword 
\family typewriter
all
\family default
 in order to get the state of all locally joined resources.
\end_layout

\begin_layout Subsection
Predefined Macros
\end_layout

\begin_layout Subsubsection
Predefined Complex and High-Level Macros
\begin_inset CommandInset label
LatexCommand label
name "sub:Predefined-Complex-and"

\end_inset


\end_layout

\begin_layout Standard
The following predefined complex macros try to address the information needs
 of humans.
 Nevertheless, they can also be used in scripts, but beware that sometimes
 the output may change its format depending on certain if-conditions.
\end_layout

\begin_layout Standard
Notice: the definitions of predefined complex macros may be updated in the
 course of the MARS project.
 However, the primitive macros recursively called by the complex ones will
 be hopefully rather stable in future (with the exception of bugfixes for
 major bugs).
 If you want to retain an old / outdated version of a complex macro, just
 check it out from git, follow the instructions in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Creating-your-own"

\end_inset

, and preferably give it a different name in order to avoid confusion with
 the newer version.
 In general, it should be possible to use old macros with newer versions
 of 
\family typewriter
marsadm
\family default

\begin_inset Foot
status open

\begin_layout Plain Layout
You might need to check out also old versions of further macros and adapt
 their names, whenever complex macros call each other.
\end_layout

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
default
\family default
 This is equivalent to 
\family typewriter
marsadm view mydata
\family default
 without 
\family typewriter
\emph on
-maroname
\family default
\emph default
 suffix.
 It shows a one-line status summary for each resource, optionally augmented
 with a progress bar whenever a sync or a fetch of logfiles is currently
 running.
 The status line has the following fields:
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
%{res}
\family default
 resource name.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
%include{diskstate}
\family default
 see 
\family typewriter
diskstate
\family default
 macro below.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
%include{replstate}
\family default
 see 
\family typewriter
replstate
\family default
 macro below.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
%include{flags}
\family default
 see 
\family typewriter
flags
\family default
 macro below.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
%include{role}
\family default
 see 
\family typewriter
role
\family default
 macro below.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
%include{primarynode}
\family default
 see 
\family typewriter
primarynode
\family default
 macro below.
\end_layout

\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
1and1
\family default
 A variant of 
\family typewriter
default
\family default
 for internal use by 1&1 Internet AG.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
diskstate
\family default
 Shows the status of the underlying disk device: 
\family typewriter
NotPresent
\family default
, 
\family typewriter
Detached
\family default
, 
\family typewriter
Inconsistent
\family default
, 
\family typewriter
OutDated
\family default
, 
\family typewriter
UpToDate
\family default
.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
diskstate-1and1
\family default
 A variant for internal use by 1&1 Internet AG.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
replstate
\family default
 Shows the status of the replication: 
\family typewriter
NotJoined
\family default
, 
\family typewriter
PrimaryUnreachable
\family default
, 
\family typewriter
PausedSync
\family default
, 
\family typewriter
Syncing
\family default
, 
\family typewriter
PausedReplay
\family default
, 
\family typewriter
Replaying
\family default
.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
replstate-1and1
\family default
 A variant for internal use by 1&1 Internet AG.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
flags
\family default
 For each of disk, attach, sync, fetch, and replay, show exactly one character.
 Each character is either a capital one, or the corresponding lowercase
 one, or a dash.
 The meaning is as follows:
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
disk/device: 
\family typewriter
D
\family default
 = the device 
\family typewriter
/dev/mars/mydata
\family default
 is present, 
\family typewriter
d
\family default
 = only the underlying disk 
\family typewriter
/dev/lv-x/mydata
\family default
 is present, 
\family typewriter
-
\family default
 = none present.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
attach: 
\family typewriter
A
\family default
 = attached, 
\family typewriter
a
\family default
 = currently trying to attach/detach but not yet ready (intermediate state),
 
\family typewriter
-
\family default
 = attach is switched off.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
sync: 
\family typewriter
S
\family default
 = sync finished, 
\family typewriter
s
\family default
 = currently syncing, 
\family typewriter
-
\family default
 = sync is switched off.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
fetch: 
\family typewriter
F
\family default
 = fetched logfiles are (almost) up-to-date, 
\family typewriter
f
\family default
 = currently fetching (some parts of) a logfile, 
\family typewriter
-
\family default
 = fetch is switched off.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
replay: 
\family typewriter
R
\family default
 = all logfiles are replayed, 
\family typewriter
r
\family default
 = currently replaying, 
\family typewriter
-
\family default
 = replay is switched off.
\end_layout

\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
flags-1and1
\family default
 A variant for internal use by 1&1 Internet AG.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
todo-role
\family default
 Shows the 
\emph on
designated
\emph default
 state: 
\family typewriter
None
\family default
, 
\family typewriter
Primary
\family default
 or 
\family typewriter
Secondary
\family default
.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
role
\family default
 Shows the 
\emph on
actual
\emph default
 state: 
\family typewriter
None
\family default
, 
\family typewriter
NotYetPrimary
\family default
, 
\family typewriter
Primary
\family default
, 
\family typewriter
RemainsPrimary
\family default
, or 
\family typewriter
Secondary
\family default
.
 Any differences to the designated state are indicated by a prefix to the
 keyword 
\family typewriter
Primary
\family default
: 
\family typewriter
NotYet
\family default
 means that it 
\emph on
should
\emph default
 become primary, but actually hasn't.
 Vice versa, 
\family typewriter
Remains
\family default
 means that it 
\emph on
should
\emph default
 leave primary state in order to become secondary, but actually cannot do
 that because the 
\family typewriter
/dev/mars/mydata
\family default
 device is currently in use.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
role-1and1
\family default
 A variant for internal use by 1&1 Internet AG.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
primarynode
\family default
 Display 
\family typewriter
(none)
\family default
 or the hostname of the designated primary.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
primarynode-1and1
\family default
 A variant for internal use by 1&1 Internet AG.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
syncinfo
\family default
 Shows an informational progress bar when sync is running.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
syncinfo-1and1
\family default
 A variant for internal use by 1&1 Internet AG.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
replinfo
\family default
 Shows an informational progress bar when fetch is running.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
replinfo-1and1
\family default
 A variant for internal use by 1&1 Internet AG.
\end_layout

\begin_layout Subsubsection
Predefined Trivial Macros
\begin_inset CommandInset label
LatexCommand label
name "sub:Predefined-Trivial-Macros"

\end_inset


\end_layout

\begin_layout Paragraph
Intended for Humans
\end_layout

\begin_layout Standard
In the following, shell glob notation 
\family typewriter
{a,b}
\family default
 is used to document similar variants of similar macros in a single place.
 When you actually call the macro, you must choose one of the possible variants
 (excluding the braces).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
the-err-msg
\family default
 Show reported errors for a resource.
 When the resource argument is missing or empty, show global error information.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
all-err-msg
\family default
 Like before, but show all information including those which are 
\family typewriter
OK
\family default
.
 This way, you get a list
\begin_inset Foot
status open

\begin_layout Plain Layout
The list may be extended in future versions of MARS.
\end_layout

\end_inset

 of 
\emph on
all
\emph default
 potential error information present in the system.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{all,the}-wrn-msg
\family default
 Show all / reported warnings in the system.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{all,the}-inf-msg
\family default
 Show all / reported informational messages in the system.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{all,the}-msg
\family default
 Show all / reported messages regardless of its classification.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{all,the}-global-msg
\family default
 Show global messages not associated with any resource (the resource argument
 of the 
\family typewriter
marsadm
\family default
 command is ignored in this case).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{all,the}-global-{inf,wrn,err}-msg
\family default
 Dito, but more specific.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{all,the}-pretty-{global-,}{inf-,wrn-,err-,}msg
\family default
 Dito, but show numerical timestamps in a human readable form.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{all,the}-{global-,}{inf-,wrn-,err-,}count
\family default
 Instead of showing the messages, show their count (number of lines).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
todo-{attach,sync,fetch,replay,primary}
\family default
 Shows a boolean value (0 or 1) indicating the current state of the correspondin
g todo switch (whether on or off).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
get-resource-{fat,err,wrn}
\family default
 Access to the internal error status files.
 This is not an official interface and may thus change at any time without
 notice.
 Use this only for human inspection, not for scripting!
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
get-resource-{fat,err,wrn}-count
\family default
 Dito, but get the number of lines instead of the text.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
is-{attach,sync,fetch,replay,primary}
\family default
 Shows a boolean value (0 or 1) indicating the 
\emph on
actual
\emph default
 state, whether the corresponding action has been actually carried out,
 or not (yet).
 Notice that the values indicated by 
\family typewriter
is-*
\family default
 may differ from the 
\family typewriter
todo-*
\family default
 values when something is not (yet) working.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
is-split-brain
\family default
 Shows whether split brain (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Split-Brain-Resolution"

\end_inset

) has been detected, or not.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
is-consistent
\family default
 Shows whether the underlying disk is in a consistent state, i.e.
 whether it 
\emph on
could
\emph default
 be (potentially) detached and then used for read-only test-mounting.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
is-emergency
\family default
 Shows whether emergency mode (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Emergency-Mode"

\end_inset

) has been entered for the named resource, or not.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
rest-space
\family default
 (global, no resource argument necessary) Shows the 
\emph on
logically
\emph default
 available space in 
\family typewriter
/mars/
\family default
, which may deviate from the physically available space as indicated by
 the 
\family typewriter
df
\family default
 command.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
present-{disk,device}
\family default
 Show (as a boolean value) whether the underlying disk, or the 
\family typewriter
/dev/mars/mydata
\family default
 device, is available.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
get-{disk,device}
\family default
 Show the name of the underlying disk, or of the 
\family typewriter
/dev/mars/mydata
\family default
 device (if it is available).
\end_layout

\begin_layout Paragraph
Intended for Scripting
\end_layout

\begin_layout Standard
While complex macros may output a whole bunch of information, the following
 
\begin_inset Quotes eld
\end_inset

trivial
\begin_inset Quotes erd
\end_inset

 macros are outputting exactly one value.
 They are intended for script use.
 Of course, curious humans may also try them :)
\end_layout

\begin_layout Standard
In the following, shell glob notation 
\family typewriter
{a,b}
\family default
 is used to document similar variants of similar macros in a single place.
 When you actually call the macro, you must choose one of the possible variants
 (excluding the braces).
\end_layout

\begin_layout Subparagraph
Amounts of Data Inquiry
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/fetch-replay-total.fig
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
overview on amounts / cursors
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
deletable-size
\family default
 Show the total amount of 
\emph on
locally present
\emph default
 logfile data which 
\emph on
could
\emph default
 be deleted by 
\family typewriter
marsadm log-delete-all mydata
\family default
.
 This differs almost always from both 
\family typewriter
replay-pos
\family default
 and 
\family typewriter
occupied-size
\family default
 due to granularity reasons (only whole logfiles can be deleted).
 Units are 
\emph on
bytes
\emph default
, not kilobytes.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
occupied-size
\family default
 Show the total amount of 
\emph on
locally present
\emph default
 logfile data (sum of all file sizes).
 This is often roughly approximate to 
\family typewriter
fetch-pos
\family default
, but it may differ vastly (in both directions) when logfiles are not completely
 transferred, when some are damaged, during split brain, after a 
\family typewriter
join-resource
\family default
 / 
\family typewriter
invalidate
\family default
, or when the resource is in emergency mode (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Emergency-Mode"

\end_inset

).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{sync,fetch,replay,work}-size
\family default
 Show the total amount of 
\emph on
relevant
\emph default
 data which is / was to be processed by either sync, fetch, or replay.
 
\family typewriter
work-size
\family default
 is equivalent to 
\family typewriter
fetch-size
\family default
.
 
\family typewriter
replay-size
\family default
 is equivalent to 
\family typewriter
fetch-pos
\family default
 (see below).
 Units are 
\emph on
bytes
\emph default
, not kilobytes.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{sync,fetch,replay,work}-pos
\family default
 Show the total amount of 
\emph on
relevant
\emph default
 data which is already processed (current 
\begin_inset Quotes eld
\end_inset

cursor
\begin_inset Quotes erd
\end_inset

 position).
 
\family typewriter
work-pos
\family default
 is equivalent to 
\family typewriter
replay-pos
\family default
.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

The 
\begin_inset Quotes eld
\end_inset

relevant
\begin_inset Quotes erd
\end_inset

 0% point is the 
\emph on
locally contiguous
\emph default
 amount of data since the last 
\family typewriter
create-resource
\family default
, 
\family typewriter
join-resource
\family default
, or 
\family typewriter
invalidate
\family default
, or since the last emergency mode, but possibly shortened by 
\family typewriter
log-delete
\family default
s.
 Notice that the 0% point may be different on different cluster nodes, because
 their resource history may be different or non-contiguous during split
 brain, or after a 
\family typewriter
join-resource
\family default
, or after 
\family typewriter
invalidate
\family default
, or during / after emergency mode.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{sync,fetch,replay,work}-rest
\family default
 Shows the difference between 
\family typewriter
*-size
\family default
 and 
\family typewriter
*-pos
\family default
 (amount of work to do).
 
\family typewriter
work-rest
\family default
 is therefore the difference between 
\family typewriter
fetch-size
\family default
 and 
\family typewriter
replay-pos
\family default
, which is the 
\emph on
total
\emph default
 amount of work to do (regardless whether to be fetched and/or to be replayed).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{sync,fetch,replay,work}-reached
\family default
 Boolean value indicating whether 
\family typewriter
*-rest
\family default
 dropped down to zero.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{fetch,replay,work}-threshold-reached
\family default
 Boolean value indicating whether 
\family typewriter
*-rest
\family default
 dropped down to 
\family typewriter
%{threshold}
\family default
, which is pre-settable by the 
\family typewriter
--threshold=
\emph on
size
\family default
\emph default
 command line option (default is 10 MiB).
 In asynchronous use cases of MARS, this should be preferred over 
\family typewriter
*-reached
\family default
 for 
\emph on
human display
\emph default
, because it produces less flickering by the inevitable replication delay.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{fetch,replay,work}-almost-reached
\family default
 Boolean value indicating whether 
\family typewriter
*-rest
\family default
 
\emph on
almost
\emph default
 / 
\emph on
approximately
\emph default
 dropped down to zero.
 The default is that at lease 990 permille are reached.
 In asynchronous use cases of MARS, this should be preferred over 
\family typewriter
*-reached
\family default
 for 
\emph on
human display
\emph default
, because it produces less flickering by the inevitable replication delay.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{sync,fetch,replay,work}-percent
\family default
 The cursor position 
\family typewriter
*-pos
\family default
 as a percentage of 
\family typewriter
*-size
\family default
.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{sync,fetch,replay,work}-permille
\family default
 The cursor position 
\family typewriter
*-pos
\family default
 as permille of 
\family typewriter
*-size
\family default
.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{sync,fetch,replay,work}-rate
\family default
 Show the current throughput in bytes
\begin_inset Foot
status open

\begin_layout Plain Layout
Notice that the internal granularity reported by the kernel may be coarser,
 such as KiB.
 This interfaces abstracts away from kernel internals and thus presents
 everything in byte units.
\end_layout

\end_inset

 per second.
 
\family typewriter
work-rate
\family default
 is the 
\emph on
maximum
\emph default
 of 
\family typewriter
fetch-rate
\family default
 and 
\family typewriter
replay-rate
\family default
.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
{sync,fetch,replay,work}-remain
\family default
 Show the 
\emph on
estimated
\emph default
 remaining time for completion of the respective operation.
 This is just a very raw guess.
 Units are seconds.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
summary-vector
\family default
 Show the colon-separated CSV value 
\family typewriter
%replay-pos{}:%fetch-pos{}:%fetch-size{}
\family default
.
\end_layout

\begin_layout Subparagraph
Misc Informational Status
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
get-primary
\family default
 Return the name of the current designated primary node.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
actual-primary
\family default
 (deprecated) try to determine the name of the node which 
\emph on
appears
\emph default
 to be the actual primary.
 This only a 
\series bold
\emph on
guess
\series default
\emph default
, because it is not generally unique in split brain situation! Don't rely
 on this.
 Try to a avoid it.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
is-alive
\family default
 Boolean value indicating whether all other nodes participating in 
\family typewriter
mydata
\family default
 are reachable / healthy.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
uuid
\family default
 (global) Show a unique identifier originally created at create-cluster.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
tree
\family default
 (global) Indicate symlink tree version (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-Symlink-Tree"

\end_inset

).
\end_layout

\begin_layout Subparagraph
Experts Only
\end_layout

\begin_layout Standard
The following is for hackers who know what they are doing.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
wait-{is,todo}-{attach,sync,fetch,replay,primary}-{on,off}
\family default
 This may be used to program some useful waiting conditions in advanced
 macro scripts.
 Use at your own risk!
\end_layout

\begin_layout Subsection
Creating your own Macros
\begin_inset CommandInset label
LatexCommand label
name "sub:Creating-your-own"

\end_inset


\end_layout

\begin_layout Standard
In order to create your own macros, you could start writing them from scratch
 with your favorite ASCII text editor.
 However, it is much easier to take an existing macro and to customize it
 to your needs.
 In addition, you can learn something about macro programming by looking
 at the existing macro code.
\end_layout

\begin_layout Standard
Go to a new empty directory and say
\end_layout

\begin_layout Itemize

\family typewriter
marsadm dump-macros
\end_layout

\begin_layout Standard
in order to get the most interesting complex macros, or say
\end_layout

\begin_layout Itemize

\family typewriter
marsadm dump-all-macros
\end_layout

\begin_layout Standard
in order to additionally get some primitive macros which could be customized
 if needed.
 This will write lots of files 
\family typewriter
*.tpl
\family default
 into your current working directory.
\end_layout

\begin_layout Standard
Any modfied or new macro file should be placed either into the current working
 directory 
\family typewriter
./
\family default
 , or into 
\family typewriter
$HOME/.marsadm/
\family default
 , or into 
\family typewriter
/etc/marsadm/
\family default
 .
 They will be searched in this order, and the first match will win.
 When no macro file is found, the built-in version will be used if it exists.
 This way, you may override builtin macros.
\end_layout

\begin_layout Standard
Example: if you have a file 
\family typewriter
./mymacro.tpl
\family default
 you just need to say 
\family typewriter
marsadm view-mymacro mydata
\family default
 in order to invoke it in the resource context 
\family typewriter
mydata
\family default
.
\end_layout

\begin_layout Subsubsection
General Macro Syntax
\end_layout

\begin_layout Standard
Macros are simple ASCII text, enriched with calls to other macros.
\end_layout

\begin_layout Standard
ASCII text outside of comments are copied to the output verbatim.
 Comments are skipped.
 Comments may have one of the following well-known forms:
\end_layout

\begin_layout Itemize

\family typewriter
# skipped text until / including next newline character
\end_layout

\begin_layout Itemize

\family typewriter
// skipped text until / including next newline character
\end_layout

\begin_layout Itemize

\family typewriter
/* skipped text including any newline characters */
\end_layout

\begin_layout Itemize
denoted as Perl regex: 
\family typewriter

\backslash

\backslash

\backslash
n
\backslash
s* 
\family default
(single backslash directly followed by a newline character, and eating up
 any whitespace characters at the beginning of the next line) Hint: this
 may be fruitfully used to structure macros in a more readable form / indentatio
n.
\end_layout

\begin_layout Standard
Special characters are always initiated by a backslash.
 The following pre-defined special character sequences are recognized:
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
n
\family default
 newline
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
r
\family default
 return (useful for DOS compatibility)
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
t
\family default
 tab
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
f
\family default
 formfeed
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
b
\family default
 backspace
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
a
\family default
 alarm (bell)
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
e
\family default
 escape (e.g.
 for generating ANSI escape sequences)
\end_layout

\begin_layout Itemize

\family typewriter

\backslash

\family default
 followed by anything else: assure that the next character is taken verbatim.
 Although possible, please don't use this for escaping letters, because
 further escape sequences might be pre-defined in future.
 Best practice is to use this only for escaping the backslash itself, or
 for escaping the percent sign when you don't want to call a macro (protect
 against evaluation), or to escape a brace directly after a macro call (verbatim
 brace not to be interpreted as a macro parameter).
\end_layout

\begin_layout Itemize
All other characters stand for their own.
 If you like, you should be able to produce XML, HTML, JSON and other ASCII-base
d output formats this way.
\end_layout

\begin_layout Standard
Macro calls have the following syntax:
\end_layout

\begin_layout Itemize

\family typewriter
%
\emph on
macroname
\emph default
{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
}{
\emph on
argn
\emph default
}
\end_layout

\begin_layout Itemize
Of course, arguments may be empty, denoted as 
\family typewriter
{}
\end_layout

\begin_layout Itemize
It is possible to supply more arguments than required.
 These are simply ignored.
\end_layout

\begin_layout Itemize
There must be always at least 1 argument, even for parameterless macros.
 In such a case, it is good style to leave it empty (even if it is actually
 ignored).
 Just write 
\family typewriter
%parameterlessmacro{}
\family default
 in such a case.
\end_layout

\begin_layout Itemize

\family typewriter
%{
\emph on
varname
\emph default
}
\family default
 syntax: As a special case, the macro name may be empty, but then the first
 argument must denote a previously defined variable (such as assigned via
 
\family typewriter
%let{varname}{myvalue}
\family default
, or a pre-defined standard variable like 
\family typewriter
%{res}
\family default
 for the current resource name, see later paragraph 
\begin_inset CommandInset ref
LatexCommand ref
reference "par:Predefined-Variables"

\end_inset

).
\end_layout

\begin_layout Itemize
Of course, parameter calls may be (almost) arbitrarily nested.
\end_layout

\begin_layout Itemize
Of course, the 
\emph on
correctness
\emph default
 of nesting of braces must be generally obeyed, as usual in any other macro
 processor language.
 General rule: for each opening brace, there must be exactly one closing
 brace somewhere afterwards.
\end_layout

\begin_layout Standard
These rules are hopefully simple and intuitive.
 There are currently no exceptions.
 In particular, there is no special infix operator syntax for arithmetic
 expressions, and therefore no operator precedence rules are necessary.
 You have to write nested arithmetic expressions always in the above prefix
 syntax, like 
\family typewriter
%*{7}{%+{2}{3}}
\family default
 (similar to non-inverse polish notation).
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

When deeply nesting macros and their braces, you may easily find yourself
 in a feeling like in the good old days of Lisp.
 Use the above backslash-newline syntax to indent your macros in a readable
 and structured way.
 Fortunately, modern text editors like (x)emacs or vim have modes for dealing
 with the correctness of nested braces.
\end_layout

\begin_layout Subsubsection
Builtin / Primitive Macros
\end_layout

\begin_layout Standard
Primitive macros can be called in two alternate forms:
\end_layout

\begin_layout Itemize

\family typewriter
%primitive-
\emph on
macroname
\emph default
{
\emph on
something
\emph default
}
\end_layout

\begin_layout Itemize

\family typewriter
%
\emph on
macroname
\emph default
{
\emph on
something
\emph default
}
\end_layout

\begin_layout Standard
When using the 
\family typewriter
%primitive-*{}
\family default
 form, you 
\emph on
explicitly disallow
\emph default
 interception of the call by a 
\family typewriter
*.tpl
\family default
 file.
 Otherwise, you may override the standard definition even of primitive macros
 by your own template files.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 Notice that 
\family typewriter
%call{}
\family default
 conventions are used in such a case.
 The parameters are passed via 
\family typewriter
%{0}
\family default
 
\begin_inset Formula $\ldots$
\end_inset


\family typewriter
%{n}
\family default
 variables (see description below).
\end_layout

\begin_layout Paragraph
Standard MARS State Inspection Macros
\end_layout

\begin_layout Standard
These are already described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Predefined-Trivial-Macros"

\end_inset

.
 When calling one of them, the call will simply expand to the corresponding
 value.
\end_layout

\begin_layout Standard
Example: 
\family typewriter
%get-primary{}
\family default
 will expand to the hostname of the current designated primary node.
\end_layout

\begin_layout Paragraph
Further MARS State Inspection Macros
\end_layout

\begin_layout Paragraph
Variable Access Macros
\end_layout

\begin_layout Itemize

\family typewriter
%let{
\emph on
varname
\emph default
}{
\emph on
expression
\emph default
} 
\family default
Evaluates both 
\family typewriter
\emph on
varname
\family default
\emph default
 and the 
\family typewriter
\emph on
expression
\family default
\emph default
.
 The 
\family typewriter
\emph on
expression
\family default
\emph default
 is then assigned to 
\family typewriter
varname
\family default
.
\end_layout

\begin_layout Itemize

\family typewriter
%let{
\emph on
varname
\emph default
}{
\emph on
expression
\emph default
} 
\family default
Evaluates both 
\family typewriter
\emph on
varname
\family default
\emph default
 and the 
\family typewriter
\emph on
expression
\family default
\emph default
.
 The 
\family typewriter
\emph on
expression
\family default
\emph default
 is then appended to 
\family typewriter
varname
\family default
 (concatenation).
\end_layout

\begin_layout Itemize

\family typewriter
%{
\emph on
varname
\emph default
} 
\family default
Evaluates 
\family typewriter
\emph on
varname
\family default
\emph default
, and outputs the value of the corresponding variable.
 When the variable does not exist, the empty string is returned.
\end_layout

\begin_layout Itemize

\family typewriter
%{++}{
\emph on
varname
\emph default
} 
\family default
or 
\family typewriter
%{
\emph on
varname
\emph default
}{++}
\family default
 Has the obvious well-known side effect e.g.
 from C or Java.
 You may also use 
\family typewriter
--
\family default
 instead of 
\family typewriter
++
\family default
.
 This is handy for programming loops (see below).
\end_layout

\begin_layout Itemize

\family typewriter
%dump-vars{} 
\family default
Writes all currently defined variables (from the currently active scope)
 to 
\family typewriter
stderr
\family default
.
 This is handy for debugging.
\end_layout

\begin_layout Paragraph
CSV Array Macros
\end_layout

\begin_layout Itemize

\family typewriter
%{
\emph on
varname
\emph default
}{
\emph on
delimiter
\emph default
}{
\emph on
index
\emph default
} 
\family default
Evaluates all arguments.
 The contents of 
\family typewriter
\emph on
varname
\family default
\emph default
 is interpreted as a comma-separated list, delimited by 
\family typewriter
\emph on
delimiter
\family default
\emph default
.
 The 
\family typewriter
\emph on
index
\family default
\emph default
'th list element is returned.
\end_layout

\begin_layout Itemize

\family typewriter
%set{
\emph on
varname
\emph default
}{
\emph on
delimiter
\emph default
}{
\emph on
index
\emph default
}{
\emph on
expression
\emph default
} 
\family default
Evaluates all arguments.
 The contents of the old 
\family typewriter
\emph on
varname
\family default
\emph default
 is interpreted as a comma-separated list, delimited by 
\family typewriter
\emph on
delimiter
\family default
\emph default
.
 The 
\family typewriter
\emph on
index
\family default
\emph default
'th list element is the assigend to, or substituted by, 
\family typewriter
\emph on
expression
\family default
\emph default
.
\end_layout

\begin_layout Paragraph
Arithmetic Expression Macros
\end_layout

\begin_layout Standard
The following macros can also take more than two arguments, carrying out
 the corresponding arithmetic operation in sequence (it depends on the operator
 whether this accords to the associative law).
\end_layout

\begin_layout Itemize

\family typewriter
%+{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Evaluates the arguments, inteprets them as numbers, and adds them together.
\end_layout

\begin_layout Itemize

\family typewriter
%-{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Subtraction.
\end_layout

\begin_layout Itemize

\family typewriter
%*{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Multiplication.
\end_layout

\begin_layout Itemize

\family typewriter
%/{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Division.
\end_layout

\begin_layout Itemize

\family typewriter
%%{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Modulus.
\end_layout

\begin_layout Itemize

\family typewriter
%&{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Bitwise Binary And.
\end_layout

\begin_layout Itemize

\family typewriter
%|{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Bitwise Binary Or.
\end_layout

\begin_layout Itemize

\family typewriter
%^{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Bitwise Binary Exclusive Or.
\end_layout

\begin_layout Itemize

\family typewriter
%<<{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Binary Shift Left.
\end_layout

\begin_layout Itemize

\family typewriter
%>>{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Binary Shift Right.
\end_layout

\begin_layout Itemize

\family typewriter
%min{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Compute the arithmetic minimum of the arguments.
\end_layout

\begin_layout Itemize

\family typewriter
%max{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Compute the arithmetic maximum of the arguments.
\end_layout

\begin_layout Paragraph
Boolean Condition Macros
\end_layout

\begin_layout Itemize

\family typewriter
%=={
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Numeral Equality.
\end_layout

\begin_layout Itemize

\family typewriter
%!={
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Numeral Inequality.
\end_layout

\begin_layout Itemize

\family typewriter
%<{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Numeral Less Then.
\end_layout

\begin_layout Itemize

\family typewriter
%<={
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Numeral Less or Equal.
\end_layout

\begin_layout Itemize

\family typewriter
%>{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Numeral Greater Then.
\end_layout

\begin_layout Itemize

\family typewriter
%>={
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Numeral Greater or Equal.
\end_layout

\begin_layout Itemize

\family typewriter
%eq{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default

\begin_inset space ~
\end_inset

String Equality.
\end_layout

\begin_layout Itemize

\family typewriter
%ne{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
String Inequality.
\end_layout

\begin_layout Itemize

\family typewriter
%lt{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
String Less Then.
\end_layout

\begin_layout Itemize

\family typewriter
%le{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
String Less or Equal.
\end_layout

\begin_layout Itemize

\family typewriter
%gt{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
String Greater Then.
\end_layout

\begin_layout Itemize

\family typewriter
%ge{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
String Greater or Equal.
\end_layout

\begin_layout Itemize

\family typewriter
%=~{
\emph on
string
\emph default
}{
\emph on
regex
\emph default
}{
\emph on
opts
\emph default
} 
\family default
Checks whether 
\family typewriter
\emph on
string
\family default
\emph default
 matches the Perl regular expression 
\family typewriter
\emph on
regex
\family default
\emph default
.
 Modifiers can be given via 
\family typewriter
\emph on
opts
\family default
\emph default
.
\end_layout

\begin_layout Paragraph
Shortcut Evaluation Operators
\end_layout

\begin_layout Standard
The following operators evaluate their arguments only when needed (like
 in C).
\end_layout

\begin_layout Itemize

\family typewriter
%&&{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Logical And.
\end_layout

\begin_layout Itemize

\family typewriter
%and{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Alias for 
\family typewriter
%&&{}
\family default
.
\end_layout

\begin_layout Itemize

\family typewriter
%||{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Logical Or.
\end_layout

\begin_layout Itemize

\family typewriter
%or{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
} 
\family default
Alias for 
\family typewriter
%||{}
\family default
.
\end_layout

\begin_layout Paragraph
Unary Operators
\end_layout

\begin_layout Itemize

\family typewriter
%!{
\emph on
arg
\emph default
} 
\family default
Logical Not.
\end_layout

\begin_layout Itemize

\family typewriter
%not{
\emph on
arg
\emph default
} 
\family default
Alias for 
\family typewriter
%!{}
\family default
.
\end_layout

\begin_layout Itemize

\family typewriter
%~{
\emph on
arg
\emph default
} 
\family default
Bitwise Ńegation.
\end_layout

\begin_layout Paragraph
String Functions
\end_layout

\begin_layout Itemize

\family typewriter
%length{
\emph on
string
\emph default
} 
\family default
Return the number of ASCII characters present in 
\family typewriter
\emph on
string
\family default
\emph default
.
\end_layout

\begin_layout Itemize

\family typewriter
%toupper{
\emph on
string
\emph default
} 
\family default
Return all ASCII characters converted to uppercase.
\end_layout

\begin_layout Itemize

\family typewriter
%tolower{
\emph on
string
\emph default
} 
\family default
Return all ASCII characters converted to lowercase.
\end_layout

\begin_layout Itemize

\family typewriter
%append{
\emph on
varname
\emph default
}{
\emph on
string
\emph default
} 
\family default
Equivalent to 
\family typewriter
%let{
\emph on
varname
\emph default
}{%{
\emph on
varname
\emph default
}
\emph on
string
\emph default
}
\family default
.
\end_layout

\begin_layout Itemize

\family typewriter
%subst{
\emph on
string
\emph default
}{
\emph on
regex
\emph default
}{
\emph on
subst
\emph default
}{
\emph on
opts
\emph default
} 
\family default
Perl regex substitution.
\end_layout

\begin_layout Itemize

\family typewriter
%sprintf{
\emph on
fmt
\emph default
}{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
}{
\emph on
argn
\emph default
} 
\family default
Perl 
\family typewriter
sprintf()
\family default
 operator.
 Details see Perl manual.
\end_layout

\begin_layout Itemize

\family typewriter
%human-number{
\emph on
unit
\emph default
}{
\emph on
delim
\emph default
}{
\emph on
unit-sep
\emph default
}{
\emph on
number
\emph default
1}{
\emph on
number
\emph default
2}
\begin_inset Formula $\ldots$
\end_inset

 
\family default
Convert a number or a list of numbers into human-readable 
\family typewriter
B
\family default
, 
\family typewriter
KiB
\family default
, 
\family typewriter
MiB
\family default
, 
\family typewriter
GiB
\family default
, 
\family typewriter
TiB
\family default
, as given by 
\family typewriter
\emph on
unit
\family default
\emph default
.
 When 
\family typewriter
\emph on
unit
\family default
\emph default
 is empty, a reasonable unit will be guessed automatically from the maximum
 of all given numbers.
 A single result string is produced, where multiple numbers are separated
 by 
\family typewriter
\emph on
delim
\family default
\emph default
 when necessary.
 When 
\family typewriter
\emph on
delim
\family default
\emph default
 is empty, the slash symbol 
\family typewriter
/
\family default
 is used by default (the most obvious use case is result strings like 
\family typewriter

\begin_inset Quotes eld
\end_inset

17/32 KiB
\begin_inset Quotes erd
\end_inset


\family default
).
 The final unit text is separated from the previous number(s) by 
\family typewriter
\emph on
unit-sep
\family default
\emph default
.
 When 
\family typewriter
\emph on
unit-sep
\family default
\emph default
 is empty, a single blank is used by default.
\end_layout

\begin_layout Itemize

\family typewriter
%human-seconds{
\emph on
number
\emph default
} 
\family default
Convert the given number of seconds into 
\family typewriter
hh:mm:ss
\family default
 format.
\end_layout

\begin_layout Paragraph
Complex Helper Macros
\end_layout

\begin_layout Itemize

\family typewriter
%progress{20} 
\family default
Return a string containing a progress bar showing the values from 
\family typewriter
%summary-vector{}
\family default
.
 The default width is 20 characters plus two braces.
\end_layout

\begin_layout Itemize

\family typewriter
%progress{20}{
\emph on
minvalue
\emph default
}{
\emph on
midvalue
\emph default
}{
\emph on
maxvalue
\emph default
} 
\family default
Instead of taking the values from 
\family typewriter
%summary-vector{}
\family default
, use the supplied values.
 
\family typewriter
minvalue
\family default
 and 
\family typewriter
midvalue
\family default
 indicate two different intermediate points, while 
\family typewriter
maxvalue
\family default
 will determine the 100% point.
\end_layout

\begin_layout Paragraph
Control Flow Macros
\end_layout

\begin_layout Itemize

\family typewriter
%if{
\emph on
expression
\emph default
}{
\emph on
then-part
\emph default
}
\family default
 or 
\family typewriter
%if{
\emph on
expression
\emph default
}{
\emph on
then-part
\emph default
}{
\emph on
else-part
\emph default
}
\family default
 Like in any other macro or programming language, this evaluates the 
\family typewriter
expression
\family default
 once, not copying its outcome to the output.
 If the result is non-empty and is not a string denoting the number 
\family typewriter
0
\family default
, the 
\family typewriter
\emph on
then-part
\family default
\emph default
 is evaluated and copied to the output.
 Otherwise, the 
\family typewriter
else-part
\family default
 is evaluated and copied, provided that one exists.
\end_layout

\begin_layout Itemize

\family typewriter
%unless{
\emph on
expression
\emph default
}{
\emph on
then-part
\emph default
}
\family default
 or 
\family typewriter
%unless{
\emph on
expression
\emph default
}{
\emph on
then-part
\emph default
}{
\emph on
else-part
\emph default
}
\family default
 Like 
\family typewriter
%if{}
\family default
, but the expression is logically negated.
 Essentially, this is a shorthand for 
\family typewriter
%if{%not{expression}}{...}
\family default
 or similar.
\end_layout

\begin_layout Itemize

\family typewriter
%elsif{
\emph on
expr1
\emph default
}{
\emph on
then1
\emph default
}{
\emph on
expr2
\emph default
}{
\emph on
then2
\emph default
}
\family default

\begin_inset Formula $\ldots$
\end_inset

 or 
\family typewriter
%elsif{
\emph on
expr1
\emph default
}{
\emph on
then1
\emph default
}{
\emph on
expr2
\emph default
}{
\emph on
then2
\emph default
}
\family default

\begin_inset Formula $\ldots$
\end_inset


\family typewriter
{
\emph on
odd-else-part
\emph default
}
\family default
 This is for simplification of boring if-else-if chains.
 The classical if-syntax (as shown above) has the drawback that inner if-parts
 need to be nested into outer else-parts, so rather deep nestings may occur
 when you are programming longer chains.
 This is an alternate syntax for avoidance of deep nesting.
 When giving an odd number of arguments, the last argument is taken as final
 else-part.
\end_layout

\begin_layout Itemize

\family typewriter
%elsuntil
\family default

\begin_inset Formula $\ldots$
\end_inset

 Like 
\family typewriter
%elsif
\family default
, but 
\emph on
all
\emph default
 conditions are negated.
\end_layout

\begin_layout Itemize

\family typewriter
%while{
\emph on
expression
\emph default
}{
\emph on
body
\emph default
} 
\family default
Evaluates the 
\family typewriter
\emph on
expression
\family default
\emph default
 in a while loop, like in any other macro or programming language.
 The 
\family typewriter
\emph on
body
\family default
\emph default
 is evaluated exactly as many times as the 
\family typewriter
\emph on
expression
\family default
\emph default
 holds.
 Notice that endless loops can be only avoided by a calling a non-pure macro
 inspecting external state information, or by creating (and checking) another
 side effect somewhere, like assigning to a variable somewhere.
\end_layout

\begin_layout Itemize

\family typewriter
%until{
\emph on
expression
\emph default
}{
\emph on
body
\emph default
} 
\family default
Like
\family typewriter
 %while{
\emph on
expression
\emph default
}{
\emph on
body
\emph default
}
\family default
, but negate the expression.
\end_layout

\begin_layout Itemize

\family typewriter
%for{
\emph on
exp
\emph default
r1}{
\emph on
exp
\emph default
r2}{
\emph on
exp
\emph default
r3}{
\emph on
body
\emph default
}
\family default
 As you will expect from the corresponding C, Perl, Java, or (add your favorite
 language) construct.
 Only the syntactic sugar is a little bit different.
\end_layout

\begin_layout Itemize

\family typewriter
%foreach{
\emph on
varname
\emph default
}{
\emph on
CSV-delimited-string
\emph default
}{
\emph on
delimiter
\emph default
}{
\emph on
body
\emph default
}
\family default
 As you can expect from similar 
\family typewriter
foreach
\family default
 constructs in other languages like Perl.
 Currently, the macro processor has no arrays, but can use comma-separated
 strings as a substitute.
\end_layout

\begin_layout Itemize

\family typewriter
%eval{
\emph on
count
\emph default
}{
\emph on
body
\emph default
}
\family default
 Evaluates the 
\family typewriter
\emph on
body
\family default
\emph default
 exactly as many times as indicated by the numeric argument 
\family typewriter
\emph on
count
\family default
\emph default
.
 This may be used to re-evaluate the output of other macros once again.
\end_layout

\begin_layout Itemize

\family typewriter
%protect{
\emph on
body
\emph default
}
\family default
 Equivalent to 
\family typewriter
%eval{0}{
\emph on
body
\emph default
}
\family default
, which means that the body is not evaluated at all, but copied to the output
 verbatim
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
TeX
\end_layout

\end_inset


\begin_inset space ~
\end_inset

or 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
LaTeX
\end_layout

\end_inset


\begin_inset space ~
\end_inset

fans usually know what this is good for ;)
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize

\family typewriter
%eval-down{
\emph on
body
\emph default
}
\family default
 Evaluates the 
\family typewriter
\emph on
body
\family default
\emph default
 in a loop until the result does not change any more
\begin_inset Foot
status open

\begin_layout Plain Layout
Mathematicians knowing Banach's fixedpoint theorem will know what this is
 good for ;)
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize

\family typewriter
%call{
\emph on
macroname
\emph default
}{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
}{
\emph on
argn
\emph default
}
\family default
 Like in many other macro languages, this evaluates the named macro in the
 a new scope.
 This means that any side effects produced by the called macro, such as
 variable assignments, will be reverted after the call, and therefore not
 influence the old scope.
 However notice that the arguments 
\family typewriter
\emph on
arg1
\family default
\emph default
 to 
\family typewriter
\emph on
argn
\family default
\emph default
 are evaluted in the 
\emph on
old
\emph default
 scope before the call actually happens (possibly producing side effects
 if they contain some), and their result is respectively assigned to 
\family typewriter
%{1}
\family default
 until 
\family typewriter
%{
\emph on
n
\emph default
}
\family default
 in the new scope, analogously to the Shell or to Perl.
 In addition, the new 
\family typewriter
%{0}
\family default
 gets the 
\family typewriter
\emph on
macroname
\family default
\emph default
.
 Notice that the argument evaluation happens non-lazily in the old scope
 and therefore differs from other macro processors like 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
TeX
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize

\family typewriter
%include{
\emph on
macroname
\emph default
}{
\emph on
arg1
\emph default
}{
\emph on
arg2
\emph default
}{
\emph on
argn
\emph default
}
\family default
 Like 
\family typewriter
%call{}
\family default
, but evaluates the named macro in the 
\emph on
current
\emph default
 scope (similar to the 
\family typewriter
source
\family default
 command of the bourne shell).
 This means that any side effects produced by the called macro, such as
 variable assignments, will 
\emph on
not
\emph default
 be reverted after the call.
 Even the 
\family typewriter
%{0}
\family default
 until 
\family typewriter
%{
\emph on
n
\emph default
}
\family default
 variables will continue to exist (and may lead to confusion if you aren't
 aware of that).
\end_layout

\begin_layout Itemize

\family typewriter
%callstack{}
\family default
 Useful for debugging: show the current chain of macro invocations.
\end_layout

\begin_layout Paragraph
Time Handling Macros
\end_layout

\begin_layout Itemize

\family typewriter
%time{}
\family default
 Return the current Lamport timestamp (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-Lamport-Clock"

\end_inset

), in units of seconds since the Unix epoch.
\end_layout

\begin_layout Itemize

\family typewriter
%sleep{
\emph on
seconds
\emph default
}
\family default
 Pause the given number of seconds.
\end_layout

\begin_layout Itemize

\family typewriter
%timeout{
\emph on
seconds
\emph default
}
\family default
 Like 
\family typewriter
%sleep{
\emph on
seconds
\emph default
}
\family default
, but abort the 
\family typewriter
marsadm
\family default
 command after the total waiting time has exceeded the timeout given by
 the 
\family typewriter
--timeout=
\family default
 parameter.
\end_layout

\begin_layout Paragraph
Misc Macros
\end_layout

\begin_layout Itemize

\family typewriter
%warn{
\emph on
text
\emph default
}
\family default
 Show a WARNING:
\end_layout

\begin_layout Itemize

\family typewriter
%die{
\emph on
text
\emph default
}
\family default
 Abort execution with an error message.
\end_layout

\begin_layout Paragraph
Experts Only - Risky
\end_layout

\begin_layout Standard
The following macros are unstable and may change at any time without notice.
\end_layout

\begin_layout Itemize

\family typewriter
%get-msg{
\emph on
name
\emph default
}
\family default
 Low-level access to system messages.
 You should not use this, since this is not extensible (you must know the
 name in advance).
\end_layout

\begin_layout Itemize

\family typewriter
%readlink{
\emph on
path
\emph default
}
\family default
 Low-level access to symlinks.
 Don't misuse this for circumvention of the abstraction macros from the
 symlink tree!
\end_layout

\begin_layout Itemize

\family typewriter
%setlink{
\emph on
value
\emph default
}{
\emph on
path
\emph default
}
\family default
 Low-level creation of symlinks.
 Don't misuse this for circumvention of the abstraction macros for the symlink
 tree!
\end_layout

\begin_layout Itemize

\family typewriter
%fetch-info{} 
\family default
etc.
 Low-level access to internal symlink formats.
 Don't use this in scripts! Only for curious humans.
\end_layout

\begin_layout Itemize

\family typewriter
%fetch-lognr{} 
\family default
etc.
 Get logfile numbers.
 Only for curious humans - don't use in scripts, don't base any decisions
 on this.
 
\end_layout

\begin_layout Itemize

\family typewriter
%is-almost-consistent{}
\family default
 Whatever you guess what this could mean, don't use it, at least never in
 place of 
\family typewriter
%is-consistent{}
\family default
 - it is risky to base decisions on this.
 
\end_layout

\begin_layout Itemize

\family typewriter
%does{
\emph on
name
\emph default
} 
\family default
Equivalent to 
\family typewriter
%is-
\emph on
name
\emph default
{}
\family default
 (just more handy for computing the macro name).
 Use with care!
\end_layout

\begin_layout Paragraph
Predefined Variables
\begin_inset CommandInset label
LatexCommand label
name "par:Predefined-Variables"

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
%{cmd} 
\family default
The command argument of the invoked 
\family typewriter
marsadm
\family default
 command.
\end_layout

\begin_layout Itemize

\family typewriter
%{res} 
\family default
The resource name given to the 
\family typewriter
marsadm
\family default
 command as a command line parameter (or, possibly expanded from 
\family typewriter
all
\family default
).
\end_layout

\begin_layout Itemize

\family typewriter
%{resdir} 
\family default
The corresponding resource directory.
 The current version of MARS uses 
\family typewriter
/mars/resource-%{res}/
\family default
, but this may change in future.
 Normally, you should not need this, since anything should be already abstracted
 for you.
 In case you 
\emph on
really
\emph default
 need low-level access to something, please prefer this variable over 
\family typewriter
%{mars}/resource-%{res}
\family default
 because it is a bit more abstracted.
\end_layout

\begin_layout Itemize

\family typewriter
%{mars} 
\family default
Currently the fixed string 
\family typewriter
/mars
\family default
.
 This may change in future, probably with the advent of MARS Full.
\end_layout

\begin_layout Itemize

\family typewriter
%{host} 
\family default
The hostname of the local node.
\end_layout

\begin_layout Itemize

\family typewriter
%{ip} 
\family default
The IP address of the local node.
\end_layout

\begin_layout Itemize

\family typewriter
%{timeout} 
\family default
The value given by the 
\family typewriter
--timeout=
\family default
 option, or the corresonding default value.
\end_layout

\begin_layout Itemize

\family typewriter
%{threshold} 
\family default
The value given by the 
\family typewriter
--threshold=
\family default
 option, or the corresonding default value.
\end_layout

\begin_layout Itemize

\family typewriter
%{window} 
\family default
The value given by the 
\family typewriter
--window=
\family default
 option, or the corresonding default value.
\end_layout

\begin_layout Itemize

\family typewriter
%{force} 
\family default
The number of times the 
\family typewriter
--force
\family default
 option has been given.
\end_layout

\begin_layout Itemize

\family typewriter
%{dry-run} 
\family default
The number of times the 
\family typewriter
--dry-run
\family default
 option has been given.
\end_layout

\begin_layout Itemize

\family typewriter
%{verbose} 
\family default
The number of times the 
\family typewriter
--verbose
\family default
 option has been given.
\end_layout

\begin_layout Itemize

\family typewriter
%{callstack} 
\family default
Same as the 
\family typewriter
%callstack{}
\family default
 macro.
 The latter gives you an opportunity for overriding, while the former is
 firmly built in.
\end_layout

\begin_layout Chapter
Basic Working Principle
\end_layout

\begin_layout Standard
Even if you are impatient, please read this chapter.
 At the 
\emph on
surface
\emph default
, MARS appears to be very similar to DRBD.
 It looks like almost being a drop-in replacement for DRBD.
\end_layout

\begin_layout Standard
When taking this naïvely, you could easily step into some trivial pitfalls,
 because the internal working principle of MARS is totally different from
 DRBD.
 Please forget (almost) anything you already know about the internal working
 principles of DRBD, and look at the very different working principles of
 MARS.
\end_layout

\begin_layout Section
The Transaction Logger
\begin_inset CommandInset label
LatexCommand label
name "sec:The-Transaction-Logger"

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename images/MARS_Data_Flow.pdf
	lyxscale 60
	width 100text%

\end_inset


\end_layout

\begin_layout Standard
\noindent
The basic idea of MARS is to record all changes made to your block device
 in a so-called 
\series bold
transaction logfile
\series default
.
 
\emph on
Any
\emph default
 write reqeuest is treated like a transaction which changes the contents
 of your block device.
\end_layout

\begin_layout Standard
This is similar in concept to some database systems, but there exists no
 separate 
\begin_inset Quotes eld
\end_inset

commit
\begin_inset Quotes erd
\end_inset

 operation: 
\emph on
any
\emph default
 write request is acting like a commit.
\end_layout

\begin_layout Standard
The picture shows the flow of write requests.
 Let's start with the primary node.
\end_layout

\begin_layout Standard
Upon submission of a write request on 
\family typewriter
/dev/mars/mydata
\family default
, it is first buffered in a 
\emph on
temporary
\emph default
 memory buffer.
\end_layout

\begin_layout Standard
The temporary memory buffer serves multiple purposes:
\end_layout

\begin_layout Itemize
It keeps track of the order of write operations.
\end_layout

\begin_layout Itemize
Additionally, it keeps track of the positions in the underlying disk 
\family typewriter
/dev/lv-x/mydata
\family default
.
 In particular, it detects when the same block is overwritten multiple times.
\end_layout

\begin_layout Itemize
During pending write operation, any concurrent reads are served from the
 memory buffer.
\end_layout

\begin_layout Standard
After the write has been buffered in the temporary memory buffer, the main
 logger thread of the transaction logger creates a so-called 
\emph on
log entry
\emph default
 and starts an 
\begin_inset Quotes eld
\end_inset

append
\begin_inset Quotes erd
\end_inset

 operation on the transaction logfile.
 The log entry contains vital information such as the logical block number
 in the underlying disk, the length of the data, a timestamp, some header
 magic in order to detect corruption, the log entry sequence number, of
 course the data itself, and optional information like a checksum or compression
 information.
\end_layout

\begin_layout Standard
Once the log entry has been written through to the 
\family typewriter
/mars/
\family default
 filesystem via fsync(), the application waiting for the write operation
 at 
\family typewriter
/dev/mars/mydata
\family default
 is signalled that the write was successful.
\end_layout

\begin_layout Standard
This may happen even 
\emph on
before
\emph default
 the writeback to the underlying disk 
\family typewriter
/dev/lv-x/mydata
\family default
 has started.
 Even when you power off the system right now, the information is not lost:
 it is present in the logfile, and can be reconstructed from there.
\end_layout

\begin_layout Standard
Notice that the order of log records present in the transaction log defines
 a total order among the write requests which is 
\emph on
compatible
\emph default
 to the partial order of write requests issued on 
\family typewriter
/dev/mars/mydata
\family default
.
\end_layout

\begin_layout Standard
Also notice that despite its sequential nature, the transaction logfile
 is typically 
\emph on
not
\emph default
 the performance bottleneck of the system: since appending to a logfile
 is almost purely sequential IO, it runs much faster than random IO on typical
 datacenter workloads.
\end_layout

\begin_layout Standard
In order to reclaim the temporary memory buffer, its content must be written
 back to the underlying disk 
\family typewriter
/dev/lv-x/mydat
\family default
a somewhen.
 After writeback, the temporary space is freed.
 The writeback can do the following optimizations:
\end_layout

\begin_layout Enumerate
writeback may be in 
\emph on
any
\emph default
 order; in particular, it may be 
\emph on
sorted
\emph default
 according to ascending sector ´numbers.
 This will reduce the average seek distances of magnetic disks in general.
\end_layout

\begin_layout Enumerate
when the same sector is overwritten multiple times, only the 
\begin_inset Quotes eld
\end_inset

last
\begin_inset Quotes erd
\end_inset

 version need to be written back, skipping some intermediate versions.
\end_layout

\begin_layout Standard
In case the primary node crashes during writeback, it suffices to replay
 the log entries from some point in the past until the end of the transaction
 logfile.
 It does no harm if you accidentally replay some log entries twice or even
 more often: since the replay is in the original total order, any temporary
 inconsistency is 
\emph on
healed
\emph default
 by the logfile application.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

In mathematics, the property that you can apply your logfile twice to your
 data (or even as often as you want), is called 
\series bold
idempotence
\series default
.
 This is a very desirable property: it ensures that nothing goes wrong when
 replaying 
\begin_inset Quotes eld
\end_inset

too much
\begin_inset Quotes erd
\end_inset

 / starting your replay 
\begin_inset Quotes eld
\end_inset

too early
\begin_inset Quotes erd
\end_inset

.
 Idempotence is even more beneficial: in case anything should go wrong with
 your data on your disk (e.g.
 IO errors), replaying your logfile once more often may
\begin_inset Foot
status open

\begin_layout Plain Layout
Miracles cannot be guaranteed, but 
\emph on
higher chances
\emph default
 and 
\emph on
improvements
\emph default
 can be expected (e.g.
 better chances for 
\family typewriter
fsck
\family default
).
\end_layout

\end_inset

 even 
\series bold
heal
\series default
 some defects.
 Good news for desperate sysadmins forced to work with flaky hardware!
\end_layout

\begin_layout Standard
The basic idea of the asynchronous replication of MARS is rather simple:
 just transfer the logfiles to your secondary nodes, and replay them onto
 their copy of the disk data (also called 
\emph on
mirror
\emph default
) in the same order as the total order defined by the primary.
\end_layout

\begin_layout Standard
Therefore, a mirror of your data on any secondary may be outdated, but it
 always corresponds to some version which was valid in the past.
 This property is called 
\series bold
anytime consistency
\begin_inset Foot
status open

\begin_layout Plain Layout
Your secondary nodes are always consistent in themselves.
 Notice that this kind of consistency is a 
\emph on
local
\emph default
 consistency model.
 There exists no global consistency in MARS.
 Global consistency would be practically impossible in long-distance replication
 where Einstein's law of the speed of light is limiting global consistency.
 The front-cover pictures showing the planets Earth and Mars tries to lead
 your imagination away from global consistency models as used in 
\begin_inset Quotes eld
\end_inset

DRBD Think(tm)
\begin_inset Quotes erd
\end_inset

, and try to prepare you mentally for local consistency as in 
\begin_inset Quotes eld
\end_inset

MARS Think(tm)
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

As you can see in the picture, the process of transfering the logfiles is
 
\emph on
independent
\emph default
 from the process which replays the logfiles onto the data at some secondary
 site.
 Both processes can be switched on / off separately (see commands 
\family typewriter
marsadm {dis,}connect
\family default
 and 
\family typewriter
marsadm {pause,resume}-replay
\family default
 in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Operation-of-the"

\end_inset

).
 This may be 
\emph on
exploited
\emph default
: for example, you may replicate your logfiles as soon as possible (to protect
 against catastrophic failures), but deliberately wait one hour until it
 is replayed (under regular circumstances).
 If your data inside your filesystem 
\family typewriter
/mydata/
\family default
 at the primary site is accidentally destroyed by 
\family typewriter
rm -rf /mydata/
\family default
, you have an old copy at the secondary site.
 This way, you can substitute 
\emph on
some parts
\begin_inset Foot
status open

\begin_layout Plain Layout
Please note that MARS cannot 
\emph on
fully
\emph default
 substitute a backup system, because it can keep only 
\emph on
physical
\emph default
 copies, and does not create logical copies.
\end_layout

\end_inset


\emph default
 of conventional backup functionality by MARS.
 In case you need the actual version, just replay in 
\begin_inset Quotes eld
\end_inset

fast-forward
\begin_inset Quotes erd
\end_inset

 mode (similar to old-fashioned video tapes).
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

Future versions of MARS Full are planned to also allow 
\begin_inset Quotes eld
\end_inset

fast-backward
\begin_inset Quotes erd
\end_inset

 rewinding, of course at some cost.
\end_layout

\begin_layout Section
The Lamport Clock
\begin_inset CommandInset label
LatexCommand label
name "sec:The-Lamport-Clock"

\end_inset


\end_layout

\begin_layout Standard
MARS is always 
\emph on
asynchonously
\emph default
 communicating in the distributed system on 
\emph on
any
\emph default
 topics, even strategic decisions.
\end_layout

\begin_layout Standard
If there were a 
\emph on
strict
\emph default
 global consistency model, which is roughly equivalent to a standalone model,
 we would need 
\emph on
locking
\emph default
 in order to serialize conflicting requests.
 It is known for many decades that 
\emph on
distributed locks
\emph default
 do not only suffer from performance problems, but they are also cumbersome
 to get them working reliably in scenarios where nodes or network links
 may fail at any time.
\end_layout

\begin_layout Standard
Therefore, MARS uses a very different consistency model: 
\series bold
Eventually Consistent
\series default
.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 The asynchronous communication protocol of MARS leads to a different behaviour
 from DRBD in case of 
\series bold
network partitions
\series default
 (temporary interruption of communication between some cluster nodes), because
 MARS 
\emph on
remembers
\emph default
 the old state of remote nodes over long periods of time, while DRBD knows
 absolutely nothing about its peers in disconnected state.
 Sysadmins familiar with DRBD might find the following behaviour unusual:
\end_layout

\begin_layout Standard
\noindent
\align center

\size tiny
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
Event
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
DRBD Behaviour
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
MARS Behaviour
\end_layout

\end_inset
</cell>
</row>
<row endhead="true">
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1.
 the network partitions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
automatic disconnect
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
nothing happens, but replication lags behind
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
2.
 on A: 
\family typewriter
umount $device
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
works
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
works
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
3.
 on A: 
\family typewriter
{drbd,mars}adm secondary
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
works
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
works
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
4.
 on B: 
\family typewriter
{drbd,mars}adm primary
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
works, split brain happens
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size tiny
refused
\series default
 because B believes that A is primary
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
5.
 the network resumes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
automatic connect attempt fails
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
communication automatically resumes
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
If you intentionally want to switch over (and to produce a split brain as
 a side effect), the following variant must be used with MARS:
\end_layout

\begin_layout Standard
\noindent
\align center

\size tiny
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
Event
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
DRBD Behaviour
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
MARS Behaviour
\end_layout

\end_inset
</cell>
</row>
<row endhead="true">
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1.
 the network partitions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
automatic disconnect
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
nothing happens, but replication lags behind
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
2.
 on A: 
\family typewriter
umount $device
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
works
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
works
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
3.
 on A: 
\family typewriter
{drbd,mars}adm secondary
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
works
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
works
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
4.
 on B: 
\family typewriter
{drbd,mars}adm primary
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
split brain, but nobody knows
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size tiny
refused
\series default
 because B believes that A is primary
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
5.
 on B: 
\family typewriter
marsadm disconnect
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
works, nothing happens
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
6.
 on B: 
\family typewriter
marsadm primary --force
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
-
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
works, split brain happens on B, but A doesn't know
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
7.
 on B: 
\family typewriter
marsadm connect
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
works, nothing happens
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
8.
 the network resumes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
automatic connect attempt fails
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
communication resumes, A now detects the split brain
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
In order to implement the consistency model 
\begin_inset Quotes eld
\end_inset

eventually consistent
\begin_inset Quotes erd
\end_inset

, MARS uses a so-called Lamport
\begin_inset Foot
status open

\begin_layout Plain Layout
Published in the late 1970s by Leslie Lamport, also known as inventor of
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
LaTeX
\end_layout

\end_inset

.
\end_layout

\end_inset

 clock.
 MARS uses a special variant called 
\begin_inset Quotes eld
\end_inset

physical Lamport clock
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
The physical Lamport clock is another almost-realtime clock which 
\emph on
can
\emph default
 run independently from the Linux kernel system clock.
 However, the Lamport clock tries to remain as near as possible to the system
 clock.
\end_layout

\begin_layout Standard
Both clocks can be queried at any time via 
\family typewriter
cat /proc/sys/mars/lamport_clock
\family default
.
 The result will show both clocks in parallel, in units of seconds since
 the Unix epoch, with nanosecond resolution.
\end_layout

\begin_layout Standard
When there are no network messages at all, both the system clock and the
 Lamport clock will show almost the same time (except some minor differences
 of a few nanoseconds resulting from the finite processor clock speed).
\end_layout

\begin_layout Standard
The physical Lamport clock works rather simple: 
\emph on
any
\emph default
 message on the network is augmented with a Lamport time stamp telling when
 the message was 
\emph on
sent
\emph default
 according to the local Lamport clock of the sender.
 Whenever that message is received by some receiver, it checks whether the
 time ordering relation would be violated: whenever the Lamport timestamp
 in the message would claim that the sender had sent it 
\emph on
after
\emph default
 it arrived at the receiver (according to drifts in their respective local
 clocks), something must be wrong.
 In this case, the local Lamport clock of the 
\emph on
receiver
\emph default
 is advanced shortly after the sender Lamport timestamp, such that the time
 ordering relation is no longer violated.
\end_layout

\begin_layout Standard
As a consequence, any local Lamport clock may precede the corresponding
 local system clock.
 In order to avoid accumulation of deltas between the Lamport and the system
 clock, the Lamport clock will run slower after that, possibly until it
 reaches the system clock again (if no other message arrives which sets
 it forward again).
 After having reached the system clock, the Lamport clock will continue
 with 
\begin_inset Quotes eld
\end_inset

normal
\begin_inset Quotes erd
\end_inset

 speed.
\end_layout

\begin_layout Standard
MARS uses the local Lamport clock for anything where other systems would
 use the local system clock: for example, timestamp generation in the 
\family typewriter
/mars/
\family default
 filesystem.
 Even symlinks created there are timestamped according to the Lamport clock.
 Both the kernel module and the userspace tool 
\family typewriter
marsadm
\family default
 are always operating in the timescale of the Lamport clock.
 Most importantly, all timestamp comparisons are always carried out with
 respect to Lamport time.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

 Bigger differences between the Lamport and the system clock can be annoying
 from a human point of view: when typing 
\family typewriter
ls -l /mars/resource-mydata/
\family default
 many timestamps may appear as if they were created in the 
\begin_inset Quotes eld
\end_inset

future
\begin_inset Quotes erd
\end_inset

, because the 
\family typewriter
ls
\family default
 command compares the output formatting against the system clock (it does
 not even know of the existence of the MARS Lamport clock).
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset

 Always use 
\family typewriter
ntp
\family default
 (or another clock synchronization service) in order to pre-synchronize
 your system clocks as close as possible.
 Bigger differences are not only annoying, but may lead some people to wrong
 conclusions and therefore even lead to bad human decisions!
\end_layout

\begin_layout Standard
In a professional datacenter, you should use 
\family typewriter
ntp
\family default
 anyway, and you should monitor its effectiveness anyway.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

Hint: many internal logfiles produced by the MARS kernel module contain
 Lamport timestamps written as numerical values.
 In order to convert them into human-readable form, use the command 
\family typewriter
marsadm cat /mars/5.total.status
\family default
 or similar.
\end_layout

\begin_layout Section
The Symlink Tree
\begin_inset CommandInset label
LatexCommand label
name "sec:The-Symlink-Tree"

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
/mars/
\family default
 filesystem contains not only transaction logfiles, but also acts as a generic
 storage for (persistent) state information.
 Both configuration information and runtime state information are stored
 in symlinks.
 Symlinks are 
\begin_inset Quotes eld
\end_inset

misused
\begin_inset Foot
status open

\begin_layout Plain Layout
This means, the symlink targets need not be other files or directories,
 but just any values like integers or strings.
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 in order to represent some 
\family typewriter
key -> value
\family default
 pairs.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

Therefrom results a fundamentally different behaviour than DRBD.
 When your DRBD primary crashed before and now comes up again, you have
 to setup DRBD again by a sequence of commands like 
\family typewriter
modprobe drbd; drbdadm up all; drbdadm primary all
\family default
 or similar.
 In contrast, MARS needs only 
\family typewriter
modprobe mars
\family default
 (after 
\family typewriter
/mars/
\family default
 has been mounted by 
\family typewriter
/etc/fstab
\family default
).
 The 
\emph on
persistence
\emph default
 of the symlinks residing in 
\family typewriter
/mars/
\family default
 will automatically remember your previous state, even if some your resources
 were primary while others were secondary (mixed operations).
 You don't need to do any actions in order to 
\begin_inset Quotes eld
\end_inset

restore
\begin_inset Quotes erd
\end_inset

 a previous state, no matter how 
\begin_inset Quotes eld
\end_inset

complex
\begin_inset Quotes erd
\end_inset

 it was.
\end_layout

\begin_layout Standard
(Almost) all symlinks appearing in the 
\family typewriter
/mars/
\family default
 directory tree are automatically replicated thoughout the whole cluster.
 Thus the 
\family typewriter
/mars/
\family default
 directory forms some kind of 
\emph on
global namespace
\emph default
.
\end_layout

\begin_layout Standard
Since the symlink replication works generically, you may use the 
\family typewriter
/mars/userspace/
\family default
 directory in order to place your own symlink there (for whatever purpose,
 which need not have to do with MARS).
\end_layout

\begin_layout Standard
In order to avoid name clashes, each symlink created at node A should have
 the name A in its path name.
 Typically, internal MARS names follow the scheme 
\family typewriter
/mars/
\emph on
something
\emph default
/myname-A
\family default
, and you should follow the best practice of systematically using 
\family typewriter
/mars/userspace/myname-A
\family default
 or similar.
 As a result, each node will automatically get informed about the state
 at any other node, like B when the corresponding information is recorded
 on node B under the name 
\family typewriter
/mars/userspace/myname-B
\family default
 (context-dependent names).
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

Important: the convention of placing the 
\series bold
creator host name
\series default
 inside your symlink names should be used wherever possible.
 The name part is a kind of 
\begin_inset Quotes eld
\end_inset

ownership indicator
\begin_inset Quotes erd
\end_inset

.
 It is crucial that no other host writes any symlink not 
\begin_inset Quotes eld
\end_inset

belonging
\begin_inset Quotes erd
\end_inset

 to him.
 Other hosts may read foreign symlinks as often as they want, but never
 modify them.
 This way, your cluster nodes are able to 
\emph on
communicate
\emph default
 with each other via symlink updates.
\end_layout

\begin_layout Standard
Although you may create (and change) your symlinks with userspace tools
 like 
\family typewriter
ln -s
\family default
, you should use the following marsadm commands instead:
\end_layout

\begin_layout Itemize

\family typewriter
marsadm set-link myvalue /mars/userspace/mykey-A
\end_layout

\begin_layout Itemize

\family typewriter
marsadm delete-file /mars/userspace/mykey-A
\end_layout

\begin_layout Standard
There are two reasons for this: first, the 
\family typewriter
marsadm set-link
\family default
 command will automatically use the Lamport clock for symlink creation,
 and therefore will avoid any errors resulting from a 
\begin_inset Quotes eld
\end_inset

wrong
\begin_inset Quotes erd
\end_inset

 system clock (as in 
\family typewriter
ln -s
\family default
).
 Second, the 
\family typewriter
marsadm delete-file
\family default
 (which also deletes symlinks) works on the 
\emph on
whole cluster
\emph default
.
\end_layout

\begin_layout Standard
What's the difference? If you try to remove your symlink locally by hand
 via 
\family typewriter
rm -f
\family default
, you will be surprised: since the symlink has been replicated to other
 cluster nodes, it will be re-transferred from there and will be resurrected
 locally after some short time.
 This way, you cannot delete any object reliably, because your whole cluster
 (which may consist of many nodes) remembers all your state information
 and will resurrect it whenever 
\begin_inset Quotes eld
\end_inset

necessary
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
In order to solve the deletion problem, MARS Light uses some internal deletion
 protocol using auxiliary symlinks residing in 
\family typewriter
/mars/todo-global/.

\family default
 The deletion protocol ensures that all replicas get deleted in the whole
 cluster, and only after that the auxiliary symlinks in 
\family typewriter
/mars/todo-global/
\family default
 are also deleted eventually.
\end_layout

\begin_layout Standard
You may change your already existing symlink via 
\family typewriter
marsadm set-link some-other-value /mars/userspace/mykey-A
\family default
 .
 The new value will be propagated in the cluster according to a 
\series bold
timestamp comparison protocol
\series default
: whenever node B notices that A has a 
\emph on
newer
\emph default
 version of some symlink (according to the Lamport timestamp), it will replace
 its elder version by the newer one.
 The opposite does 
\emph on
not
\emph default
 work: if B notices that A has an elder version, just nothing happens.
 This way, the timestamps of symlinks can only progress in forward direction,
 but never backwards in time.
\end_layout

\begin_layout Standard
As a consequence, symlink updates made 
\begin_inset Quotes eld
\end_inset

by hand
\begin_inset Quotes erd
\end_inset

 via 
\family typewriter
ln -s
\family default
 may get lost when the local system clock is much more earlier than the
 Lamport clock.
\end_layout

\begin_layout Standard
When your cluster is fully connected by the network, the last timestamp
 will finally win everywhere.
 Only in case of network outages leading to 
\emph on
network partitions
\emph default
, some information may be 
\emph on
temporarily inconsistent
\emph default
, but only for the duration of the network outage.
 The timestamp comparison protocol in combination with the Lamport clock
 and with the persistence of the 
\family typewriter
/mars/
\family default
 filesystem will automatically heal any temporary inconsistencies as soon
 as possible, even in case of temporary node shutdown.
\end_layout

\begin_layout Standard
The meaning of the internal MARS Light symlinks residing in 
\family typewriter
/mars/
\family default
 is documented in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Documentation-of-the"

\end_inset

.
\end_layout

\begin_layout Section
Defending Overflow of 
\family typewriter
/mars/
\begin_inset CommandInset label
LatexCommand label
name "sec:Defending-Overflow"

\end_inset


\end_layout

\begin_layout Standard
This section describes an important difference to DRBD.
 The metadata of DRBD is allocated 
\emph on
statically
\emph default
 at 
\emph on
creation
\emph default
 
\emph on
time
\emph default
 of the resource.
 In contrast, the MARS transaction logfiles are allocated 
\emph on
dynamically
\emph default
 at 
\emph on
runtime
\emph default
.
\end_layout

\begin_layout Standard
This leads to a potential risk from the perspective of a sysadmin: what
 happens if the 
\family typewriter
/mars/
\family default
 filesystem runs out of space?
\end_layout

\begin_layout Standard
No risk, no fun.
 If you want a system which survives long-lasting network outages while
 keeping your replicas always consistent (anytime consistency), you 
\emph on
need
\emph default
 dynamic memory for that.
 It is 
\emph on
impossible
\emph default
 to solve that problem using static memory
\begin_inset Foot
status open

\begin_layout Plain Layout
The bitmaps used by DRBD don't preserve the 
\emph on
order
\emph default
 of write operations.
 They cannot do that, because their space is 
\begin_inset Formula $O(k)$
\end_inset

 for some constant 
\begin_inset Formula $k$
\end_inset

.
 In contrast, MARS preserves the order.
 Preserving the order as such (even when only 
\emph on
facts
\emph default
 about the order were recorded without recording the actual data contents)
 requires 
\begin_inset Formula $O(n)$
\end_inset

 space where 
\begin_inset Formula $n$
\end_inset

 is infinitely growing over time.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Therefore, DRBD and MARS have different application areas.
 If you just want a simple system for mirroring your data over short distances
 like a crossover cable, DRBD will be a suitable choice.
 However, if you need to replicate over longer distances, or if you need
 higher levels of reliability even when multiple failures may accumulate
 (such as network loss during a 
\emph on
re
\emph default
sync of DRBD), the transaction logs of MARS can solve that, but at some
 
\emph on
cost
\emph default
.
\end_layout

\begin_layout Subsection
Countermeasures
\end_layout

\begin_layout Subsubsection
Dimensioning of 
\family typewriter
/mars/
\begin_inset CommandInset label
LatexCommand label
name "sub:Dimensioning-of-/mars/"

\end_inset


\end_layout

\begin_layout Standard
The first (and most important) measure against overflow of 
\family typewriter
/mars/
\family default
 is simply to dimension it large enough to survive longer-lasting problems,
 at least one weekend.
\end_layout

\begin_layout Standard
Recommended size is at least one dedicated disk, residing at a hardware
 RAID controller with BBU (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Preparation:-What-you"

\end_inset

).
 During normal operation, that size is needed only for a small fraction,
 typically a few percent or even less than one percent.
 However, it is your 
\series bold
safety margin
\series default
.
 Keep it high enough!
\end_layout

\begin_layout Subsubsection
Monitoring
\end_layout

\begin_layout Standard
The next (equally important) measure is 
\series bold
monitoring in userspace
\series default
.
\end_layout

\begin_layout Standard
Following is a list of countermeasures both in userspace and in kernelspace,
 in the order of 
\begin_inset Quotes eld
\end_inset

defensive walling
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_layout Enumerate
Regular userspace monitoring must throw an INFO if a certain freespace limit
 
\begin_inset Formula $l_{1}$
\end_inset

 of 
\family typewriter
/mars/
\family default
 is undershot.
 Typical values for 
\begin_inset Formula $l_{1}$
\end_inset

 are 30%.
 Typical actions are automated calls of 
\family typewriter
marsadm log-rotate all
\family default
 followed by 
\family typewriter
marsadm log-delete-all all
\family default
.
 You have to implement that yourself in sysadmin space.
\end_layout

\begin_layout Enumerate
Regular userspace monitoring must throw a WARNING if a certain freespace
 limit 
\begin_inset Formula $l_{2}$
\end_inset

 of 
\family typewriter
/mars/
\family default
 is undershot.
 Typical values for 
\begin_inset Formula $l_{2}$
\end_inset

 are 20%.
 Typical actions are (in addition to 
\family typewriter
log-rotate
\family default
 and 
\family typewriter
log-delete-all
\family default
) alarming human supervisors via SMS and/or further stronger automated actions.
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

Frequently large space is occupied by files stemming from debugging output,
 or from other programs or processes.
 A hot candidate is 
\begin_inset Quotes eld
\end_inset

forgotten
\begin_inset Quotes erd
\end_inset

 removal of debugging output to 
\family typewriter
/mars/
\family default
.
 Sometimes, an 
\family typewriter
rm -rf $(find /mars/ -name 
\begin_inset Quotes eld
\end_inset

*.log
\begin_inset Quotes erd
\end_inset

)
\family default
 can work miracles.
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

Another source of space hogging is a 
\begin_inset Quotes eld
\end_inset

forgotten
\begin_inset Quotes erd
\end_inset

 
\family typewriter
pause-sync
\family default
 or 
\family typewriter
disconnect
\family default
.
 Therefore, a simple 
\family typewriter
marsadm connect-global all
\family default
 followed by 
\family typewriter
marsadm resume-replay-global all
\family default
 may also work miracles (if you didn't want to freeze some mirror deliberately).
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

If you just wanted to freeze a mirror at an outdated state for a very long
 time, you simply 
\emph on
cannot
\emph default
 do that without causing infinite growth of space consumption in 
\family typewriter
/mars/
\family default
.
 Therefore, a 
\family typewriter
marsadm leave-resource $res
\family default
 at 
\emph on
exactly that(!)
\emph default
 secondary site where the mirror is frozen, can also work miracles.
 If you want to automate this in unserspace, be careful.
 It is easy to get unintended effects when choosing the wrong site for 
\family typewriter
leave-resource
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

Hint: you can / should start some of these measures even earlier at the
 INFO level (see item 1), or even earlier.
\end_layout

\begin_layout Enumerate
Regular userspace monitoring must throw an ERROR if a certain freespace
 limit 
\begin_inset Formula $l_{3}$
\end_inset

 of 
\family typewriter
/mars/
\family default
 is undershot.
 Typical values for 
\begin_inset Formula $l_{3}$
\end_inset

 are 10%.
 Typical actions are alarming the CEO via SMS and/or even stronger automated
 actions.
 For example, you may choose to automatically call 
\family typewriter
marsadm leave-resource $res
\family default
 on some or all secondary nodes, such that the primary will be left alone
 and now has a chance to really delete its logfiles because no one else
 is any longer potentially needing it.
\end_layout

\begin_layout Enumerate
First-level kernelspace action, automatically executed when 
\family typewriter

\begin_inset Flex URL
status open

\begin_layout Plain Layout

/proc/sys/mars/required_free_space_4_gb
\end_layout

\end_inset


\family default
 + 
\family typewriter

\begin_inset Flex URL
status open

\begin_layout Plain Layout

/proc/sys/mars/required_free_space_3_gb
\end_layout

\end_inset


\family default
 + 
\family typewriter

\begin_inset Flex URL
status open

\begin_layout Plain Layout

/proc/sys/mars/required_free_space_2_gb
\end_layout

\end_inset


\family default
 + 
\family typewriter

\begin_inset Flex URL
status open

\begin_layout Plain Layout

/proc/sys/mars/required_free_space_1_gb
\end_layout

\end_inset


\family default
 is undershot:
\begin_inset Newline newline
\end_inset

all locally secondary resources will stop fetching transaction logfiles.
 As a side effect, other nodes in the cluster may become unable to delete
 their logfiles also.
 This is a desperate action of the kernel module.
\end_layout

\begin_layout Enumerate
Second-level kernelspace action, automatically executed when 
\family typewriter

\begin_inset Flex URL
status open

\begin_layout Plain Layout

/proc/sys/mars/required_free_space_3_gb
\end_layout

\end_inset


\family default
 + 
\family typewriter

\begin_inset Flex URL
status open

\begin_layout Plain Layout

/proc/sys/mars/required_free_space_2_gb
\end_layout

\end_inset


\family default
 + 
\family typewriter

\begin_inset Flex URL
status open

\begin_layout Plain Layout

/proc/sys/mars/required_free_space_1_gb
\end_layout

\end_inset


\family default
 is undershot:
\begin_inset Newline newline
\end_inset

all locally secondary resources will start removing any logfiles which are
 no longer used locally.
 This is a more desperate action of the kernel module.
\end_layout

\begin_layout Enumerate
Third-level kernelspace action, automatically executed when 
\family typewriter

\begin_inset Flex URL
status open

\begin_layout Plain Layout

/proc/sys/mars/required_free_space_2_gb
\end_layout

\end_inset


\family default
 + 
\family typewriter

\begin_inset Flex URL
status open

\begin_layout Plain Layout

/proc/sys/mars/required_free_space_1_gb
\end_layout

\end_inset


\family default
 is undershot:
\begin_inset Newline newline
\end_inset

all locally primary resources are checked for logfiles which are no longer
 needed 
\emph on
locally
\emph default
.
 Locally unneeded files are deleted even when some secondary needs them.
 As a consequence, some secondaries may get stuck (left in consistent, but
 outdated state).
 In order to get them actual again, they will need a 
\family typewriter
marsadm invalidate
\family default
 later.
 This is an even more desperate action of the kernel module.
 You don't want to get there (except for testing).
\end_layout

\begin_layout Enumerate
Last desperate kernelspace action when all other has failed and 
\family typewriter

\begin_inset Flex URL
status open

\begin_layout Plain Layout

/proc/sys/mars/required_free_space_1_gb
\end_layout

\end_inset


\family default
 is undershot:
\begin_inset Newline newline
\end_inset

all locally primary resources will enter 
\series bold
emergency mode
\series default
 (see description below in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Emergency-Mode"

\end_inset

).
 This is the most desperate action of the kernel module.
 You don't want to get there (except for testing).
\end_layout

\begin_layout Standard
In addition, the kernel module obeys a general global limit 
\family typewriter

\begin_inset Flex URL
status open

\begin_layout Plain Layout

/proc/sys/mars/required_total_space_0_gb
\end_layout

\end_inset

 +
\family default
 the sum of all of the above limits.
 When the 
\emph on
total size
\emph default
 of 
\family typewriter
/mars/
\family default
 undershots that sum, the kernel module refuses to start at all, because
 it assumes that it is senseless to try to operate MARS on a system with
 such low memory resources.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

The current level of emergency kernel actions may be viewed at any time
 via 
\family typewriter

\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

/proc/sys/mars/mars_emergency_mode
\end_layout

\end_inset


\family default
.
\end_layout

\begin_layout Subsubsection
Throttling
\end_layout

\begin_layout Standard
The last measure for defense of overflow is 
\series bold
throttling your performance pigs
\series default
.
\end_layout

\begin_layout Standard
Motivation: in rare cases, some users with 
\family typewriter
ssh
\family default
 access can do 
\emph on
very
\emph default
 silly things.
 For example, some of them are creating their own backups via user-cron
 jobs, and they do it every 5 minutes.
 Some example guy created a zip archive (almost 1GB) by regularly copying
 his old zip archive into a new one, then appending deltas to the new one,
 and finally deleting the old archive.
 Every 5 minutes.
 Yes, every 5 minutes, although almost never any new files were added to
 the archive.
 Essentially, he copied over his archive, for nothing.
 This led to massive bulk write requests, for ridiculous reasons.
\end_layout

\begin_layout Standard
In general, your hard disks (or even RAID systems) allow much higher write
 IO rates than you can ever transport over a standard TCP network from your
 primary site to your secondary, at least over longer distances (see use
 cases for MARS in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Use-Cases-for"

\end_inset

).
 Therefore, it is easy to create a such a high write load that it will be
 
\emph on
impossible
\emph default
 to replicate it over the network, 
\emph on
by construction
\emph default
.
\end_layout

\begin_layout Standard
Therefore, we 
\emph on
need
\emph default
 some mechanism for throttling bulk writers whenever the network is weaker
 than your IO subsystem.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

Notice that DRBD will 
\emph on
always
\emph default
 throttle your writes whenever the network forms a bottleneck, due to its
 synchronous operation mode.
 In contrast, MARS allows for buffering of performance peaks in the transaction
 logfiles.
 
\emph on
Only when
\emph default
 your buffer in 
\family typewriter
/mars/
\family default
 runs short (cf subsection 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Dimensioning-of-/mars/"

\end_inset

), MARS will start to throttle your application writes.
\end_layout

\begin_layout Standard
There are a lot of screws named 
\family typewriter
/proc/sys/mars/write_throttle_*
\family default
 with the following meaning:
\end_layout

\begin_layout Description

\family typewriter
write_throttle_start_percent
\family default
 Whenever the used space in 
\family typewriter
/mars/
\family default
 is below this threshold, no throttling will occur at all.
 Only when this threshold is exceeded, throttling will start 
\emph on
slowly
\emph default
.
 Typical values for this are 60%.
\end_layout

\begin_layout Description

\family typewriter
write_throttle_end_percent
\family default
 Maximum throttling will occur once this space threshold is reached, i.e.
 the throttling is now at its maximum effect.
 Typical values for this are 90%.
 When the actual space in 
\family typewriter
/mars/
\family default
 lies between 
\family typewriter
write_throttle_start_percent
\family default
 and 
\family typewriter
write_throttle_end_percent
\family default
, the strength of throttling will be interpolated linearly between the extremes.
 In practice, this should lead to an equilibrum between new input flow into
 
\family typewriter
/mars/
\family default
 and output flow over the network to secondaries.
\end_layout

\begin_layout Description

\family typewriter
write_throttle_size_threshold_kb
\family default
 (readonly) This parameter shows the internal strength calculation of the
 throttling.
 Only write
\begin_inset Foot
status open

\begin_layout Plain Layout
Read requests are never throttled at all.
\end_layout

\end_inset

 requests exceeding this size (in KB) are throttled at all.
 Typically, this will hurt the bulk performance pigs first, while leaving
 ordinary users (issuing small requests) unaffected.
\end_layout

\begin_layout Description

\family typewriter
write_throttle_ratelimit_kb
\family default
 Set the global IO rate in KB/s for those write requests which are throttled.
 In case of strongest
\begin_inset Foot
status open

\begin_layout Plain Layout
In case of lighter throttling, the input flow into 
\family typewriter
/mars/
\family default
 may be higher because small requests are not throttled.
\end_layout

\end_inset

 throttling, this parameters determines the input flow into 
\family typewriter
/mars/
\family default
.
 The default value is 5.000 KB/s.
 Please adjust this value to your application needs and to your environment.
\end_layout

\begin_layout Description

\family typewriter
write_throttle_rate_kb
\family default
 (readonly) Shows the current rate of exactly those requests which are actually
 throttled (in contrast to 
\emph on
all
\emph default
 requests).
\end_layout

\begin_layout Description

\family typewriter
write_throttle_cumul_kb
\family default
 (logically readonly) Same as before, but the cumulative sum of all throttled
 requests since startup / reset.
 This value can be reset from userspace in order to prevent integer overflow.
\end_layout

\begin_layout Description

\family typewriter
write_throttle_count_ops
\family default
 (logically readonly) Shows the cumulative number of throttled requests.
 This value can be reset from userspace in order to prevent integer overflow.
\end_layout

\begin_layout Description

\family typewriter
write_throttle_maxdelay_ms
\family default
 Each request is delayed at most for this timespan.
 Smaller values will improve the responsiveness of your userspace application,
 but at the cost of potentially retarding the requests not sufficiently.
\end_layout

\begin_layout Description

\family typewriter
write_throttle_minwindow_ms
\family default
 Set the minimum length of the measuring window.
 The measuring window is the timespan for which the average (throughput)
 rate is computed (see 
\family typewriter
write_throttle_rate_kb
\family default
).
 Lower values can increase the responsiveness of the controller algorithm,
 but at the cost of accuracy.
\end_layout

\begin_layout Description

\family typewriter
write_throttle_maxwindow_ms
\family default
 This parameter must be set sufficiently much greater than 
\family typewriter
write_throttle_minwindow_ms
\family default
.
 In case the flow of throttled operations pauses for some natural reason
 (e.g.
 switched off, low load, etc), this parameter determines when a completely
 new rate calculation should be started over
\begin_inset Foot
status open

\begin_layout Plain Layout
Motivation: if requests would pause for one hour, the measuring window could
 become also an hour.
 Of course, that would lead to completely meaningless results.
 Two requests in one hour is 
\begin_inset Quotes eld
\end_inset

incorrect
\begin_inset Quotes erd
\end_inset

 from a human point of view: we just have to ensure that averages are computed
 with respect to a reasonable maximum time window in the magnitude of 10s.
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Emergency Mode
\begin_inset CommandInset label
LatexCommand label
name "sub:Emergency-Mode"

\end_inset


\end_layout

\begin_layout Standard
When 
\family typewriter
/mars/
\family default
 is almost full and there is really absolutely no chance of getting rid
 of any local transaction logfile (or free some space in any other way),
 there is only one exit strategy: stop creating new logfile data.
\end_layout

\begin_layout Standard
This means that the ability for replication gets lost.
\end_layout

\begin_layout Standard
When entering emergency mode, the kernel module will execute the following
 steps for all resources where the affected host is acting as a primary:
\end_layout

\begin_layout Enumerate
Do a kind of 
\begin_inset Quotes eld
\end_inset

logrotate
\begin_inset Quotes erd
\end_inset

, but create a 
\emph on
hole
\emph default
 in the sequence of transaction logfile numbers.
 The 
\begin_inset Quotes eld
\end_inset

new
\begin_inset Quotes erd
\end_inset

 logfile is left empty, i.e.
 no data ist written to it (for now).
 The hole in the numbering will prevent any secondaries from replaying any
 logfiles behind the hole (should they ever contain some data, e.g.
 because the emergency mode has been left again).
 This works because the secondaries are regularly checking the logfile numbers
 for contiguity, and they will refuse to replay anything which is not contiguous.
 As a result, the secondaries will be left in a consistent, but outdated
 state.
\end_layout

\begin_layout Enumerate
The kernel module writes back all data present in the temporary memory buffer
 (see figure in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-Transaction-Logger"

\end_inset

).
 This may lead to a (short) delay of user write requests until that has
 finished (typically fractions of a second or a few seconds).
 The reason is that the temporary memory buffer must not be increased in
 parallel during this phase (race conditions).
\end_layout

\begin_layout Enumerate
After the temporary memory buffer is empty, all local IO requests (whether
 reads or writes) are directly going to the underlying disk.
 This has the same effect as if MARS was not present anymore.
\end_layout

\begin_layout Standard
In order to leave emergency mode, the sysadmin should do the following steps:
\end_layout

\begin_layout Enumerate
Free enough space.
 For example, delete any foreign files on 
\family typewriter
/mars/
\family default
 which have nothing to do with MARS, or resize the 
\family typewriter
/mars/
\family default
 filesystem, or whatever.
\end_layout

\begin_layout Enumerate
If 
\family typewriter

\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

/proc/sys/mars/mars_reset_emergency
\end_layout

\end_inset


\family default
 is not set, now it is time to set it.
 Normally, it should be already set.
 In consequence, the primary sides should continue transaction logging automatic
ally.
\end_layout

\begin_layout Enumerate
On the secondaries, use 
\family typewriter
marsadm invalidate $res
\family default
 in order to get your outdated mirrors uptodate.
 This will lead to temporarily inconsistent mirrors, so don't do this on
 all secondaries in parallel, but sequentially step by step.
 This way, if you have more than 1 mirror, you will always retain at least
 one consistent, but outdated copy.
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

If you had only 1 mirror per resource before the overflow happened, you
 can now create a new one via 
\family typewriter
marsadm join-resource $res
\family default
 on a third node (provided that your storage space permits that after the
 cleanup).
 After the initial full sync has finished there, do an 
\family typewriter
marsadm invalidate $res
\family default
 on the outdated mirror.
 This way, you will always retain at least one consistent mirror somewhere.
 After all is up-to-date, you can delete the superfluous mirror by 
\family typewriter
marsadm leave-resource $res
\family default
 and reclaim the disk space from its underlying disk.
\end_layout

\begin_layout Chapter
The Sysadmin Interface (
\family typewriter
marsadm
\family default
 and 
\family typewriter
/proc/sys/mars/
\family default
)
\family typewriter
 
\begin_inset CommandInset label
LatexCommand label
name "chap:The-Sysadmin-Interface"

\end_inset


\end_layout

\begin_layout Standard
In general, the term 
\begin_inset Quotes eld
\end_inset

after a while
\begin_inset Quotes erd
\end_inset

 means that other cluster nodes will take notice of your actions according
 to the 
\begin_inset Quotes eld
\end_inset

eventually consistent
\begin_inset Quotes erd
\end_inset

 propagation protocol described in sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-Lamport-Clock"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-Symlink-Tree"

\end_inset

.
 Please be aware that this 
\begin_inset Quotes eld
\end_inset

while
\begin_inset Quotes erd
\end_inset

 may last very long in case of network outages or bad firewall rules.
\end_layout

\begin_layout Standard
In the following tables, column 
\begin_inset Quotes eld
\end_inset

Cmp
\begin_inset Quotes erd
\end_inset

 means compatibility with DRBD.
 Please note that 100% exact compatibility is not possible, because of the
 asynchronous communication paradigm.
\end_layout

\begin_layout Standard
The following table documents common options which work with (almost) any
 command:
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="3">
<features islongtable="true" longtabularalignment="left">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0pt">
<row endhead="true" endfirsthead="true" endfoot="true" endlastfoot="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Option
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cmp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
--dry-run
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Run the command without actually creating symlinks or touching files or
 executing rsync.
 This option 
\emph on
should
\emph default
 be used first at any dangerous command, in order to check what would happen.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

Don't use in scripts! Only use by hand!
\end_layout

\begin_layout Plain Layout

\size scriptsize
This option does not change the waiting logic.
 Many commands are waiting until the desired effect has taken place.
 However, with 
\family typewriter
--dry-run
\family default
 the desired effect will never happen, so the command may wait forever (or
 abort with a timeout).
\end_layout

\begin_layout Plain Layout

\size scriptsize
In addition, this option can lead to additional aborts of the commands due
 to unmet conditions, which cannot be met because the symlinks are not actually
 created / altered.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Thus this option can give only a 
\series bold
rough estimate
\series default
 of what would happen later!
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
--force
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
almost
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Some preconditions are skipped, i.e.
 the command will / should work although some (more or less) vital preconditions
 are violated.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Instead of giving 
\family typewriter
--force
\family default
, you may alternatively prefix your command with 
\family typewriter
force-
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset

 THIS OPTION IS DANGEROUS!
\end_layout

\begin_layout Plain Layout

\size scriptsize
Use it only when you are absolutely sure that you know what you are doing!
\end_layout

\begin_layout Plain Layout

\size scriptsize
Use it only as a last resort if the same command without 
\family typewriter
--force
\family default
 has failed 
\emph on
for no good reason
\emph default
!
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
--verbose
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Some (few) commands will become more speaky.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
--timeout=$seconds
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Some commands require response from either the local kernel module, or from
 other cluster nodes.
 In order to prevent infinite waiting in case of network outages or other
 problems, the command will fail after the given timeout has been reached.
\end_layout

\begin_layout Plain Layout

\size scriptsize
When $seconds is -1, the command will wait forever.
\end_layout

\begin_layout Plain Layout

\size scriptsize
When $seconds is 0, the command will not wait in case any precondition is
 not met, und abort without performing an action..
\end_layout

\begin_layout Plain Layout

\size scriptsize
The default timeout is 5s.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
--window=$seconds
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
The time window for checking the aliveness of other nodes in the network.
 When no symlink updates have occurred during the last window, the node
 is considered dead.
 Default is 30s
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
--threshold=$size
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
The macros containing the substring 
\family typewriter
-threshold-
\family default
 use this as a default value for approximation whether something has been
 reached.
 Default is 10MiB.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
--host=$host
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
The command acts as if the command were executed on another host $host.
 This option should not be used regularly, because the local information
 in the symlink tree may be outdated or even wrong.
 Additionally, some local information like remote sizes of physical devices
 (e.g.
 remote disks) is not present in the symlink tree at all, or is wrong (reflectin
g only the 
\emph on
local
\emph default
 state).
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset

 THIS OPTION IS DANGEROUS!
\end_layout

\begin_layout Plain Layout

\size scriptsize
Use it only for final destruction of dead cluster nodes, see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Final-Destroy-of"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
--ip=$ip
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
By default, 
\family typewriter
marsadm
\family default
 always uses the IP for 
\family typewriter
$host
\family default
 as stored in the symlink tree (directory 
\family typewriter
/mars/ips/
\family default
).
 When such an IP entry does not (yet) exist (e.g.
 
\family typewriter
create-cluster
\family default
 or 
\family typewriter
join-cluster
\family default
), all local network interfaces are automatically scanned for IPv4 adresses,
 and the first one is taken.
 This may lead to wrong decisions if you have multiple network interfaces.
\end_layout

\begin_layout Plain Layout

\size scriptsize
In order to override the automatic IP detection and.to explicitly tell the
 IP address of your storage network, use this option.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset


\size scriptsize
Usually you will need this only at 
\family typewriter
{create,join}-cluster
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
--verbose
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Some (few) commands will become more speaky.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Cluster Operations
\begin_inset CommandInset label
LatexCommand label
name "sec:Cluster-Operations"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features islongtable="true" longtabularalignment="left">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0pt">
<row endhead="true" endfirsthead="true" endfoot="true" endlastfoot="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Command / Params
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cmp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
create-cluster
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the 
\family typewriter
/mars/
\family default
 filesystem must be mounted and it must be empty.
 The kernel module must 
\emph on
not
\emph default
 be loaded.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: the initial symlink tree is created in 
\family typewriter
/mars/
\family default
.
 Additionally, the 
\family typewriter
/mars/uuid
\family default
 symlink is created for later distribution in the cluster.
 It uniquely indentifies the cluster in the world.
\end_layout

\begin_layout Plain Layout

\size scriptsize
This must be called exactly once at the initial primary.
 
\end_layout

\begin_layout Plain Layout
Hint: use the 
\family typewriter
--ip=
\family default
 option if you have multiple interfaces.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
join-cluster
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$host
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the 
\family typewriter
/mars/
\family default
 filesystem must be mounted and it must be empty.
 The kernel module must not be loaded.
 The cluster must have been already created at another node 
\family typewriter
$host
\family default
.
 A working ssh connecttion to $host must exit (without password).
 
\family typewriter
rsync
\family default
 must be installed at all cluster nodes.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: the initial symlink tree 
\family typewriter
/mars/
\family default
 is replicated from the remote host 
\family typewriter
$host
\family default
, and the local host has been added as another cluster member.
\end_layout

\begin_layout Plain Layout

\size scriptsize
This must be called exactly once at every initial secondary node.
\end_layout

\begin_layout Plain Layout
Hint: use the 
\family typewriter
--ip=
\family default
 option if you have multiple interfaces.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
leave-cluster
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the 
\family typewriter
/mars/
\family default
 filesystem must be mounted and it must contain a valid MARS symlink tree
 produced by the other 
\family typewriter
marsadm
\family default
 commands.
 The kernel module must be loaded.
 The local node must no longe be member of any resource (see 
\family typewriter
marsadm leave-resource
\family default
).
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: the local node is removed from the replicated symlink tree
 
\family typewriter
/mars/
\family default
 such that other nodes will cease to communicate with it after a while.
 The local 
\family typewriter
/mars/
\family default
 filesystem may be manually destroyed afterwards (if you like).
\end_layout

\begin_layout Plain Layout

\size scriptsize
In case of an eventual node loss (e.g.
 fire, water, ...) this must be used.
 on another node $helper in order to finally remove $damaged from the cluster
 via the command 
\family typewriter
marsadm leave-cluster --host=$damaged --force
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
wait-cluster
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
See section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Waiting"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Resource Operations
\begin_inset CommandInset label
LatexCommand label
name "sec:Resource-Operations"

\end_inset


\end_layout

\begin_layout Standard
Common precondition for all resource operations is that the 
\family typewriter
/mars/
\family default
 filesystem is mounted, that it contains a valid MARS symlink tree produced
 by other 
\family typewriter
marsadm
\family default
 commands, that your current node is a member of the cluster, and that the
 kernel module is loaded.
 When communication is impossible due to network outages or bad firewall
 rules, most commands will succeed, but other cluster nodes may take a long
 time to notice your changes.
\end_layout

\begin_layout Subsection
Resource Creation / Deletion / Modification
\begin_inset CommandInset label
LatexCommand label
name "sub:Resource-Creation"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features islongtable="true" longtabularalignment="left">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0pt">
<row endhead="true" endfirsthead="true" endfoot="true" endlastfoot="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Command / Params
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cmp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
create-resource
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$disk_dev
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

[$mars_name]
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

[$size]
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the resource argument 
\family typewriter
$res
\family default
 must not denote an already existing resource name in the cluster.
 The argument 
\family typewriter
$disk_dev
\family default
 must denote an absolute path to a usable local block device, its size must
 be greater zero.
 When the optional 
\family typewriter
$mars_name
\family default
 is given, that name must not already exist on the local node; when not
 given, 
\family typewriter
$mars_name
\family default
 defaults to 
\family typewriter
$res
\family default
.
 When the optional 
\family typewriter
$size
\family default
 argument is given, it must be a number, optionally followed by suffix 
\family typewriter
k
\family default
, 
\family typewriter
m
\family default
, 
\family typewriter
g
\family default
, or 
\family typewriter
t
\family default
 (denoting size factors in powers of two).
 The given size must not exceed the actual size of 
\family typewriter
$disk_dev
\family default
.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: the resource 
\family typewriter
$res
\family default
 is created, the inital role of the current node is primary.
 The corresponding symlink tree information is asynchonously distributed
 in the cluster (in the background).
 The device 
\family typewriter
/dev/mars/$mars_name
\family default
 should appear after a while.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Notice: when 
\family typewriter
$size
\family default
 is strictly smaller than the size of 
\family typewriter
$disk_dev
\family default
, you will unnecessarily waste some space..
\end_layout

\begin_layout Plain Layout

\size scriptsize
This must be called exactly once for any new resource.
 
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
join-resource
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$disk_dev
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

[$mars_name]
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the resource argument 
\family typewriter
$res
\family default
 must denote an already existing resource in the cluster (i.e.
 its symlink tree information must have been received).
 The resource must have a designated primary.
 The local node must not be already member of that resource.
 The argument 
\family typewriter
$disk_dev
\family default
 must denote an absolute path to a usable local block device, its size must
 be greater or equal to the logical size of the resource.
 When the optional 
\family typewriter
$mars_name
\family default
 is given, that name must not already exist on the local node; when not
 given, 
\family typewriter
$mars_name
\family default
 defaults to 
\family typewriter
$res
\family default
.
 
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: the current node becomes a member of resource 
\family typewriter
$res
\family default
, the inital role is secondary.
 The initial full sync should start after a while.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Notice: when the size of $disk_dev is strictly greater than the size of
 the resource, you will unnecessarily waste some space..
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
leave-resource
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the local node must be a member of the resource 
\family typewriter
$res
\family default
; its current role must be secondary.
 Sync, fetch and replay must be paused (see commands 
\family typewriter
pause-{sync,fetch,replayy}
\family default
).
 The disk must be detatched (see command 
\family typewriter
down
\family default
).
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: the local node is no longer a member of 
\family typewriter
$res
\family default
.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Notice: as a side effect for other nodes, their 
\family typewriter
log-delete
\family default
 may now become possible, since the current node does no longer count as
 a candidate for logfile application.
 In addition, a split brain situation may be (partly) resolved by this.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset


\size scriptsize
 Please notice that this command 
\emph on
may
\emph default
 lead to (but does not guarantee) split-brain resolution.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset


\size scriptsize
The contents of the disk is not changed by this command.
 Before issuing this command, check whether the disk appears to be locally
 consistent (see 
\family typewriter
view-is-consistent
\family default
)! After giving this command, any internal information indicating the consistenc
y state will be gone, and you will no longer be able to guess consistency
 properties.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset


\size scriptsize
 When you are 
\emph on
sure
\emph default
.that the disk was consistent before (or is now by manually checking it),
 you may re-create a new resource out of it via 
\family typewriter
create-resource
\family default
.
\end_layout

\begin_layout Plain Layout

\size scriptsize
In case of an eventual node loss (e.g.
 fire, water, ...) this command may be used on another node $helper in order
 to finally remove all the resources $damaged from the cluster via the command
 
\family typewriter
marsadm leave-resource $res --host=$damaged --force
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
delete-resource
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the resource must be empty (i.e.
 all members must have left via 
\family typewriter
leave-resource
\family default
).
 This precondition is overridable by 
\family typewriter
--force
\family default
, increasing the danger to maximum!
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: all cluster members will somewhen be forcefully removed from
 
\family typewriter
$res
\family default
.
 In case of network interruptions, the forced removal may take place far
 in the future.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset

 THIS COMMAND IS 
\emph on
VERY
\emph default
 DANGEROUS!
\end_layout

\begin_layout Plain Layout

\size scriptsize
Use this only in desperate situations, and only manually.
 Don't call this from scripts.
 You are forcefully using a sledgehammer, even without 
\family typewriter
--force
\family default
! The danger is that the 
\emph on
true
\emph default
 state of other cluster nodes need not be known in case of network problems
 .Even when it were known, it could be compromised by 
\series bold
byzantine failures
\series default
.
\end_layout

\begin_layout Plain Layout

\size scriptsize
It is strongly advised to try this command with 
\family typewriter
--dry-run
\family default
 first.
\end_layout

\begin_layout Plain Layout

\size scriptsize
When combined with 
\family typewriter
--force
\family default
, this command will definitely 
\series bold
murder
\series default
 other cluster nodes, possibly after a long while, and even when they are
 operating in primary mode / having split brains / etc.
 However, there is no guarantee that other cluster nodes will be 
\emph on
really
\emph default
 dead -- it is (theoretically) possible that they remain only 
\emph on
half
\emph default
 
\emph on
dead
\emph default
.
 For example, a half dead node may continue to write data to 
\family typewriter
/mars/
\family default
 and thus lead to overflow somewhen.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset

This command implies a forceful detach, possibly destroying consistency.
 
\size scriptsize
In particular, when a cluster node was operating in primary mode (
\family typewriter
/dev/mars/mydata
\family default
 being continuously in use), the forceful detach cannot be carried out until
 the device is completely unused.
 In the meantime, the current transaction logfile will be appended to, but
 the file 
\emph on
might
\emph default
 be already unlinked (orphan file filling up the disk).
 After the forceful detach, the underlying disk need not be consistent (although
 MARS does its best).
 Since this command deletes any symlinks which normally would indicate the
 consistency state, no guarantees about consistency can be given after this
 
\emph on
in general
\emph default
! Always check consistency by hand!
\end_layout

\begin_layout Plain Layout

\size scriptsize
When possible / as soon as possible, check the local state on the other
 nodes in order to 
\emph on
really
\emph default
 shutdown the resource everywhere (e.g.
 to 
\emph on
really
\emph default
 unuse the 
\family typewriter
/dev/mars/mydata
\family default
 device, etc).
\end_layout

\begin_layout Plain Layout

\size scriptsize
After this command, you 
\emph on
should
\emph default
 rebuild the resource under a different name, in order to avoid any clashes
 caused by unexpected resurrection of 
\begin_inset Quotes eld
\end_inset

dead
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

half-dead
\begin_inset Quotes erd
\end_inset

 nodes (beware of shapshot / restores on virtual machines!!).
 MARS Light does its best to avoid problems even in case the new resource
 name should equal the old one, but there can be 
\emph on
no guarantee
\emph default
 in all possible failure scenarios / usage scenarios.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset


\size scriptsize
When possible, prefer 
\family typewriter
leave-resource
\family default
 over this!
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
wait-resource
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

{is-,}{attach,
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

 primary,
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

 device}{-off,}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
See section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Waiting"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Operation of the Resource
\begin_inset CommandInset label
LatexCommand label
name "sub:Operation-of-the"

\end_inset


\end_layout

\begin_layout Standard
Common preconditions are the preconditions from section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Resource-Operations"

\end_inset

, plus the respective resource 
\family typewriter
$res
\family default
 must exist, and the local node must be a member of it.
 With the single exception of 
\family typewriter
attach
\family default
 itself, all other operations must be started in 
\family typewriter
attached
\family default
 state.
\end_layout

\begin_layout Standard
When 
\family typewriter
$res
\family default
 has the special reserved value 
\family typewriter
all
\family default
, the following operations will work on all resources where the current
 node is a member (analogously to DRBD).
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="42" columns="3">
<features islongtable="true" longtabularalignment="left">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0pt">
<row endhead="true" endfirsthead="true" endfoot="true" endlastfoot="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Command / Params
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cmp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
attach
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
yes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the local disk belonging to $res is not in use by anyone else.
 Its contents has not been altered in the meantime since the last 
\family typewriter
detach
\family default
.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset


\size scriptsize
Mounting 
\emph on
read-only
\emph default
 is allowed during the detached phase.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset


\size scriptsize
However, be careful! If you 
\emph on
accidentally
\emph default
 forget to give the right readonly-mount flags, use 
\family typewriter
fsck
\family default
 inbetween, or alter the disk content in any other way (beware of LVM snapshots
 / restores etc), you will almost certainly produce an 
\series bold
unnoticed inconsistency
\series default
 (not reported by 
\family typewriter
view-is-consistent
\family default
)! MARS has 
\emph on
no chance
\emph default
 to notice suchalike!
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: MARS uses the local disk and is able work with it (e.g.
 replay logfiles on it).
\end_layout

\begin_layout Plain Layout

\size scriptsize
Note: the local disk is opened in exclusive read-write mode.
 This should protect against most common misuse, such as opening the disk
 in parallel to MARS.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset


\size scriptsize
However, this does not necessarily protect against non-exclusive openers.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
detach
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
yes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the local 
\family typewriter
/dev/mars/mydata
\family default
 device (when present) is no longer opened by anybody.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: the local disk belonging to $res is no longer in use.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset


\size scriptsize
In contrast to DRBD, you need not explicitly pause syncing, fetching, or
 replaying.
 These processes are automatically paused.
 As another contrast to DRBD, the respective processes should 
\emph on
automatically
\emph default
 resume after re-attach.
 This shouild work even over 
\family typewriter
rmmod
\family default
 or reboot cycles, since the internal symlink tree will automatically persist
 all switches for you.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset


\size scriptsize
WARNING! After this, you might use the underlying disk for other purposes,
 such as test-mounting it in 
\emph on
readonly
\emph default
 mode..
 
\series bold
Don't modifiy
\series default
 its contents in any way! Not even by an 
\family typewriter
fsck
\family default
! Otherwise, you will have inconsistencies 
\emph on
guaranteed
\emph default
.
 MARS has no way for knowing of any modifications to your disk when not
 written via 
\family typewriter
/dev/mars/*
\family default
.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset


\size scriptsize
In case you accidentally modified the underlying disk at the 
\emph on
primary
\emph default
 side, you may choose to resolve the inconsistencies by 
\family typewriter
marsadm invalide $res
\family default
 on 
\emph on
each
\emph default
 secondary.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
pause-sync
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Equivalent to 
\family typewriter
pause-sync-local
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
pause-sync-local
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: none additionally.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: any sync operation targeting the local disk (when not yet
 completed) is paused after a while.
 When completed, this operation will remember the switch state forever and
 automatically become relevant if a sync is needed again (e.g.
 
\family typewriter
invalidate
\family default
 or 
\family typewriter
resize
\family default
).
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
pause-sync-global
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Like 
\family typewriter
*-local
\family default
, but operates on all members of the resource.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
resume-sync
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Equivalent to 
\family typewriter
pause-sync-local
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
resume-sync-local
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: none additionally.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: any sync operation targeting the local disk (when not yet
 completed) is resumed after a while.
 When completed, this operation will remember the switch state forever and
 become relevant if a sync is needed again (e.g.
 
\family typewriter
invalidate
\family default
 or 
\family typewriter
resize
\family default
).
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
resume-sync-global
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Like 
\family typewriter
*-local
\family default
, but operates on all members of the resource.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
pause-fetch
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Equivalent to 
\family typewriter
pause-fetch-local
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
pause-fetch-local
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: none additionally.
 The resource 
\emph on
should
\emph default
 be in secondary role.
 Otherwise the switch has 
\emph on
no
\emph default
 
\emph on
immediate
\emph default
 effect, but will come (possibly unexpectedly) into effect whenever secondary
 role is entered later for whatever reason.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: any transfer of (parts of) transaction logfiles which are
 present at another primary host to the local 
\family typewriter
/mars/
\family default
 storage are paused at their current stage.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset


\size scriptsize
This switch works independently from 
\family typewriter
{pause,resume}-replay
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
pause-fetch-global
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Like 
\family typewriter
*-local
\family default
, but operates on all members of the resource.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
resume-fetch
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Equivalent to 
\family typewriter
resume-fetch-local
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
resume-fetch-local
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: none additionally.
 The resource 
\emph on
should
\emph default
 be in secondary role.
 Otherwise the switch has 
\emph on
no
\emph default
 
\emph on
immediate
\emph default
 effect, but will come (possibly unexpectedly) into effect whenever secondary
 role is entered later for whatever reason.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: any (parts of) transaction logfiles which are present at
 another primary host shouldl be transferred to the local 
\family typewriter
/mars/
\family default
 storage as far as not yet locally present.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset


\size scriptsize
This works independently from 
\family typewriter
{pause,resume}-replay
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
resume-fetch-global
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Like 
\family typewriter
*-local
\family default
, but operates on all members of the resource.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
pause-replay
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Equivalent to 
\family typewriter
pause-replay-local
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
pause-replay-local
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: none additionally.
 The resource 
\emph on
should
\emph default
 be in secondary role.
 Otherwise the switch has 
\emph on
no
\emph default
 
\emph on
immediate
\emph default
 effect, but will come (possibly unexpectedly) into effect whenever secondary
 role is entered later for whatever reason.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: any local replay operations of transaction logfiles to the
 local disk are paused at their current stage.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset


\size scriptsize
This works independently from 
\family typewriter
{pause,resume}-fetch
\family default
 resp.
 
\family typewriter
{dis,}connect
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
pause-replay-global
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Like 
\family typewriter
*-local
\family default
, but operates on all members of the resource.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
resume-replay
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Equivalent to 
\family typewriter
pause-replay-local
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
resume-replay-local
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\size scriptsize
Precondition: must be in secondary role.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: any (parts of) locally existing transaction logfiles (whether
 replicated from other hosts or produced locally) are started for replay
 to the local disk, as far as they have not yet been applied.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
resume-replay-global
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Like 
\family typewriter
*-local
\family default
, but operates on all members of the resource.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
connect
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Equivalent to 
\family typewriter
resume-fetch-local
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
connect-local
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Equivalent to 
\family typewriter
resume-fetch-local
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
connect-global
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Equivalent to 
\family typewriter
resume-fetch-global
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
disconnect
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Equivalent to 
\family typewriter
pause-fetch-local
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
disconnect-local
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Equivalent to 
\family typewriter
pause-fetch-local
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
disconnect-global
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
partly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Equivalent to 
\family typewriter
pause-fetch-global
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
up
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Equivalent to 
\family typewriter
attach
\family default
 followed by 
\family typewriter
resume-fetch
\family default
 followed by 
\family typewriter
resume-replay
\family default
 followed by 
\family typewriter
resume-sync
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
down
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Equivalent to 
\family typewriter
pause-sync
\family default
 followed by 
\family typewriter
pause-fetch
\family default
 followed by 
\family typewriter
pause-replay
\family default
 followed by 
\family typewriter
detach
\family default
.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset


\size scriptsize
Hint: consider to prefer plain 
\family typewriter
detach
\family default
 over this, because 
\family typewriter
detach
\family default
 will remember the last state of all switches, while 
\family typewriter
down
\family default
 will 
\emph on
not
\emph default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
primary
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
almost
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: all relevant transaction logfiles must be either already locally
 present, or be fetchable (see 
\family typewriter
resume-fetch
\family default
 and 
\family typewriter
resume-replay
\family default
).
 When another host is currently primary, it must match the preconditions
 of 
\family typewriter
marsadm secondary
\family default
 (that means, its local 
\family typewriter
/dev/mars/mydata
\family default
 device must not be in use any more).
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: 
\family typewriter
/dev/mars/$dev_name
\family default
 appears locally and is usable; the current host is in primary role.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Switches the 
\series bold
designated primary
\series default
.
 When another host is currently primary, it is first asked to become secondary,
 and it is waited until it actually has become secondary.
 After that, the local host is asked to become primary.
 Before actually becoming primary, all relevant logfiles are transferred
 over the network and replayed, in order to avoid accidental creation of
 split brain as best as possible
\begin_inset Foot
status open

\begin_layout Plain Layout

\size scriptsize
Note that split brain avoidance is 
\series bold
best effort
\series default
 and cannot be guaranteed in general.
 For example, it may be impossible to avoid split brain in case of long-lasting
 network outages.
\end_layout

\end_inset

.
 Only after that, 
\family typewriter
/dev/mars/$dev_name
\family default
 will appear.
 When network transfers of the symlink tree are very slow (or currently
 impossible), this command may take a very long time.
\end_layout

\begin_layout Plain Layout

\size scriptsize
In case a split brain is already detected at the initial situation, the
 local host will refuse to switch the designated primary without 
\family typewriter
--force
\family default
.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset


\family typewriter
\size scriptsize
primary --force
\family default
 is a potentially harmful variant, because it will provoke a split brain
 in most cases, and therefore in turn will usually lead to 
\series bold
data loss
\series default
 because one your split brain versions must be discarded later in order
 to resolve the split brain (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Split-Brain-Resolution"

\end_inset

).
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset


\series bold
\size scriptsize
Never
\series default
 call 
\family typewriter
primary --force
\family default
 when 
\family typewriter
primary
\family default
 without 
\family typewriter
--force
\family default
 is sufficient! If 
\family typewriter
primary
\family default
 without 
\family typewriter
--force
\family default
 complains that the device is in use at the former primary side, take it
 seriously! Don't override with 
\family typewriter
--force
\family default
, but rather umount the device at the other side!
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset


\size scriptsize
Only use 
\family typewriter
primary --force
\family default
 when something is 
\emph on
already broken
\emph default
, such as a network outage, or a node crash, etc.
 During ordinary operations (network OK, nodes OK), you should never need
 
\family typewriter
primary --force
\family default
!
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset


\family typewriter
\size scriptsize
primary --force
\family default
 switches only the 
\emph on
designated
\emph default
 primary, but actually becoming the/an actual primary may be impossible
 in case you are 
\emph on
already
\emph default
 in a split brain situation.
 In such a case, you 
\emph on
must
\emph default
 resolve the split brain immediately after giving this command (see section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Split-Brain-Resolution"

\end_inset

).
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset


\size scriptsize
Hint: in case of 
\family typewriter
primary --force
\family default
, the preconditions are different.
 The fetch must be switched off (see 
\family typewriter
pause-fetch
\family default
), in order to get stable logfile positions See section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Forced-Switching"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
secondary
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
almost
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the local 
\family typewriter
/dev/mars/$dev_name
\family default
 is no longer in use (e.g.
 umounted).
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: 
\family typewriter
/dev/mars/$dev_name
\family default
 has disappeared; at least the current host is in secondary role.
 In split brain situations (when the network is OK), 
\emph on
all
\emph default
 hosts will go into secondary role after a while.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset


\size scriptsize
Hint: avoid this command.
 It turns off 
\emph on
any
\emph default
 primary, 
\series bold
globally
\series default
.
 It is much better / easier to 
\emph on
directly
\emph default
 switch the primary from one node to another.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
wait-umount
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
See section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Waiting"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
log-purge-all
\begin_inset CommandInset label
LatexCommand label
name "log-purge-all$res"

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: none additionally.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: all locally known logfiles and version links are removed,
 whenever they are not / no longer reachable by any split brain version.
\end_layout

\begin_layout Plain Layout
Rationale: remove hindering split-brain / 
\family typewriter
leave-resource
\family default
 leftovers.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Use this only when split brain does not go away by means of 
\family typewriter
leave-resource
\family default
 (which 
\emph on
could
\emph default
 happen in very weird scenarios such as MARS running on virtual machines
 doing a restore of their snapshots, or otherwise unexpected resurrection
 of dead or half-dead nodes).
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset

 THIS IS POTENTIALLY DANGEROUS!
\end_layout

\begin_layout Plain Layout

\size scriptsize
This command 
\emph on
might
\emph default
 destroy some valuable logfiles / other information in case the local informatio
n is outdated or otherwise incorrect.
 MARS Light does its best for checking anything, but there is no guarantee.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Hint: use 
\family typewriter
--dry-run
\family default
 beforehand for checking!
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
resize
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

[$size]
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
almost
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: all disks in the cluster participating in 
\family typewriter
$res
\family default
 must be physically larger than the logical resource size (e.g.
 by use of 
\family typewriter
lvm
\family default
).
 When the optional 
\family typewriter
$size
\family default
 argument is present, it must be smaller than the minimum of all physical
 sizes, but larger than the current logical size.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: at the (future) primary (if any), the logical size of 
\family typewriter
/dev/mars/$dev_name
\family default
 will reflect the new size after a while.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Logfile Operations
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features islongtable="true" longtabularalignment="left">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0pt">
<row endhead="true" endfirsthead="true" endfoot="true" endlastfoot="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Command / Params
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cmp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
log-rotate
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the local node 
\family typewriter
$host
\family default
 must be primary at 
\family typewriter
$res
\family default
.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: after a while, a new transaction logfile 
\family typewriter
/mars/resource-$res/log-$new_nr-$host
\family default
 will be used instead of 
\family typewriter
/mars/resource-$res/log-$old_nr-$host
\family default
 where 
\family typewriter
$new_nr
\family default
 = 
\family typewriter
$old_nr
\family default
 + 1.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
log-delete
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the local node must be a member of 
\family typewriter
$res
\family default
.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: when there exists an old transaction logfile 
\family typewriter
/mars/resource-$res/log-$old_nr-$some_host
\family default
 where 
\family typewriter
$old_nr
\family default
 is the minimum existing number and that logfile is no longer referenced
 by any of the symlinks 
\family typewriter
/mars/resource-$res/replay-*
\family default
 , that logfile is marked for deletion in the whole cluster.
 When no such logfile exists, nothing will happen.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
log-delete-all
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Like 
\family typewriter
log-delete
\family default
, but mark 
\emph on
all
\emph default
 currently unreferenced logfiles for deletion.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Consistency Operations
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features islongtable="true" longtabularalignment="left">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0pt">
<row endhead="true" endfirsthead="true" endfoot="true" endlastfoot="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Command / Params
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cmp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
invalidate
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the local node must be in secondary role at 
\family typewriter
$res
\family default
.
 A 
\emph on
designated
\emph default
 primary must exist.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: the local disk is marked as inconsistent, and a fast fullsync
 from the designated primary will start after a while.
 Notice that 
\family typewriter
marsadm {pause,resume}-sync
\family default
 will influence whether the sync really starts.
 When the fullsync has finished successfully, the local node will be consistent
 again.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
fake-sync
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the local node must be in secondary role at 
\family typewriter
$res
\family default
.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: when a fullsync is running, it will stop after a while, and
 the local node will be 
\emph on
marked
\emph default
 as consistent as if it were consistent again.
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset


\size scriptsize
ONLY USE THIS IF YOU REALLY KNOW WHAT YOU ARE DOING!
\begin_inset Newline newline
\end_inset

See the WARNING in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Creating-and-Maintaining"

\end_inset


\begin_inset Newline newline
\end_inset

Use this only 
\emph on
after
\emph default
 having created a fresh filesystem inside 
\family typewriter
/dev/mars/$res
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
set-replay
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/MatieresToxiques.png
	lyxscale 50
	scale 17

\end_inset


\size scriptsize
ONLY FOR ADVANCED HACKERS WHO KNOW WHAT THEY ARE DOING!
\begin_inset Newline newline
\end_inset

This command is deliberately not documented.
 You need the competence level RTFS (
\begin_inset Quotes eld
\end_inset

read the fucking sources
\begin_inset Quotes erd
\end_inset

).
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Further Operations
\end_layout

\begin_layout Subsection
Inspection Commands
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="3">
<features islongtable="true" longtabularalignment="left">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0pt">
<row endhead="true" endfirsthead="true" endfoot="true" endlastfoot="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Command / Params
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cmp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
view-
\emph on
macroname
\begin_inset Newline newline
\end_inset


\emph default

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Display the output of a macro evaluation.
 See section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Inspecting-the-State"

\end_inset

 for a thorough description.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
view
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Equivalent to 
\family typewriter
view-default
\family default
.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
role
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Deprectated.
 Use 
\family typewriter
view-role
\family default
 instead.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
state
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Deprectated.
 Use 
\family typewriter
view-state
\family default
 instead.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
cstate
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Deprectated.
 Use 
\family typewriter
view-cstate
\family default
 instead.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
dstate
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Deprectated.
 Use 
\family typewriter
view-dstate
\family default
 instead.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
status
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Deprectated.
 Use 
\family typewriter
view-status
\family default
 instead.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
show-state
\end_layout

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Deprectated.
 Don't use it.
 Use 
\family typewriter
view-state
\family default
 instead, or other macros.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
show-info
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Deprectated.
 Don't use it.
 Use 
\family typewriter
view-info
\family default
 instead, or other macros.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
show
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Deprectated.
 Don't use it.
 Use or implement some macros instead.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
show-errors
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Deprectated.
 Use 
\family typewriter
view-the-err-msg
\family default
 or 
\family typewriter
view-resource-err
\family default
 similar macros.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
cat
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$file
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Write the file content to stdout, but replace all occurences of numeric
 timestamps converted to a human-readable format.
 Thus is most useful for inspection of status and log files, e.g.
 
\family typewriter
marsadm cat /mars/5.total.log
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Setting Parameters
\begin_inset CommandInset label
LatexCommand label
name "sub:Setting-Parameters"

\end_inset


\end_layout

\begin_layout Subsubsection
Per-Resource Parameters
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features islongtable="true" longtabularalignment="left">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0pt">
<row endhead="true" endfirsthead="true" endfoot="true" endlastfoot="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Command / Params
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cmp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
set-emergency-limit $res 
\emph on
n
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
The argument 
\emph on
n
\emph default
 must be percentage between 0 and 100 %.
 When the remaining store space in 
\family typewriter
/mars/
\family default
 undershoots the given percentage, the resource will go 
\emph on
earlier
\emph default
 into emergency mode than by the global computation described in section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Defending-Overflow"

\end_inset

.
 0 means unlimited.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
get-emergency-limit $res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Inquiry of the preceding value.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Global Parameters
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="3">
<features islongtable="true" longtabularalignment="left">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0pt">
<row endhead="true" endfirsthead="true" endfoot="true" endlastfoot="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Command / Params
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cmp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
set-sync-limit-value 
\emph on
n
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Limit the concurrency of sync operations to some maximum number.
 0 means unlimited.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
get-sync-limit-value
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Inquiry of the preceding value.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
set-sync-pref-list res1,res2,resn
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Set the order of preferences for syning.
 The argument must be comma-separated list of resource names.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
get-sync-pref-list
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Inquiry of the preceding value.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
set-connect-pref-list host1,host2,hostn
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Set the order of preferences for connections when there are more than 2
 hosts participating in a cluster.
 The argument must be comma-separated list of node names.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
get-connect-pref-list
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Inquiry of the preceding value.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Waiting
\begin_inset CommandInset label
LatexCommand label
name "sub:Waiting"

\end_inset


\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features islongtable="true" longtabularalignment="left">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0pt">
<row endhead="true" endfirsthead="true" endfoot="true" endlastfoot="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Command / Params
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cmp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
wait-cluster
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the 
\family typewriter
/mars/
\family default
 filesystem must be mounted and it must contain a valid MARS symlink tree
 produced by the other 
\family typewriter
marsadm
\family default
 commands.
 The kernel module must be loaded.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: none.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Wait until 
\emph on
all
\emph default
 nodes in the cluster have sent a message, or until timeout.
 The default timeout is 30 s (exceptionally) and may be changed by
\family typewriter
 --timeout=$seconds
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
wait-resource
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

{is-,}{attach,
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

 primary,
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

 device}{-off,}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: the local node must be a member of the resource 
\family typewriter
$res
\family default
.
 
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: none.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Wait until the local node reaches a specified condition on 
\family typewriter
$res
\family default
, or until timeout.
 The default timeout of 60 s may be changed by
\family typewriter
 --timeout=$seconds
\family default
.
 The last argument denotes the condition.
 The condition is inverted if suffixed by 
\family typewriter
-off
\family default
.
 When preceded by 
\family typewriter
is-
\family default
 (which is the most useful case), it is checked whether the condition is
 actually reached.
 When the 
\family typewriter
is-
\family default
 prefix is left off, the check is whether another 
\family typewriter
marsadm
\family default
 command has been already given which 
\emph on
tries
\emph default
 to achieves the intended result (typicially, you may use this after the
 
\family typewriter
is-
\family default
 variant has failed).
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
wait-connect
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
almost
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
This is an alias for 
\family typewriter
wait-cluster
\family default
 waiting until only those nodes are reachable which belong to 
\family typewriter
$res
\family default
 (instead of waiting for the 
\emph on
full
\emph default
 cluster).
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
wait-umount
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
strut
\backslash
hfill
\end_layout

\end_inset

$res
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Precondition: none additionally.
\end_layout

\begin_layout Plain Layout

\size scriptsize
Postcondition: the local 
\family typewriter
/dev/mars/$dev_name
\family default
 is no longer in use (e.g.
 umounted).
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Low-Level Helpers
\end_layout

\begin_layout Standard
These commands are for experts and advanced sysadmins only.
 The interface is not stable, i.e.
 the meaning may change at any time.
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features islongtable="true" longtabularalignment="left">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0pt">
<row endhead="true" endfirsthead="true" endfoot="true" endlastfoot="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Command / Params
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cmp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
set-link
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
RTFS.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
get-link
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
RTFS.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
delete-file
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
RTFS.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Senseless Commands (from DRBD)
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="3">
<features islongtable="true" longtabularalignment="left">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0pt">
<row endhead="true" endfirsthead="true" endfoot="true" endlastfoot="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Command / Params
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cmp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
syncer
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
new-current-uuid
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
create-md
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
dump-md
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
dump
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
get-gi
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
show-gi
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
outdate
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
adjust
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Implemented as NOP (not necessary with MARS).
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
hidden-commands
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Forbidden Commands (from DRBD)
\end_layout

\begin_layout Standard
These commands are not implemented because they would be dangerous in MARS
 context:
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features islongtable="true" longtabularalignment="left">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0pt">
<row endhead="true" endfirsthead="true" endfoot="true" endlastfoot="true">
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Command / Params
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cmp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
invalidate-remote
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
This is too dangerous in case you have multiple secondaries.
 A similar effect can be achieved with the 
\family typewriter
--host=
\family default
 option.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "20col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
verify
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "60col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
This would cause unintended side effects due to races between logfile transfer
 / application and block-wise comparison of the underlying disks.
 However, MARS 
\family typewriter
invalide
\family default
 will do the same as DRBD verify followed by DRBD resync, i.e.
 
\family typewriter
marsadm invalidate
\family default
 will automatically correct any found errors; note that the fast-fullsync
 algorithm of MARS will minimize network traffic.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
The 
\family typewriter
/proc/sys/mars/
\family default
 and other Expert Tweaks
\begin_inset CommandInset label
LatexCommand label
name "sec:The-/proc/sys/mars/-Expert"

\end_inset


\end_layout

\begin_layout Standard
In general, you shouldn't need to deal with any tweaks in 
\family typewriter
/proc/sys/mars/
\family default
 because everything should already default to reasonable predefined values.
 This interface allows access to some internal kernel variables of the 
\family typewriter
mars.ko
\family default
 kernel module at runtime.
 Thus it is 
\emph on
not
\emph default
 a stable interface.
 It is not only specific for MARS Light, but may also change between releases
 without notice.
\end_layout

\begin_layout Standard
This section describes only those tweaks intended for sysadmins, not those
 for developers / very deep internals.
\end_layout

\begin_layout Subsection
Syslogging
\end_layout

\begin_layout Standard
All internal messages produced by the kernel module belong to one of the
 following classes:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
0 debug messages
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
1 info messages
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
2 warnings
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
3 error messages
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
4 fatal error messages
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
5 any message (summary of 0 to 4)
\end_layout

\begin_layout Subsubsection
Logging to Files
\end_layout

\begin_layout Standard
These classes are used to produce status files 
\family typewriter
$class.*.status
\family default
 in the 
\family typewriter
/mars/
\family default
 and/or in the 
\family typewriter
/mars/resource-
\emph on
mydata
\emph default
/
\family default
 directory / directories.
\end_layout

\begin_layout Standard
When you create a file 
\family typewriter
$class.*.log
\family default
 in parallel to any 
\family typewriter
$class.*.status
\family default
, the 
\family typewriter
*.log
\family default
 file will be appended forever with the same messages as in 
\family typewriter
*.status
\family default
.
 The difference is that *.status is regenerated anew from an empty starting
 point, while *.log can (potentially) increase indefinitely unless you remove
 it, or rename it to something else.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

Beware, any permamently present 
\family typewriter
*.log
\family default
 file can easily fill up your 
\family typewriter
/mars/
\family default
 partition until the problems described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Defending-Overflow"

\end_inset

 will appear.
 Use 
\family typewriter
*.log
\family default
 only for a 
\series bold
limited time
\series default
, and 
\series bold
only for debugging!
\end_layout

\begin_layout Subsubsection
Logging to Syslog
\end_layout

\begin_layout Standard
The classes also play a role in the following 
\family typewriter
/proc/sys/mars/
\family default
 tweaks:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
syslog_min_class
\family default
 (rw) The 
\emph on
mimimum
\emph default
 class number for 
\emph on
permanent
\emph default
 syslogging.
 By default, this is set to -1 in order to switch off perment logging completely.
 Permament logging can easily flood your syslog with such huge amounts of
 messages (in particular when class=0), that your system as a whole may
 become unusable (because vital kernel threads may be blocked too long or
 too often by the userspace syslog daemon).
 Instead, please use the flood-protected syslogging described below!
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
syslog_max_class
\family default
 (rw) The 
\emph on
maximum
\emph default
 class number for 
\emph on
permanent
\emph default
 syslogging.
 Please use the flood-protected version instead.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
syslog_flood_class
\family default
 (rw) The mimimum class of flood-protected syslogging.
 The maximum class is always 4.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
syslog_flood_limit
\family default
 (rw) The maxmimum number of messages after which the flood protection will
 start.
 This is a hard limit for the the number of messages written to the syslog.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
syslog_flood_recovery_s
\family default
 (rw) The number of seconds after which the internal flood counter is reset
 (after flood protection state has been reached).
 When no new messages appear after this time, the flood protection will
 start over at count 0.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

The rationale behind flood protected syslogging: sysadmins are usually only
 interested in the point in time where some problems / incidents / etc have
 
\emph on
started
\emph default
.
 They are usually not interested in capturing 
\emph on
each
\emph default
 and 
\emph on
every
\emph default
 single error message (in particular when they are flooding the system logs).
\end_layout

\begin_layout Standard
\noindent
\begin_inset Graphics
	filename images/lightbulb_brightlit_benj_.png
	lyxscale 12
	scale 7

\end_inset

If you 
\emph on
really
\emph default
 need complete error information, use the 
\family typewriter
*.log
\family default
 files described above, compress them and save them to somewhere else 
\emph on
regularly
\emph default
 by a cron job.
 This bears much less overhead than filtering via the syslog daemon, or
 even remote syslogging in real time which will almost surely screw up your
 system in case of network problems co-inciding with flood messages, such
 as caused in turn by those problems.
 Don't rely on real-time concepts, just do it the old-fashioned batch job
 way.
\end_layout

\begin_layout Subsubsection
Tuning Verbosity of Logging
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
show_debug_messages
\family default
 Boolean switch, 0 or 1.
 Mostly useful only for developers.
 This can easily flood your logs if our are not careful.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
show_log_messages
\family default
 Boolean switch, 0 or 1.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
show_connections
\family default
 Boolean switch, 0 or 1.
 Show detailed internal statistics on sockets.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
show_statistics_local
\begin_inset space ~
\end_inset

/
\begin_inset space ~
\end_inset

show_statistics_global
\family default
 Only useful for kernel developers.
 Shows some internal information on internal brick instances, memory usage,
 etc.
\end_layout

\begin_layout Subsection
Tuning the Sync
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
sync_flip_interval_sec
\family default
 (rw) The sync process must not run in parallel to logfile replay, in order
 to easily guarantee consistency of your disk.
 If logfile replay would be paused for the full duration of very large or
 long-lasting syncs (which could take some days over very slow networks),
 your 
\family typewriter
/mars/
\family default
 filesystem could overflow because no replay would be possible in the meantime.
 Therefore, MARS Light regulary flips between actually syncing and actually
 replaying, if both is enabled.
 You can set the time interval for flipping here.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
sync_limit
\family default
 (rw) When > 0, this limits the maximum number of sync processes actually
 running parallel.
 This is useful if you have a large number of resources, and you don't want
 to overload the network with sync processes.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
sync_nr
\family default
 (ro) Passive indicator for the number of sync processes currently running.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
sync_want
\family default
 (ro) Passive indicator for the number of sync processes which 
\emph on
demand
\emph default
 running.
\end_layout

\begin_layout Chapter
MARS for Developers
\end_layout

\begin_layout Standard
This chapter is organized strictly top-down.
\end_layout

\begin_layout Standard
If you are a sysadmin and want to inform yourself about internals (useful
 for debugging), the relevant information is at the beginning, and you don't
 need to dive into all technical details at the end (e.g., you may stop after
 reading the documentation on symlink trees or even use that documentation
 like an encyclopedia).
\end_layout

\begin_layout Standard
If you are a kernel developer and want to contribute code to the MARS community,
 please read it (almost) all.
 Due to the top-down organization, sometimes you will need to follow some
 forward references in order to understand details.
 Therefore I recommend reading this chapter twice in two different reading
 modes: in the first reading pass, you just get a raw network of principles
 and structures in your brain (you don't want to grasp details, therefore
 don't strive for a full understanding).
 In the second pass, you exploit your knowlegde from the first pass for
 a deeper understanding of the details.
\end_layout

\begin_layout Standard
Alternatively, you may first read the first section about general architecture,
 and then start a bottom-up scan by first reading the last section about
 generic objects and aspects, and working in reverse 
\emph on
section
\emph default
 order (but read 
\emph on
sub
\emph default
sections in-order) until you finally reach the kernel interfaces / symlink
 trees.
\end_layout

\begin_layout Section
General Architecture
\end_layout

\begin_layout Standard
The following pictures show some 
\begin_inset Quotes eld
\end_inset

zones of responsibility
\begin_inset Quotes erd
\end_inset

, not necessarily a strict hierarchy (although Dijkstra's famous layering
 rules from THE are tried to be respected as much as possible).
 The construction principles follow the concepts of 
\series bold
Instance Oriented Programming
\series default
 (IOP) described in 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://athomux.net/papers/paper_inst2.pdf
\end_layout

\end_inset

.
 Please note that MARS Light is only instance-based
\begin_inset Foot
status open

\begin_layout Plain Layout
Similar to OOP, where 
\begin_inset Quotes eld
\end_inset

object-based
\begin_inset Quotes erd
\end_inset

 means a weaker form of 
\begin_inset Quotes eld
\end_inset

object-oriented
\begin_inset Quotes erd
\end_inset

, the term 
\begin_inset Quotes eld
\end_inset

instance-based
\begin_inset Quotes erd
\end_inset

 means that the 
\emph on
strategy
\emph default
 brick layer need not be fully modularized according to the IOP principles,
 but the 
\emph on
worker
\emph default
 brick layer already is.
\end_layout

\end_inset

, while MARS Full is planned to be fully instance-oriented.
\end_layout

\begin_layout Subsection
MARS Light Architecture
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename images/mars-light-architecture.fig
	width 40col%

\end_inset


\end_layout

\begin_layout Subsection
MARS Full Architecture (planned)
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename images/mars-full-architecture.fig
	width 80col%

\end_inset


\end_layout

\begin_layout Section
Documentation of the Symlink Trees
\begin_inset CommandInset label
LatexCommand label
name "sec:Documentation-of-the"

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
/mars/
\family default
 symlink tree is serving the following purposes, all at the same time:
\end_layout

\begin_layout Enumerate
For 
\series bold
communication
\series default
 between cluster nodes, see sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-Lamport-Clock"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-Symlink-Tree"

\end_inset

.
 This communication is even the 
\emph on
only
\emph default
 communication between cluster nodes (apart from the 
\emph on
contents
\emph default
 of transaction logfiles and sync data).
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Internal
\emph default
 interface
\series default
 between the kernel module and the userspace tool 
\family typewriter
marsadm
\family default
.
\end_layout

\begin_layout Enumerate

\series bold
\emph on
Internal
\emph default
 persistent repository
\series default
 which keeps state information between reboots (also in case of node crashes).
 It is even the 
\emph on
only
\emph default
 place where state information is kept.
 There is no other place like 
\family typewriter
/etc/drbd.conf
\family default
.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/MatieresCorrosives.png
	lyxscale 50
	scale 17

\end_inset

Because of its internal character, its representation and semantics may
 change at any time without notice (e.g.
 via an 
\emph on
internal
\emph default
 upgrade procedure between major releases).
 It is 
\emph on
not
\emph default
 an external interface to the outer world.
 Don't build anything on it.
\end_layout

\begin_layout Standard
However, knowledge of the symlink tree is useful for advanced sysadmins,
 for 
\series bold
human inspection
\series default
 and for 
\series bold
debugging
\series default
.
 And, of course, for developers.
\end_layout

\begin_layout Standard
As an 
\begin_inset Quotes eld
\end_inset

official
\begin_inset Quotes erd
\end_inset

 interface from outside, only the 
\family typewriter
marsadm
\family default
 command should be used.
\end_layout

\begin_layout Subsection
Documentation of the MARS Light Symlink Tree
\end_layout

\begin_layout Section
MARS Worker Bricks
\end_layout

\begin_layout Section
MARS Strategy Bricks
\end_layout

\begin_layout Section
The MARS Brick Infrastructure Layer
\end_layout

\begin_layout Section
The Generic Brick Infrastructure Layer
\end_layout

\begin_layout Section
The Generic Object and Aspect Infrastructure
\end_layout

\begin_layout Chapter
\start_of_appendix
Technical Data MARS Light
\end_layout

\begin_layout Standard
MARS Light has some built-in limitations which should be overcome
\begin_inset Foot
status open

\begin_layout Plain Layout
Some internal algorithms are quadratic.
 The reason is that MARS Light evolved from a lab prototype which wasn't
 originally intended for enterprise grade usage, but should have been succeeded
 by the fully instance-oriented MARS Full much earlier.
\end_layout

\end_inset

 by the future MARS Full.
 Please don't exceed the following limits:
\end_layout

\begin_layout Itemize
maximum 10 nodes per cluster
\end_layout

\begin_layout Itemize
maximum 10 resources per cluster
\end_layout

\begin_layout Itemize
maximum 100 logfiles per resource
\end_layout

\begin_layout Chapter
GNU Free Documentation License
\begin_inset CommandInset label
LatexCommand label
name "chap:GNU-FDL"

\end_inset


\end_layout

\begin_layout Standard
\noindent

\family typewriter
\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting{fdl.txt}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
